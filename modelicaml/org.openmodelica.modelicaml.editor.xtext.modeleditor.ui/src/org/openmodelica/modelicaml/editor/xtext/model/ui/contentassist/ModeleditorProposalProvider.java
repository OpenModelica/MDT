/*
* generated by Xtext
*/
package org.openmodelica.modelicaml.editor.xtext.model.ui.contentassist;

import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.openmodelica.modelicaml.editor.xtext.model.ui.contentassist.AbstractModeleditorProposalProvider;
import org.eclipse.jface.text.contentassist.ICompletionProposal;
import org.eclipse.swt.graphics.Image;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;
import org.openmodelica.modelicaml.common.contentassist.ModelicaMLContentAssist;
/**
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on how to customize content assistant
 */
public class ModeleditorProposalProvider extends AbstractModeleditorProposalProvider {
	@Override
	public void complete_component_reference(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor)
	{
		super.complete_component_reference(model, ruleCall, context, acceptor);
		List<String> cList = ModelicaMLContentAssist.getComponentReferenceSortedList();

		for (String string : cList) {
			String completionString = string;
			String displayString = ModelicaMLContentAssist.getDisplayCompletionString(context.getPrefix(), completionString);
			
			Image image = ModelicaMLContentAssist.getIcon(string);
//			if (image == null) { //special case: then the component name was replaced by another string, e.g. when using value bindings. 
//				image = SWTResourceManager.getImage(SWTResourceManager.class, "/icons/valueMediator.png");
//			}
			
			ICompletionProposal completionProposal = createCompletionProposal(completionString, displayString, image, context);
			acceptor.accept(completionProposal);
		}
	}
		
	@Override
	public void complete_name(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor)
	{
		super.complete_name(model, ruleCall, context, acceptor);
		List<String> cList = ModelicaMLContentAssist.getComponentReferenceSortedList();
		for (String string : cList) {
			String completionString = string;
			String displayString = ModelicaMLContentAssist.getDisplayCompletionString(context.getPrefix(), completionString);
			
			Image image = ModelicaMLContentAssist.getIcon(string);
//			if (image == null) { //special case: then the component name was replaced by another string, e.g. when using value bindings. 
//				image = SWTResourceManager.getImage(SWTResourceManager.class, "/icons/valueMediator.png");
//			}
			
			ICompletionProposal completionProposal = createCompletionProposal(completionString, displayString, image, context);

			acceptor.accept(completionProposal);
		}
	}
}
