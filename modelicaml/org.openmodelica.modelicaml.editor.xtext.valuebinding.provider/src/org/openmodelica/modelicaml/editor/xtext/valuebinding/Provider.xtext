grammar org.openmodelica.modelicaml.editor.xtext.valuebinding.Provider 
	with org.openmodelica.modelicaml.editor.xtext.model.Modeleditor

import "http://www.eclipse.org/uml2/3.0.0/UML" as uml
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate provider "http://www.openmodelica.org/modelicaml/editor/xtext/valuebinding/Provider"

ProviderOperation : 
	(Expr=expression)? // optional expression
	;

// Note: these are identical to modeleditor. It is neccesary to overwrite it in order to be able to modify the code completion and validation.
name :
	('.')? name_ID=IDENT ( '.' nam_ID+=IDENT )*
	;
component_reference:
	('.')? ref=IDENT (subscripts1=array_subscripts)? ('.' ref1+=IDENT (subscripts+=array_subscripts)?)* 
	;


//primary :
//num=UNSIGNED_NUMBER
//| int=INT
//| str=STRING
//| Bool=BOOL_VAL
//| Name_Function=name_Function
//| Initial_ref=initial_ref
//| Expr=ExprDer
////| specificFunction=SpecificFunction // only for Value Provider
//| Component_reference=component_reference
//| '(' output_expr_list=output_expression_list ')'
//| '[' Expre_list=expression_list ( ';' Expression_list+=expression_list)* ']'
//| '{' f_arguments=function_arguments '}'
//| End='end'
//;

//SpecificFunction : // only for Value Provider
//	'getOwnPath' Brackets
//	;
//
//Brackets : 
//	'(' ')';

	
// override the definition from the reused grammar.
//name : {name}
//	('.')? name_ID=IDENT ( '.' nam_ID+=IDENT )*
//	| ('.')? name_ID=SpecificFunction ( '.' nam_ID+=IDENT )*
//;


//component_reference:
//	ref=IDENT (subscripts1=array_subscripts)? ('.' ref1+=IDENT (subscripts+=array_subscripts)?)*
//	| ref=SpecificFunction (subscripts1=array_subscripts)? ('.' ref1+=IDENT (subscripts+=array_subscripts)?)*
//	| ('.')? ref=IDENT (subscripts1=array_subscripts)? ('.' ref1+=IDENT (subscripts+=array_subscripts)?)*
//	;