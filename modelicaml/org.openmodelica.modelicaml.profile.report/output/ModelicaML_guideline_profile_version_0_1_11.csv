Note: You need to format the file as follows:
-> resize the rows in order to see all data properly
-> replace all "Â" with ""
-> replace all the "or ###end" with ""
-> copy data into empty col. from another col. if required
-> sort the data if required
-> delete all rows that are empty or not relevant
-> highlight (font, color, etc. ) the headlines or title rows if usefull

ModelicaML (UML Profile);
Profile Version: 0.1.11;

Which ModelicaML stereotypes can I apply to which UML meta-classes?
To a UML ... ; you can apply the ModelicaML stereotype ...;
FunctionBehavior;«Function»;
Class;«Block»;
Class;«Model»;
Class;«ModelicaPackage»;
Class;«Connector»;
Class;«Record»;
PrimitiveType;«Type»;
Class;«CalculationModel»;
Enumeration;«ModelicaEnumeration»;
Class;«ModelicaClass»;
Class;«Operator»;
Class;«ModelicaModelReference»;
Property;«Component»;
Port;«ConnectionPort»;
Property;«Variable»;
Connector;«Connection»;
Parameter;«FunctionArgument»;
Property;«CalculatedProperty»;
OpaqueBehavior;«Algorithm(Code)»;
OpaqueBehavior;«Equations(Code)»;
DecisionNode;«If»;
DecisionNode;«When»;
Activity;«ConditionalAlgorithm(Diagram)»;
Activity;«ConditionalEquations(Diagram)»;
OpaqueAction;«Equations(CodeInDiagram)»;
OpaqueAction;«AlgorithmStatements(CodeInDiagram)»;
Constraint;«Assert»;
StateMachine;«ModelicaMLStateMachine»;
ControlFlow or Transition;«StateDependency»;
Transition or ControlFlow or Region;«ExecutionOrderPriority»;
Transition;«StateTransitionSpecification»;
State or StateMachine;«StateSpecification»;
StateMachine;«AdditionalIncludes»;
Generalization;«TypeRelation»;
Generalization;«ExtendsRelation»;
Dependency;«RedeclareRelation»;
Dependency;«ConstrainedByRelation»;
Dependency;«PartialDerivativeOfFunctionRelation»;
Dependency;«Import»;
Class;«Requirement»;
Property;«RequirementInstance»;
NamedElement;«Traceability»;
Class;«Simulation»;
Property;«UserInteractive»;
StateMachine or OpaqueBehavior or Activity;«ExcludeFromCGIfUserInteractive»;
Element;«CodeGeneration»;
Comment;«Annotation(Documentation)»;
Comment;«Annotation(CodeGeneration)»;
Comment;«Annotation(SimulationExperiment)»;
Comment;«Annotation»;
Comment;«Annotation(VersionHandling)»;
Comment;«Annotation(Icon)»;
Package;«TestSuite»;
Class;«TestScenario»;
Dependency;«UsedToVerify»;
Dependency;«Includes»;
Dependency;«Requires»;
Class;«Test»;
Dependency;«RequiredFor»;
Class;«ValueMediatorsContainer»;
Property;«ValueClient»;
Property;«ValueMediator»;
Property or State;«ValueProvider»;
Dependency;«ObtainsValueFrom»;
Dependency;«ProvidesValueFor»;

Which UML elements should I create in order to represent a Modelica ... ?;
In order to create a Modelica ...; create a UML ...; and apply the ModelicaML Stereotype ...;
Function;FunctionBehavior;«Function»;
Block;Class;«Block»;
Model;Class;«Model»;
Package;Class;«ModelicaPackage»;
Connector;Class;«Connector»;
Record;Class;«Record»;
Type;PrimitiveType;«Type»;
CalculationModel;Class;«CalculationModel»;
Enumeration;Enumeration;«ModelicaEnumeration»;
Class;Class;«ModelicaClass»;
Operator;Class;«Operator»;
ModelReference;Class;«ModelicaModelReference»;
Component;Property;«Component»;
ConnectionPort;Port;«ConnectionPort»;
Variable;Property;«Variable»;
Connection;Connector;«Connection»;
FunctionArgument;Parameter;«FunctionArgument»;
CalculatedProperty;Property;«CalculatedProperty»;
Algorithm(Code);OpaqueBehavior;«Algorithm(Code)»;
Equations(Code);OpaqueBehavior;«Equations(Code)»;
If;DecisionNode;«If»;
When;DecisionNode;«When»;
ConditionalAlgorithm(Diagram);Activity;«ConditionalAlgorithm(Diagram)»;
ConditionalEquations(Diagram);Activity;«ConditionalEquations(Diagram)»;
Equations(CodeInDiagram);OpaqueAction;«Equations(CodeInDiagram)»;
AlgorithmStatements(CodeInDiagram);OpaqueAction;«AlgorithmStatements(CodeInDiagram)»;
Assert;Constraint;«Assert»;
MLStateMachine;StateMachine;«ModelicaMLStateMachine»;
StateDependency;ControlFlow or Transition;«StateDependency»;
ExecutionOrderPriority;Transition or ControlFlow or Region;«ExecutionOrderPriority»;
StateTransitionSpecification;Transition;«StateTransitionSpecification»;
StateSpecification;State or StateMachine;«StateSpecification»;
AdditionalIncludes;StateMachine;«AdditionalIncludes»;
TypeRelation;Generalization;«TypeRelation»;
ExtendsRelation;Generalization;«ExtendsRelation»;
RedeclareRelation;Dependency;«RedeclareRelation»;
ConstrainedByRelation;Dependency;«ConstrainedByRelation»;
PartialDerivativeOfFunctionRelation;Dependency;«PartialDerivativeOfFunctionRelation»;
Import;Dependency;«Import»;
Requirement;Class;«Requirement»;
RequirementInstance;Property;«RequirementInstance»;
Traceability;NamedElement;«Traceability»;
Simulation;Class;«Simulation»;
UserInteractive;Property;«UserInteractive»;
ExcludeFromCGIfUserInteractive;StateMachine or OpaqueBehavior or Activity;«ExcludeFromCGIfUserInteractive»;
CodeGeneration;Element;«CodeGeneration»;
Annotation(Documentation);Comment;«Annotation(Documentation)»;
Annotation(CodeGeneration);Comment;«Annotation(CodeGeneration)»;
Annotation(SimulationExperiment);Comment;«Annotation(SimulationExperiment)»;
Annotation;Comment;«Annotation»;
Annotation(VersionHandling);Comment;«Annotation(VersionHandling)»;
Annotation(Icon);Comment;«Annotation(Icon)»;
TestSuite;Package;«TestSuite»;
TestScenario;Class;«TestScenario»;
UsedToVerify;Dependency;«UsedToVerify»;
Includes;Dependency;«Includes»;
Requires;Dependency;«Requires»;
Test;Class;«Test»;
RequiredFor;Dependency;«RequiredFor»;
ValueMediatorsContainer;Class;«ValueMediatorsContainer»;
ValueClient;Property;«ValueClient»;
ValueMediator;Property;«ValueMediator»;
ValueProvider;Property or State;«ValueProvider»;
ObtainsValueFrom;Dependency;«ObtainsValueFrom»;
ProvidesValueFor;Dependency;«ProvidesValueFor»;

Where can I set the Modelica keyword ... ?;
In order to set the Modelica keyword ... ; apply the ModelicaML stereotype ...; to a UML ...; and use the attribute ...;
'inner' or 'outer';«Function»;FunctionBehavior or ###end;"scope" (of the «Function» stereotype);
'expandable';«Connector»;Class or ###end;"expandable" (of the «Connector» stereotype);
'input' or 'output';«ConnectionPort»;Port or ###end;"causality" (of the «ConnectionPort» stereotype);
'flow' or 'stream';«Variable»;Property or ###end;"flowFlag" (of the «Variable» stereotype);
'inner' or 'outer';«Variable»;Property or ###end;"scope" (of the «Variable» stereotype);
'input' or 'output';«Variable»;Property or ###end;"causality" (of the «Variable» stereotype);
'continuous' or 'discrete' or 'parameter' or 'constant';«Variable»;Property or ###end;"variability" (of the «Variable» stereotype);
'flow' or 'stream';«FunctionArgument»;Parameter or ###end;"flowFlag" (of the «FunctionArgument» stereotype);
'inner' or 'outer';«FunctionArgument»;Parameter or ###end;"scope" (of the «FunctionArgument» stereotype);
'input' or 'output';«FunctionArgument»;Parameter or ###end;"causality" (of the «FunctionArgument» stereotype);
'continuous' or 'discrete' or 'parameter' or 'constant';«FunctionArgument»;Parameter or ###end;"variability" (of the «FunctionArgument» stereotype);
'initial';«Algorithm(Code)»;OpaqueBehavior or ###end;"initial" (of the «Algorithm(Code)» stereotype);
'initial';«Equations(Code)»;OpaqueBehavior or ###end;"initial" (of the «Equations(Code)» stereotype);
'isSubActivity';«ConditionalAlgorithm(Diagram)»;Activity or ###end;"isSubActivity" (of the «ConditionalAlgorithm(Diagram)» stereotype);
'initial';«ConditionalAlgorithm(Diagram)»;Activity or ###end;"initial" (of the «ConditionalAlgorithm(Diagram)» stereotype);
'isSubActivity';«ConditionalEquations(Diagram)»;Activity or ###end;"isSubActivity" (of the «ConditionalEquations(Diagram)» stereotype);
'initial';«ConditionalEquations(Diagram)»;Activity or ###end;"initial" (of the «ConditionalEquations(Diagram)» stereotype);
'warning' or 'error';«Assert»;Constraint or ###end;"level" (of the «Assert» stereotype);
'and' or 'or' or 'not';«StateDependency»;ControlFlow or Transition or ###end;"logicalOperator" (of the «StateDependency» stereotype);
'suppressExitActions';«StateTransitionSpecification»;Transition or ###end;"suppressExitActions" (of the «StateTransitionSpecification» stereotype);
'suppressEntryActions';«StateTransitionSpecification»;Transition or ###end;"suppressEntryActions" (of the «StateTransitionSpecification» stereotype);
'generateInteractiveSimInitFile';«CodeGeneration»;Element or ###end;"generateInteractiveSimInitFile" (of the «CodeGeneration» stereotype);
'excludeFromCG';«CodeGeneration»;Element or ###end;"excludeFromCG" (of the «CodeGeneration» stereotype);
'Evaluate';«Annotation(CodeGeneration)»;Comment or ###end;"Evaluate" (of the «Annotation(CodeGeneration)» stereotype);
'HideResult';«Annotation(CodeGeneration)»;Comment or ###end;"HideResult" (of the «Annotation(CodeGeneration)» stereotype);
'Inline';«Annotation(CodeGeneration)»;Comment or ###end;"Inline" (of the «Annotation(CodeGeneration)» stereotype);
'LateInline';«Annotation(CodeGeneration)»;Comment or ###end;"LateInline" (of the «Annotation(CodeGeneration)» stereotype);
'always';«Requires»;Dependency or ###end;"always" (of the «Requires» stereotype);
'continuous' or 'discrete' or 'parameter' or 'constant';«ValueMediator»;Property or ###end;"variability" (of the «ValueMediator» stereotype);
'isRequired';«ProvidesValueFor»;Dependency or ###end;"isRequired" (of the «ProvidesValueFor» stereotype);

Where can I define ... ?;
You can define a ... using the attribute (with the same name) ...; of the ModelicaML stereotype ...; that is applied to a UML ...; !!! copy this column into the first column!!!;
 ;«Function»;FunctionBehavior;'externalLanguageSpecification' or 'externalFunctionCall' or 'externalAnnotation' or 'iconImagePath' or ###end;
 ;«Block»;Class;'iconImagePath' or ###end;
 ;«Model»;Class;'iconImagePath' or ###end;
 ;«ModelicaPackage»;Class;'iconImagePath' or ###end;
 ;«Connector»;Class;'iconImagePath' or ###end;
 ;«Record»;Class;'iconImagePath' or ###end;
 ;«Type»;PrimitiveType;'iconImagePath' or ###end;
 ;«CalculationModel»;Class;'iconImagePath' or ###end;
 ;«ModelicaEnumeration»;Enumeration;'iconImagePath' or ###end;
 ;«ModelicaClass»;Class;'iconImagePath' or ###end;
 ;«Operator»;Class;'iconImagePath' or ###end;
 ;«ModelicaModelReference»;Class;'modelPath' or ###end;
 ;«Component»;Property;'modification' or 'arraySize' or 'conditionalExpression' or 'iconImagePath' or ###end;
 ;«ConnectionPort»;Port;'modification' or 'arraySize' or 'conditionalExpression' or 'iconImagePath' or ###end;
 ;«Variable»;Property;'declarationEquationOrAssignment' or 'modification' or 'arraySize' or 'conditionalExpression' or 'iconImagePath' or ###end;
 ;«Connection»;Connector;'explicitConnectionEnds' or ###end;
 ;«FunctionArgument»;Parameter;'declarationEquationOrAssignment' or 'modification' or 'arraySize' or 'conditionalExpression' or 'iconImagePath' or ###end;
 ;«CalculatedProperty»;Property;'modification' or 'arraySize' or 'conditionalExpression' or 'iconImagePath' or ###end;
 ;«Algorithm(Code)»;OpaqueBehavior;'forIndices' or 'whileExpression' or ###end;
 ;«Equations(Code)»;OpaqueBehavior;'forIndices' or ###end;
 ;«If»;DecisionNode;###end;
 ;«When»;DecisionNode;###end;
 ;«ConditionalAlgorithm(Diagram)»;Activity;'forIndices' or 'whileExpression' or ###end;
 ;«ConditionalEquations(Diagram)»;Activity;'forIndices' or ###end;
 ;«Equations(CodeInDiagram)»;OpaqueAction;'forIndices' or ###end;
 ;«AlgorithmStatements(CodeInDiagram)»;OpaqueAction;'forIndices' or 'whileExpression' or ###end;
 ;«Assert»;Constraint;'condition' or 'message' or ###end;
 ;«ModelicaMLStateMachine»;StateMachine;'samplingExpression' or ###end;
 ;«StateDependency»;ControlFlow or Transition;###end;
 ;«ExecutionOrderPriority»;Transition or ControlFlow or Region;###end;
 ;«StateTransitionSpecification»;Transition;###end;
 ;«StateSpecification»;State or StateMachine;'freezeExpression' or ###end;
 ;«AdditionalIncludes»;StateMachine;'additionalActionCode' or ###end;
 ;«TypeRelation»;Generalization;'modification' or 'arraySize' or ###end;
 ;«ExtendsRelation»;Generalization;'modification' or ###end;
 ;«RedeclareRelation»;Dependency;'modification' or ###end;
 ;«ConstrainedByRelation»;Dependency;'modification' or ###end;
 ;«PartialDerivativeOfFunctionRelation»;Dependency;'arguments' or ###end;
 ;«Import»;Dependency;'alias' or ###end;
 ;«Requirement»;Class;'id' or 'text' or 'specifiesObject' or 'iconImagePath' or ###end;
 ;«RequirementInstance»;Property;'modification' or 'arraySize' or 'conditionalExpression' or 'iconImagePath' or ###end;
 ;«Traceability»;NamedElement;###end;
 ;«Simulation»;Class;'tolerance' or ###end;
 ;«UserInteractive»;Property;'declaration' or ###end;
 ;«ExcludeFromCGIfUserInteractive»;StateMachine or OpaqueBehavior or Activity;###end;
 ;«CodeGeneration»;Element;###end;
 ;«Annotation(Documentation)»;Comment;'info' or 'revisions' or ###end;
 ;«Annotation(CodeGeneration)»;Comment;###end;
 ;«Annotation(SimulationExperiment)»;Comment;###end;
 ;«Annotation»;Comment;'fullAnnotationString' or ###end;
 ;«Annotation(VersionHandling)»;Comment;'version' or 'conversion' or 'uses' or ###end;
 ;«Annotation(Icon)»;Comment;'iconAnnotationString' or ###end;
 ;«TestSuite»;Package;###end;
 ;«TestScenario»;Class;'tolerance' or ###end;
 ;«UsedToVerify»;Dependency;###end;
 ;«Includes»;Dependency;###end;
 ;«Requires»;Dependency;###end;
 ;«Test»;Class;###end;
 ;«RequiredFor»;Dependency;###end;
 ;«ValueMediatorsContainer»;Class;###end;
 ;«ValueClient»;Property;'operation' or ###end;
 ;«ValueMediator»;Property;'preferredProviders' or 'operation' or ###end;
 ;«ValueProvider»;Property or State;'operation' or ###end;
 ;«ObtainsValueFrom»;Dependency;'operation' or ###end;
 ;«ProvidesValueFor»;Dependency;'operation' or ###end;
