/*
* generated by Xtext
*/
grammar InternalModification;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.openmodelica.modelicaml.editor.xtext.modification.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.openmodelica.modelicaml.editor.xtext.modification.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.openmodelica.modelicaml.editor.xtext.modification.services.ModificationGrammarAccess;

}

@parser::members {
 
 	private ModificationGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ModificationGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulemodification_alternatives
entryRulemodification_alternatives 
:
{ before(grammarAccess.getModification_alternativesRule()); }
	 rulemodification_alternatives
{ after(grammarAccess.getModification_alternativesRule()); } 
	 EOF 
;

// Rule modification_alternatives
rulemodification_alternatives
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModification_alternativesAccess().getAlternatives()); }
(rule__Modification_alternatives__Alternatives)
{ after(grammarAccess.getModification_alternativesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleleft_hand_component_reference
entryRuleleft_hand_component_reference 
:
{ before(grammarAccess.getLeft_hand_component_referenceRule()); }
	 ruleleft_hand_component_reference
{ after(grammarAccess.getLeft_hand_component_referenceRule()); } 
	 EOF 
;

// Rule left_hand_component_reference
ruleleft_hand_component_reference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLeft_hand_component_referenceAccess().getGroup()); }
(rule__Left_hand_component_reference__Group__0)
{ after(grammarAccess.getLeft_hand_component_referenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemodification
entryRulemodification 
:
{ before(grammarAccess.getModificationRule()); }
	 rulemodification
{ after(grammarAccess.getModificationRule()); } 
	 EOF 
;

// Rule modification
rulemodification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModificationAccess().getAlternatives()); }
(rule__Modification__Alternatives)
{ after(grammarAccess.getModificationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleclass_modification
entryRuleclass_modification 
:
{ before(grammarAccess.getClass_modificationRule()); }
	 ruleclass_modification
{ after(grammarAccess.getClass_modificationRule()); } 
	 EOF 
;

// Rule class_modification
ruleclass_modification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClass_modificationAccess().getGroup()); }
(rule__Class_modification__Group__0)
{ after(grammarAccess.getClass_modificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleargument_list
entryRuleargument_list 
:
{ before(grammarAccess.getArgument_listRule()); }
	 ruleargument_list
{ after(grammarAccess.getArgument_listRule()); } 
	 EOF 
;

// Rule argument_list
ruleargument_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgument_listAccess().getArgumentParserRuleCall()); }
	ruleargument
{ after(grammarAccess.getArgument_listAccess().getArgumentParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleargument
entryRuleargument 
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleargument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule argument
ruleargument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentAccess().getAlternatives()); }
(rule__Argument__Alternatives)
{ after(grammarAccess.getArgumentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelement_modification_or_replaceable
entryRuleelement_modification_or_replaceable 
:
{ before(grammarAccess.getElement_modification_or_replaceableRule()); }
	 ruleelement_modification_or_replaceable
{ after(grammarAccess.getElement_modification_or_replaceableRule()); } 
	 EOF 
;

// Rule element_modification_or_replaceable
ruleelement_modification_or_replaceable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElement_modification_or_replaceableAccess().getGroup()); }
(rule__Element_modification_or_replaceable__Group__0)
{ after(grammarAccess.getElement_modification_or_replaceableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelement_modification
entryRuleelement_modification 
:
{ before(grammarAccess.getElement_modificationRule()); }
	 ruleelement_modification
{ after(grammarAccess.getElement_modificationRule()); } 
	 EOF 
;

// Rule element_modification
ruleelement_modification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElement_modificationAccess().getGroup()); }
(rule__Element_modification__Group__0)
{ after(grammarAccess.getElement_modificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelement_replaceable
entryRuleelement_replaceable 
:
{ before(grammarAccess.getElement_replaceableRule()); }
	 ruleelement_replaceable
{ after(grammarAccess.getElement_replaceableRule()); } 
	 EOF 
;

// Rule element_replaceable
ruleelement_replaceable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElement_replaceableAccess().getGroup()); }
(rule__Element_replaceable__Group__0)
{ after(grammarAccess.getElement_replaceableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconstraining_clause
entryRuleconstraining_clause 
:
{ before(grammarAccess.getConstraining_clauseRule()); }
	 ruleconstraining_clause
{ after(grammarAccess.getConstraining_clauseRule()); } 
	 EOF 
;

// Rule constraining_clause
ruleconstraining_clause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraining_clauseAccess().getGroup()); }
(rule__Constraining_clause__Group__0)
{ after(grammarAccess.getConstraining_clauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelement_redeclaration
entryRuleelement_redeclaration 
:
{ before(grammarAccess.getElement_redeclarationRule()); }
	 ruleelement_redeclaration
{ after(grammarAccess.getElement_redeclarationRule()); } 
	 EOF 
;

// Rule element_redeclaration
ruleelement_redeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElement_redeclarationAccess().getGroup()); }
(rule__Element_redeclaration__Group__0)
{ after(grammarAccess.getElement_redeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecomponent_clause
entryRulecomponent_clause 
:
{ before(grammarAccess.getComponent_clauseRule()); }
	 rulecomponent_clause
{ after(grammarAccess.getComponent_clauseRule()); } 
	 EOF 
;

// Rule component_clause
rulecomponent_clause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponent_clauseAccess().getGroup()); }
(rule__Component_clause__Group__0)
{ after(grammarAccess.getComponent_clauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecomponent_list
entryRulecomponent_list 
:
{ before(grammarAccess.getComponent_listRule()); }
	 rulecomponent_list
{ after(grammarAccess.getComponent_listRule()); } 
	 EOF 
;

// Rule component_list
rulecomponent_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponent_listAccess().getGroup()); }
(rule__Component_list__Group__0)
{ after(grammarAccess.getComponent_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecomponent_declaration
entryRulecomponent_declaration 
:
{ before(grammarAccess.getComponent_declarationRule()); }
	 rulecomponent_declaration
{ after(grammarAccess.getComponent_declarationRule()); } 
	 EOF 
;

// Rule component_declaration
rulecomponent_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponent_declarationAccess().getGroup()); }
(rule__Component_declaration__Group__0)
{ after(grammarAccess.getComponent_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconditional_attribute
entryRuleconditional_attribute 
:
{ before(grammarAccess.getConditional_attributeRule()); }
	 ruleconditional_attribute
{ after(grammarAccess.getConditional_attributeRule()); } 
	 EOF 
;

// Rule conditional_attribute
ruleconditional_attribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditional_attributeAccess().getGroup()); }
(rule__Conditional_attribute__Group__0)
{ after(grammarAccess.getConditional_attributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecomponent_clause1
entryRulecomponent_clause1 
:
{ before(grammarAccess.getComponent_clause1Rule()); }
	 rulecomponent_clause1
{ after(grammarAccess.getComponent_clause1Rule()); } 
	 EOF 
;

// Rule component_clause1
rulecomponent_clause1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponent_clause1Access().getGroup()); }
(rule__Component_clause1__Group__0)
{ after(grammarAccess.getComponent_clause1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecomponent_declaration1
entryRulecomponent_declaration1 
:
{ before(grammarAccess.getComponent_declaration1Rule()); }
	 rulecomponent_declaration1
{ after(grammarAccess.getComponent_declaration1Rule()); } 
	 EOF 
;

// Rule component_declaration1
rulecomponent_declaration1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponent_declaration1Access().getGroup()); }
(rule__Component_declaration1__Group__0)
{ after(grammarAccess.getComponent_declaration1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletype_specifier
entryRuletype_specifier 
:
{ before(grammarAccess.getType_specifierRule()); }
	 ruletype_specifier
{ after(grammarAccess.getType_specifierRule()); } 
	 EOF 
;

// Rule type_specifier
ruletype_specifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType_specifierAccess().getNameAssignment()); }
(rule__Type_specifier__NameAssignment)
{ after(grammarAccess.getType_specifierAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledeclaration
entryRuledeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruledeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule declaration
ruledeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getGroup()); }
(rule__Declaration__Group__0)
{ after(grammarAccess.getDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleclass_definition
entryRuleclass_definition 
:
{ before(grammarAccess.getClass_definitionRule()); }
	 ruleclass_definition
{ after(grammarAccess.getClass_definitionRule()); } 
	 EOF 
;

// Rule class_definition
ruleclass_definition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClass_definitionAccess().getGroup()); }
(rule__Class_definition__Group__0)
{ after(grammarAccess.getClass_definitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleclass_specifier
entryRuleclass_specifier 
:
{ before(grammarAccess.getClass_specifierRule()); }
	 ruleclass_specifier
{ after(grammarAccess.getClass_specifierRule()); } 
	 EOF 
;

// Rule class_specifier
ruleclass_specifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClass_specifierAccess().getGroup()); }
(rule__Class_specifier__Group__0)
{ after(grammarAccess.getClass_specifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulebase_prefix
entryRulebase_prefix 
:
{ before(grammarAccess.getBase_prefixRule()); }
	 rulebase_prefix
{ after(grammarAccess.getBase_prefixRule()); } 
	 EOF 
;

// Rule base_prefix
rulebase_prefix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBase_prefixAccess().getType_prefixParserRuleCall()); }
	ruletype_prefix
{ after(grammarAccess.getBase_prefixAccess().getType_prefixParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletype_prefix
entryRuletype_prefix 
:
{ before(grammarAccess.getType_prefixRule()); }
	 ruletype_prefix
{ after(grammarAccess.getType_prefixRule()); } 
	 EOF 
;

// Rule type_prefix
ruletype_prefix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType_prefixAccess().getGroup()); }
(rule__Type_prefix__Group__0)
{ after(grammarAccess.getType_prefixAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleenum_list
entryRuleenum_list 
:
{ before(grammarAccess.getEnum_listRule()); }
	 ruleenum_list
{ after(grammarAccess.getEnum_listRule()); } 
	 EOF 
;

// Rule enum_list
ruleenum_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnum_listAccess().getGroup()); }
(rule__Enum_list__Group__0)
{ after(grammarAccess.getEnum_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleenumeration_literal
entryRuleenumeration_literal 
:
{ before(grammarAccess.getEnumeration_literalRule()); }
	 ruleenumeration_literal
{ after(grammarAccess.getEnumeration_literalRule()); } 
	 EOF 
;

// Rule enumeration_literal
ruleenumeration_literal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumeration_literalAccess().getGroup()); }
(rule__Enumeration_literal__Group__0)
{ after(grammarAccess.getEnumeration_literalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecomposition
entryRulecomposition 
:
{ before(grammarAccess.getCompositionRule()); }
	 rulecomposition
{ after(grammarAccess.getCompositionRule()); } 
	 EOF 
;

// Rule composition
rulecomposition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompositionAccess().getGroup()); }
(rule__Composition__Group__0)
{ after(grammarAccess.getCompositionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelement_list
entryRuleelement_list 
:
{ before(grammarAccess.getElement_listRule()); }
	 ruleelement_list
{ after(grammarAccess.getElement_listRule()); } 
	 EOF 
;

// Rule element_list
ruleelement_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElement_listAccess().getGroup()); }
(rule__Element_list__Group__0)
{ after(grammarAccess.getElement_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelement
entryRuleelement 
:
{ before(grammarAccess.getElementRule()); }
	 ruleelement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule element
ruleelement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementAccess().getAlternatives()); }
(rule__Element__Alternatives)
{ after(grammarAccess.getElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleequation_section
entryRuleequation_section 
:
{ before(grammarAccess.getEquation_sectionRule()); }
	 ruleequation_section
{ after(grammarAccess.getEquation_sectionRule()); } 
	 EOF 
;

// Rule equation_section
ruleequation_section
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEquation_sectionAccess().getGroup()); }
(rule__Equation_section__Group__0)
{ after(grammarAccess.getEquation_sectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleequation
entryRuleequation 
:
{ before(grammarAccess.getEquationRule()); }
	 ruleequation
{ after(grammarAccess.getEquationRule()); } 
	 EOF 
;

// Rule equation
ruleequation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEquationAccess().getGroup()); }
(rule__Equation__Group__0)
{ after(grammarAccess.getEquationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulewhen_equation
entryRulewhen_equation 
:
{ before(grammarAccess.getWhen_equationRule()); }
	 rulewhen_equation
{ after(grammarAccess.getWhen_equationRule()); } 
	 EOF 
;

// Rule when_equation
rulewhen_equation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhen_equationAccess().getGroup()); }
(rule__When_equation__Group__0)
{ after(grammarAccess.getWhen_equationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleif_equation
entryRuleif_equation 
:
{ before(grammarAccess.getIf_equationRule()); }
	 ruleif_equation
{ after(grammarAccess.getIf_equationRule()); } 
	 EOF 
;

// Rule if_equation
ruleif_equation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIf_equationAccess().getGroup()); }
(rule__If_equation__Group__0)
{ after(grammarAccess.getIf_equationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefor_equation
entryRulefor_equation 
:
{ before(grammarAccess.getFor_equationRule()); }
	 rulefor_equation
{ after(grammarAccess.getFor_equationRule()); } 
	 EOF 
;

// Rule for_equation
rulefor_equation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFor_equationAccess().getGroup()); }
(rule__For_equation__Group__0)
{ after(grammarAccess.getFor_equationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconnect_clause
entryRuleconnect_clause 
:
{ before(grammarAccess.getConnect_clauseRule()); }
	 ruleconnect_clause
{ after(grammarAccess.getConnect_clauseRule()); } 
	 EOF 
;

// Rule connect_clause
ruleconnect_clause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConnect_clauseAccess().getGroup()); }
(rule__Connect_clause__Group__0)
{ after(grammarAccess.getConnect_clauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulealgorithm_section
entryRulealgorithm_section 
:
{ before(grammarAccess.getAlgorithm_sectionRule()); }
	 rulealgorithm_section
{ after(grammarAccess.getAlgorithm_sectionRule()); } 
	 EOF 
;

// Rule algorithm_section
rulealgorithm_section
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlgorithm_sectionAccess().getGroup()); }
(rule__Algorithm_section__Group__0)
{ after(grammarAccess.getAlgorithm_sectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatement
entryRulestatement 
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getGroup()); }
(rule__Statement__Group__0)
{ after(grammarAccess.getStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestate_OutputExprList
entryRulestate_OutputExprList 
:
{ before(grammarAccess.getState_OutputExprListRule()); }
	 rulestate_OutputExprList
{ after(grammarAccess.getState_OutputExprListRule()); } 
	 EOF 
;

// Rule state_OutputExprList
rulestate_OutputExprList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getState_OutputExprListAccess().getGroup()); }
(rule__State_OutputExprList__Group__0)
{ after(grammarAccess.getState_OutputExprListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestate_Comp_Ref
entryRulestate_Comp_Ref 
:
{ before(grammarAccess.getState_Comp_RefRule()); }
	 rulestate_Comp_Ref
{ after(grammarAccess.getState_Comp_RefRule()); } 
	 EOF 
;

// Rule state_Comp_Ref
rulestate_Comp_Ref
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getState_Comp_RefAccess().getGroup()); }
(rule__State_Comp_Ref__Group__0)
{ after(grammarAccess.getState_Comp_RefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulewhen_statement
entryRulewhen_statement 
:
{ before(grammarAccess.getWhen_statementRule()); }
	 rulewhen_statement
{ after(grammarAccess.getWhen_statementRule()); } 
	 EOF 
;

// Rule when_statement
rulewhen_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhen_statementAccess().getGroup()); }
(rule__When_statement__Group__0)
{ after(grammarAccess.getWhen_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulewhile_statement
entryRulewhile_statement 
:
{ before(grammarAccess.getWhile_statementRule()); }
	 rulewhile_statement
{ after(grammarAccess.getWhile_statementRule()); } 
	 EOF 
;

// Rule while_statement
rulewhile_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhile_statementAccess().getGroup()); }
(rule__While_statement__Group__0)
{ after(grammarAccess.getWhile_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefor_statement
entryRulefor_statement 
:
{ before(grammarAccess.getFor_statementRule()); }
	 rulefor_statement
{ after(grammarAccess.getFor_statementRule()); } 
	 EOF 
;

// Rule for_statement
rulefor_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFor_statementAccess().getGroup()); }
(rule__For_statement__Group__0)
{ after(grammarAccess.getFor_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleif_statement
entryRuleif_statement 
:
{ before(grammarAccess.getIf_statementRule()); }
	 ruleif_statement
{ after(grammarAccess.getIf_statementRule()); } 
	 EOF 
;

// Rule if_statement
ruleif_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIf_statementAccess().getGroup()); }
(rule__If_statement__Group__0)
{ after(grammarAccess.getIf_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleextends_clause
entryRuleextends_clause 
:
{ before(grammarAccess.getExtends_clauseRule()); }
	 ruleextends_clause
{ after(grammarAccess.getExtends_clauseRule()); } 
	 EOF 
;

// Rule extends_clause
ruleextends_clause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtends_clauseAccess().getGroup()); }
(rule__Extends_clause__Group__0)
{ after(grammarAccess.getExtends_clauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleannotation
entryRuleannotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleannotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule annotation
ruleannotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getGroup()); }
(rule__Annotation__Group__0)
{ after(grammarAccess.getAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleimport_clause
entryRuleimport_clause 
:
{ before(grammarAccess.getImport_clauseRule()); }
	 ruleimport_clause
{ after(grammarAccess.getImport_clauseRule()); } 
	 EOF 
;

// Rule import_clause
ruleimport_clause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImport_clauseAccess().getGroup()); }
(rule__Import_clause__Group__0)
{ after(grammarAccess.getImport_clauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelanguage_specification
entryRulelanguage_specification 
:
{ before(grammarAccess.getLanguage_specificationRule()); }
	 rulelanguage_specification
{ after(grammarAccess.getLanguage_specificationRule()); } 
	 EOF 
;

// Rule language_specification
rulelanguage_specification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLanguage_specificationAccess().getStrAssignment()); }
(rule__Language_specification__StrAssignment)
{ after(grammarAccess.getLanguage_specificationAccess().getStrAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexternal_function_call
entryRuleexternal_function_call 
:
{ before(grammarAccess.getExternal_function_callRule()); }
	 ruleexternal_function_call
{ after(grammarAccess.getExternal_function_callRule()); } 
	 EOF 
;

// Rule external_function_call
ruleexternal_function_call
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExternal_function_callAccess().getGroup()); }
(rule__External_function_call__Group__0)
{ after(grammarAccess.getExternal_function_callAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpression
entryRuleexpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesimple_expression
entryRulesimple_expression 
:
{ before(grammarAccess.getSimple_expressionRule()); }
	 rulesimple_expression
{ after(grammarAccess.getSimple_expressionRule()); } 
	 EOF 
;

// Rule simple_expression
rulesimple_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimple_expressionAccess().getGroup()); }
(rule__Simple_expression__Group__0)
{ after(grammarAccess.getSimple_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconditional_expr
entryRuleconditional_expr 
:
{ before(grammarAccess.getConditional_exprRule()); }
	 ruleconditional_expr
{ after(grammarAccess.getConditional_exprRule()); } 
	 EOF 
;

// Rule conditional_expr
ruleconditional_expr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditional_exprAccess().getGroup()); }
(rule__Conditional_expr__Group__0)
{ after(grammarAccess.getConditional_exprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelogical_expression
entryRulelogical_expression 
:
{ before(grammarAccess.getLogical_expressionRule()); }
	 rulelogical_expression
{ after(grammarAccess.getLogical_expressionRule()); } 
	 EOF 
;

// Rule logical_expression
rulelogical_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogical_expressionAccess().getGroup()); }
(rule__Logical_expression__Group__0)
{ after(grammarAccess.getLogical_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelogical_term
entryRulelogical_term 
:
{ before(grammarAccess.getLogical_termRule()); }
	 rulelogical_term
{ after(grammarAccess.getLogical_termRule()); } 
	 EOF 
;

// Rule logical_term
rulelogical_term
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogical_termAccess().getGroup()); }
(rule__Logical_term__Group__0)
{ after(grammarAccess.getLogical_termAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelogical_factor
entryRulelogical_factor 
:
{ before(grammarAccess.getLogical_factorRule()); }
	 rulelogical_factor
{ after(grammarAccess.getLogical_factorRule()); } 
	 EOF 
;

// Rule logical_factor
rulelogical_factor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogical_factorAccess().getGroup()); }
(rule__Logical_factor__Group__0)
{ after(grammarAccess.getLogical_factorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerelation
entryRulerelation 
:
{ before(grammarAccess.getRelationRule()); }
	 rulerelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule relation
rulerelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationAccess().getGroup()); }
(rule__Relation__Group__0)
{ after(grammarAccess.getRelationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulearithmetic_expression
entryRulearithmetic_expression 
:
{ before(grammarAccess.getArithmetic_expressionRule()); }
	 rulearithmetic_expression
{ after(grammarAccess.getArithmetic_expressionRule()); } 
	 EOF 
;

// Rule arithmetic_expression
rulearithmetic_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getGroup()); }
(rule__Arithmetic_expression__Group__0)
{ after(grammarAccess.getArithmetic_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleterm
entryRuleterm 
:
{ before(grammarAccess.getTermRule()); }
	 ruleterm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule term
ruleterm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTermAccess().getGroup()); }
(rule__Term__Group__0)
{ after(grammarAccess.getTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefactor
entryRulefactor 
:
{ before(grammarAccess.getFactorRule()); }
	 rulefactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule factor
rulefactor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFactorAccess().getGroup()); }
(rule__Factor__Group__0)
{ after(grammarAccess.getFactorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleprimary
entryRuleprimary 
:
{ before(grammarAccess.getPrimaryRule()); }
	 ruleprimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule primary
ruleprimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
(rule__Primary__Alternatives)
{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulename_Function
entryRulename_Function 
:
{ before(grammarAccess.getName_FunctionRule()); }
	 rulename_Function
{ after(grammarAccess.getName_FunctionRule()); } 
	 EOF 
;

// Rule name_Function
rulename_Function
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getName_FunctionAccess().getGroup()); }
(rule__Name_Function__Group__0)
{ after(grammarAccess.getName_FunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleinitial_ref
entryRuleinitial_ref 
:
{ before(grammarAccess.getInitial_refRule()); }
	 ruleinitial_ref
{ after(grammarAccess.getInitial_refRule()); } 
	 EOF 
;

// Rule initial_ref
ruleinitial_ref
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitial_refAccess().getGroup()); }
(rule__Initial_ref__Group__0)
{ after(grammarAccess.getInitial_refAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprDer
entryRuleExprDer 
:
{ before(grammarAccess.getExprDerRule()); }
	 ruleExprDer
{ after(grammarAccess.getExprDerRule()); } 
	 EOF 
;

// Rule ExprDer
ruleExprDer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprDerAccess().getGroup()); }
(rule__ExprDer__Group__0)
{ after(grammarAccess.getExprDerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunction_call_args
entryRulefunction_call_args 
:
{ before(grammarAccess.getFunction_call_argsRule()); }
	 rulefunction_call_args
{ after(grammarAccess.getFunction_call_argsRule()); } 
	 EOF 
;

// Rule function_call_args
rulefunction_call_args
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunction_call_argsAccess().getGroup()); }
(rule__Function_call_args__Group__0)
{ after(grammarAccess.getFunction_call_argsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpression_list
entryRuleexpression_list 
:
{ before(grammarAccess.getExpression_listRule()); }
	 ruleexpression_list
{ after(grammarAccess.getExpression_listRule()); } 
	 EOF 
;

// Rule expression_list
ruleexpression_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_listAccess().getGroup()); }
(rule__Expression_list__Group__0)
{ after(grammarAccess.getExpression_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulename
entryRulename 
:
{ before(grammarAccess.getNameRule()); }
	 rulename
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule name
rulename
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameAccess().getGroup()); }
(rule__Name__Group__0)
{ after(grammarAccess.getNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecomponent_reference
entryRulecomponent_reference 
:
{ before(grammarAccess.getComponent_referenceRule()); }
	 rulecomponent_reference
{ after(grammarAccess.getComponent_referenceRule()); } 
	 EOF 
;

// Rule component_reference
rulecomponent_reference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponent_referenceAccess().getGroup()); }
(rule__Component_reference__Group__0)
{ after(grammarAccess.getComponent_referenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleoutput_expression_list
entryRuleoutput_expression_list 
:
{ before(grammarAccess.getOutput_expression_listRule()); }
	 ruleoutput_expression_list
{ after(grammarAccess.getOutput_expression_listRule()); } 
	 EOF 
;

// Rule output_expression_list
ruleoutput_expression_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutput_expression_listAccess().getGroup()); }
(rule__Output_expression_list__Group__0)
{ after(grammarAccess.getOutput_expression_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulearray_subscripts
entryRulearray_subscripts 
:
{ before(grammarAccess.getArray_subscriptsRule()); }
	 rulearray_subscripts
{ after(grammarAccess.getArray_subscriptsRule()); } 
	 EOF 
;

// Rule array_subscripts
rulearray_subscripts
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArray_subscriptsAccess().getGroup()); }
(rule__Array_subscripts__Group__0)
{ after(grammarAccess.getArray_subscriptsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesubscript
entryRulesubscript 
:
{ before(grammarAccess.getSubscriptRule()); }
	 rulesubscript
{ after(grammarAccess.getSubscriptRule()); } 
	 EOF 
;

// Rule subscript
rulesubscript
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubscriptAccess().getAlternatives()); }
(rule__Subscript__Alternatives)
{ after(grammarAccess.getSubscriptAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunction_arguments
entryRulefunction_arguments 
:
{ before(grammarAccess.getFunction_argumentsRule()); }
	 rulefunction_arguments
{ after(grammarAccess.getFunction_argumentsRule()); } 
	 EOF 
;

// Rule function_arguments
rulefunction_arguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunction_argumentsAccess().getAlternatives()); }
(rule__Function_arguments__Alternatives)
{ after(grammarAccess.getFunction_argumentsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFun_Arguments_exp
entryRuleFun_Arguments_exp 
:
{ before(grammarAccess.getFun_Arguments_expRule()); }
	 ruleFun_Arguments_exp
{ after(grammarAccess.getFun_Arguments_expRule()); } 
	 EOF 
;

// Rule Fun_Arguments_exp
ruleFun_Arguments_exp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFun_Arguments_expAccess().getGroup()); }
(rule__Fun_Arguments_exp__Group__0)
{ after(grammarAccess.getFun_Arguments_expAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFun_Arguments_for
entryRuleFun_Arguments_for 
:
{ before(grammarAccess.getFun_Arguments_forRule()); }
	 ruleFun_Arguments_for
{ after(grammarAccess.getFun_Arguments_forRule()); } 
	 EOF 
;

// Rule Fun_Arguments_for
ruleFun_Arguments_for
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFun_Arguments_forAccess().getGroup()); }
(rule__Fun_Arguments_for__Group__0)
{ after(grammarAccess.getFun_Arguments_forAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenamed_arguments
entryRulenamed_arguments 
:
{ before(grammarAccess.getNamed_argumentsRule()); }
	 rulenamed_arguments
{ after(grammarAccess.getNamed_argumentsRule()); } 
	 EOF 
;

// Rule named_arguments
rulenamed_arguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamed_argumentsAccess().getGroup()); }
(rule__Named_arguments__Group__0)
{ after(grammarAccess.getNamed_argumentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenamed_argument
entryRulenamed_argument 
:
{ before(grammarAccess.getNamed_argumentRule()); }
	 rulenamed_argument
{ after(grammarAccess.getNamed_argumentRule()); } 
	 EOF 
;

// Rule named_argument
rulenamed_argument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamed_argumentAccess().getGroup()); }
(rule__Named_argument__Group__0)
{ after(grammarAccess.getNamed_argumentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefor_indices
entryRulefor_indices 
:
{ before(grammarAccess.getFor_indicesRule()); }
	 rulefor_indices
{ after(grammarAccess.getFor_indicesRule()); } 
	 EOF 
;

// Rule for_indices
rulefor_indices
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFor_indicesAccess().getGroup()); }
(rule__For_indices__Group__0)
{ after(grammarAccess.getFor_indicesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefor_index
entryRulefor_index 
:
{ before(grammarAccess.getFor_indexRule()); }
	 rulefor_index
{ after(grammarAccess.getFor_indexRule()); } 
	 EOF 
;

// Rule for_index
rulefor_index
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFor_indexAccess().getGroup()); }
(rule__For_index__Group__0)
{ after(grammarAccess.getFor_indexAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemul_op_mul
entryRulemul_op_mul 
:
{ before(grammarAccess.getMul_op_mulRule()); }
	 rulemul_op_mul
{ after(grammarAccess.getMul_op_mulRule()); } 
	 EOF 
;

// Rule mul_op_mul
rulemul_op_mul
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMul_op_mulAccess().getAsteriskKeyword()); }

	'*' 

{ after(grammarAccess.getMul_op_mulAccess().getAsteriskKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemul_op_div
entryRulemul_op_div 
:
{ before(grammarAccess.getMul_op_divRule()); }
	 rulemul_op_div
{ after(grammarAccess.getMul_op_divRule()); } 
	 EOF 
;

// Rule mul_op_div
rulemul_op_div
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMul_op_divAccess().getSolidusKeyword()); }

	'/' 

{ after(grammarAccess.getMul_op_divAccess().getSolidusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemul_op_dotmul
entryRulemul_op_dotmul 
:
{ before(grammarAccess.getMul_op_dotmulRule()); }
	 rulemul_op_dotmul
{ after(grammarAccess.getMul_op_dotmulRule()); } 
	 EOF 
;

// Rule mul_op_dotmul
rulemul_op_dotmul
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMul_op_dotmulAccess().getFullStopAsteriskKeyword()); }

	'.*' 

{ after(grammarAccess.getMul_op_dotmulAccess().getFullStopAsteriskKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemul_op_dotdiv
entryRulemul_op_dotdiv 
:
{ before(grammarAccess.getMul_op_dotdivRule()); }
	 rulemul_op_dotdiv
{ after(grammarAccess.getMul_op_dotdivRule()); } 
	 EOF 
;

// Rule mul_op_dotdiv
rulemul_op_dotdiv
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMul_op_dotdivAccess().getFullStopSolidusKeyword()); }

	'./' 

{ after(grammarAccess.getMul_op_dotdivAccess().getFullStopSolidusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleadd_op_plus
entryRuleadd_op_plus 
:
{ before(grammarAccess.getAdd_op_plusRule()); }
	 ruleadd_op_plus
{ after(grammarAccess.getAdd_op_plusRule()); } 
	 EOF 
;

// Rule add_op_plus
ruleadd_op_plus
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdd_op_plusAccess().getPlusSignKeyword()); }

	'+' 

{ after(grammarAccess.getAdd_op_plusAccess().getPlusSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleadd_op_minus
entryRuleadd_op_minus 
:
{ before(grammarAccess.getAdd_op_minusRule()); }
	 ruleadd_op_minus
{ after(grammarAccess.getAdd_op_minusRule()); } 
	 EOF 
;

// Rule add_op_minus
ruleadd_op_minus
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdd_op_minusAccess().getHyphenMinusKeyword()); }

	'-' 

{ after(grammarAccess.getAdd_op_minusAccess().getHyphenMinusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleadd_op_dotplus
entryRuleadd_op_dotplus 
:
{ before(grammarAccess.getAdd_op_dotplusRule()); }
	 ruleadd_op_dotplus
{ after(grammarAccess.getAdd_op_dotplusRule()); } 
	 EOF 
;

// Rule add_op_dotplus
ruleadd_op_dotplus
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdd_op_dotplusAccess().getFullStopPlusSignKeyword()); }

	'.+' 

{ after(grammarAccess.getAdd_op_dotplusAccess().getFullStopPlusSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleadd_op_dotminus
entryRuleadd_op_dotminus 
:
{ before(grammarAccess.getAdd_op_dotminusRule()); }
	 ruleadd_op_dotminus
{ after(grammarAccess.getAdd_op_dotminusRule()); } 
	 EOF 
;

// Rule add_op_dotminus
ruleadd_op_dotminus
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdd_op_dotminusAccess().getFullStopHyphenMinusKeyword()); }

	'.-' 

{ after(grammarAccess.getAdd_op_dotminusAccess().getFullStopHyphenMinusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_Less_then
entryRulerel_op_Less_then 
:
{ before(grammarAccess.getRel_op_Less_thenRule()); }
	 rulerel_op_Less_then
{ after(grammarAccess.getRel_op_Less_thenRule()); } 
	 EOF 
;

// Rule rel_op_Less_then
rulerel_op_Less_then
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_Less_thenAccess().getLessThanSignKeyword()); }

	'<' 

{ after(grammarAccess.getRel_op_Less_thenAccess().getLessThanSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_Less_equal
entryRulerel_op_Less_equal 
:
{ before(grammarAccess.getRel_op_Less_equalRule()); }
	 rulerel_op_Less_equal
{ after(grammarAccess.getRel_op_Less_equalRule()); } 
	 EOF 
;

// Rule rel_op_Less_equal
rulerel_op_Less_equal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_Less_equalAccess().getLessThanSignEqualsSignKeyword()); }

	'<=' 

{ after(grammarAccess.getRel_op_Less_equalAccess().getLessThanSignEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_greater_then
entryRulerel_op_greater_then 
:
{ before(grammarAccess.getRel_op_greater_thenRule()); }
	 rulerel_op_greater_then
{ after(grammarAccess.getRel_op_greater_thenRule()); } 
	 EOF 
;

// Rule rel_op_greater_then
rulerel_op_greater_then
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_greater_thenAccess().getGreaterThanSignKeyword()); }

	'>' 

{ after(grammarAccess.getRel_op_greater_thenAccess().getGreaterThanSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_greater_equal
entryRulerel_op_greater_equal 
:
{ before(grammarAccess.getRel_op_greater_equalRule()); }
	 rulerel_op_greater_equal
{ after(grammarAccess.getRel_op_greater_equalRule()); } 
	 EOF 
;

// Rule rel_op_greater_equal
rulerel_op_greater_equal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_greater_equalAccess().getGreaterThanSignEqualsSignKeyword()); }

	'>=' 

{ after(grammarAccess.getRel_op_greater_equalAccess().getGreaterThanSignEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_assignment
entryRulerel_op_assignment 
:
{ before(grammarAccess.getRel_op_assignmentRule()); }
	 rulerel_op_assignment
{ after(grammarAccess.getRel_op_assignmentRule()); } 
	 EOF 
;

// Rule rel_op_assignment
rulerel_op_assignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_assignmentAccess().getEqualsSignEqualsSignKeyword()); }

	'==' 

{ after(grammarAccess.getRel_op_assignmentAccess().getEqualsSignEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_Oper
entryRulerel_op_Oper 
:
{ before(grammarAccess.getRel_op_OperRule()); }
	 rulerel_op_Oper
{ after(grammarAccess.getRel_op_OperRule()); } 
	 EOF 
;

// Rule rel_op_Oper
rulerel_op_Oper
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_OperAccess().getLessThanSignGreaterThanSignKeyword()); }

	'<>' 

{ after(grammarAccess.getRel_op_OperAccess().getLessThanSignGreaterThanSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecomment
entryRulecomment 
:
{ before(grammarAccess.getCommentRule()); }
	 rulecomment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule comment
rulecomment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAccess().getString_commentParserRuleCall()); }
	rulestring_comment
{ after(grammarAccess.getCommentAccess().getString_commentParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestring_comment
entryRulestring_comment 
:
{ before(grammarAccess.getString_commentRule()); }
	 rulestring_comment
{ after(grammarAccess.getString_commentRule()); } 
	 EOF 
;

// Rule string_comment
rulestring_comment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getString_commentAccess().getGroup()); }
(rule__String_comment__Group__0)?
{ after(grammarAccess.getString_commentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Modification_alternatives__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModification_alternativesAccess().getGroup_0()); }
(rule__Modification_alternatives__Group_0__0)?
{ after(grammarAccess.getModification_alternativesAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getModification_alternativesAccess().getModification_RuleAssignment_1()); }
(rule__Modification_alternatives__Modification_RuleAssignment_1)?
{ after(grammarAccess.getModification_alternativesAccess().getModification_RuleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getGroup_0()); }
(rule__Modification__Group_0__0)
{ after(grammarAccess.getModificationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getModificationAccess().getGroup_1()); }
(rule__Modification__Group_1__0)
{ after(grammarAccess.getModificationAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getModificationAccess().getGroup_2()); }
(rule__Modification__Group_2__0)
{ after(grammarAccess.getModificationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getElement_modification_or_replaceableParserRuleCall_0()); }
	ruleelement_modification_or_replaceable
{ after(grammarAccess.getArgumentAccess().getElement_modification_or_replaceableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getArgumentAccess().getElement_redeclarationParserRuleCall_1()); }
	ruleelement_redeclaration
{ after(grammarAccess.getArgumentAccess().getElement_redeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_modification_or_replaceable__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_modification_or_replaceableAccess().getElement_modAssignment_3_0()); }
(rule__Element_modification_or_replaceable__Element_modAssignment_3_0)
{ after(grammarAccess.getElement_modification_or_replaceableAccess().getElement_modAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getElement_modification_or_replaceableAccess().getElement_repAssignment_3_1()); }
(rule__Element_modification_or_replaceable__Element_repAssignment_3_1)
{ after(grammarAccess.getElement_modification_or_replaceableAccess().getElement_repAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_replaceable__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_replaceableAccess().getClass_DefAssignment_2_0()); }
(rule__Element_replaceable__Class_DefAssignment_2_0)
{ after(grammarAccess.getElement_replaceableAccess().getClass_DefAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getElement_replaceableAccess().getComp_clause2Assignment_2_1()); }
(rule__Element_replaceable__Comp_clause2Assignment_2_1)
{ after(grammarAccess.getElement_replaceableAccess().getComp_clause2Assignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_redeclaration__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_redeclarationAccess().getAlternatives_4_0()); }
(rule__Element_redeclaration__Alternatives_4_0)
{ after(grammarAccess.getElement_redeclarationAccess().getAlternatives_4_0()); }
)

    |(
{ before(grammarAccess.getElement_redeclarationAccess().getElement_RAssignment_4_1()); }
(rule__Element_redeclaration__Element_RAssignment_4_1)
{ after(grammarAccess.getElement_redeclarationAccess().getElement_RAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_redeclaration__Alternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_redeclarationAccess().getClass_DefAssignment_4_0_0()); }
(rule__Element_redeclaration__Class_DefAssignment_4_0_0)
{ after(grammarAccess.getElement_redeclarationAccess().getClass_DefAssignment_4_0_0()); }
)

    |(
{ before(grammarAccess.getElement_redeclarationAccess().getComp_clause1Assignment_4_0_1()); }
(rule__Element_redeclaration__Comp_clause1Assignment_4_0_1)
{ after(grammarAccess.getElement_redeclarationAccess().getComp_clause1Assignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_definition__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_definitionAccess().getClassKeyword_2_0()); }

	'class' 

{ after(grammarAccess.getClass_definitionAccess().getClassKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getClass_definitionAccess().getModelKeyword_2_1()); }

	'model' 

{ after(grammarAccess.getClass_definitionAccess().getModelKeyword_2_1()); }
)

    |(
{ before(grammarAccess.getClass_definitionAccess().getRecordKeyword_2_2()); }

	'record' 

{ after(grammarAccess.getClass_definitionAccess().getRecordKeyword_2_2()); }
)

    |(
{ before(grammarAccess.getClass_definitionAccess().getBlockKeyword_2_3()); }

	'block' 

{ after(grammarAccess.getClass_definitionAccess().getBlockKeyword_2_3()); }
)

    |(
{ before(grammarAccess.getClass_definitionAccess().getGroup_2_4()); }
(rule__Class_definition__Group_2_4__0)
{ after(grammarAccess.getClass_definitionAccess().getGroup_2_4()); }
)

    |(
{ before(grammarAccess.getClass_definitionAccess().getTypeKeyword_2_5()); }

	'type' 

{ after(grammarAccess.getClass_definitionAccess().getTypeKeyword_2_5()); }
)

    |(
{ before(grammarAccess.getClass_definitionAccess().getPackageKeyword_2_6()); }

	'package' 

{ after(grammarAccess.getClass_definitionAccess().getPackageKeyword_2_6()); }
)

    |(
{ before(grammarAccess.getClass_definitionAccess().getFunctionKeyword_2_7()); }

	'function' 

{ after(grammarAccess.getClass_definitionAccess().getFunctionKeyword_2_7()); }
)

    |(
{ before(grammarAccess.getClass_definitionAccess().getOperatorKeyword_2_8()); }

	'operator' 

{ after(grammarAccess.getClass_definitionAccess().getOperatorKeyword_2_8()); }
)

    |(
{ before(grammarAccess.getClass_definitionAccess().getGroup_2_9()); }
(rule__Class_definition__Group_2_9__0)
{ after(grammarAccess.getClass_definitionAccess().getGroup_2_9()); }
)

    |(
{ before(grammarAccess.getClass_definitionAccess().getGroup_2_10()); }
(rule__Class_definition__Group_2_10__0)
{ after(grammarAccess.getClass_definitionAccess().getGroup_2_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getGroup_1_0()); }
(rule__Class_specifier__Group_1_0__0)
{ after(grammarAccess.getClass_specifierAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getClass_specifierAccess().getGroup_1_1()); }
(rule__Class_specifier__Group_1_1__0)
{ after(grammarAccess.getClass_specifierAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getClass_specifierAccess().getGroup_1_2()); }
(rule__Class_specifier__Group_1_2__0)
{ after(grammarAccess.getClass_specifierAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getClass_specifierAccess().getGroup_1_3()); }
(rule__Class_specifier__Group_1_3__0)
{ after(grammarAccess.getClass_specifierAccess().getGroup_1_3()); }
)

    |(
{ before(grammarAccess.getClass_specifierAccess().getGroup_1_4()); }
(rule__Class_specifier__Group_1_4__0)
{ after(grammarAccess.getClass_specifierAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Alternatives_1_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getEnum_listAssignment_1_2_4_0()); }
(rule__Class_specifier__Enum_listAssignment_1_2_4_0)?
{ after(grammarAccess.getClass_specifierAccess().getEnum_listAssignment_1_2_4_0()); }
)

    |(
{ before(grammarAccess.getClass_specifierAccess().getColonKeyword_1_2_4_1()); }

	':' 

{ after(grammarAccess.getClass_specifierAccess().getColonKeyword_1_2_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_prefix__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_prefixAccess().getFlowKeyword_0_0()); }

	'flow' 

{ after(grammarAccess.getType_prefixAccess().getFlowKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getType_prefixAccess().getStreamKeyword_0_1()); }

	'stream' 

{ after(grammarAccess.getType_prefixAccess().getStreamKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_prefix__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_prefixAccess().getDiscreteKeyword_1_0()); }

	'discrete' 

{ after(grammarAccess.getType_prefixAccess().getDiscreteKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getType_prefixAccess().getParameterKeyword_1_1()); }

	'parameter' 

{ after(grammarAccess.getType_prefixAccess().getParameterKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getType_prefixAccess().getConstantKeyword_1_2()); }

	'constant' 

{ after(grammarAccess.getType_prefixAccess().getConstantKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_prefix__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_prefixAccess().getInputKeyword_2_0()); }

	'input' 

{ after(grammarAccess.getType_prefixAccess().getInputKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getType_prefixAccess().getOutputKeyword_2_1()); }

	'output' 

{ after(grammarAccess.getType_prefixAccess().getOutputKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getGroup_1_0()); }
(rule__Composition__Group_1_0__0)
{ after(grammarAccess.getCompositionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getCompositionAccess().getGroup_1_1()); }
(rule__Composition__Group_1_1__0)
{ after(grammarAccess.getCompositionAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getCompositionAccess().getEqn_sectionAssignment_1_2()); }
(rule__Composition__Eqn_sectionAssignment_1_2)
{ after(grammarAccess.getCompositionAccess().getEqn_sectionAssignment_1_2()); }
)

    |(
{ before(grammarAccess.getCompositionAccess().getAlg_sectionAssignment_1_3()); }
(rule__Composition__Alg_sectionAssignment_1_3)
{ after(grammarAccess.getCompositionAccess().getAlg_sectionAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getImport_clauseParserRuleCall_0()); }
	ruleimport_clause
{ after(grammarAccess.getElementAccess().getImport_clauseParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getElementAccess().getExtends_clauseParserRuleCall_1()); }
	ruleextends_clause
{ after(grammarAccess.getElementAccess().getExtends_clauseParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getElementAccess().getGroup_2()); }
(rule__Element__Group_2__0)
{ after(grammarAccess.getElementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getAlternatives_2_4_0()); }
(rule__Element__Alternatives_2_4_0)
{ after(grammarAccess.getElementAccess().getAlternatives_2_4_0()); }
)

    |(
{ before(grammarAccess.getElementAccess().getGroup_2_4_1()); }
(rule__Element__Group_2_4_1__0)
{ after(grammarAccess.getElementAccess().getGroup_2_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives_2_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getClass_DefAssignment_2_4_0_0()); }
(rule__Element__Class_DefAssignment_2_4_0_0)
{ after(grammarAccess.getElementAccess().getClass_DefAssignment_2_4_0_0()); }
)

    |(
{ before(grammarAccess.getElementAccess().getComp_ClauseAssignment_2_4_0_1()); }
(rule__Element__Comp_ClauseAssignment_2_4_0_1)
{ after(grammarAccess.getElementAccess().getComp_ClauseAssignment_2_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives_2_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getClass_DefAssignment_2_4_1_1_0()); }
(rule__Element__Class_DefAssignment_2_4_1_1_0)
{ after(grammarAccess.getElementAccess().getClass_DefAssignment_2_4_1_1_0()); }
)

    |(
{ before(grammarAccess.getElementAccess().getComp_ClauseAssignment_2_4_1_1_1()); }
(rule__Element__Comp_ClauseAssignment_2_4_1_1_1)
{ after(grammarAccess.getElementAccess().getComp_ClauseAssignment_2_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getGroup_0_0()); }
(rule__Equation__Group_0_0__0)
{ after(grammarAccess.getEquationAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getEquationAccess().getIF_EQNAssignment_0_1()); }
(rule__Equation__IF_EQNAssignment_0_1)
{ after(grammarAccess.getEquationAccess().getIF_EQNAssignment_0_1()); }
)

    |(
{ before(grammarAccess.getEquationAccess().getFOR_EQNAssignment_0_2()); }
(rule__Equation__FOR_EQNAssignment_0_2)
{ after(grammarAccess.getEquationAccess().getFOR_EQNAssignment_0_2()); }
)

    |(
{ before(grammarAccess.getEquationAccess().getConAssignment_0_3()); }
(rule__Equation__ConAssignment_0_3)
{ after(grammarAccess.getEquationAccess().getConAssignment_0_3()); }
)

    |(
{ before(grammarAccess.getEquationAccess().getWHEN_EQNAssignment_0_4()); }
(rule__Equation__WHEN_EQNAssignment_0_4)
{ after(grammarAccess.getEquationAccess().getWHEN_EQNAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIf_statementAssignment_1_0()); }
(rule__Statement__If_statementAssignment_1_0)
{ after(grammarAccess.getStatementAccess().getIf_statementAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getState_OutputExprListAssignment_1_1()); }
(rule__Statement__State_OutputExprListAssignment_1_1)
{ after(grammarAccess.getStatementAccess().getState_OutputExprListAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getReturnKeyword_1_2()); }

	'return' 

{ after(grammarAccess.getStatementAccess().getReturnKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getState_Comp_RefAssignment_1_3()); }
(rule__Statement__State_Comp_RefAssignment_1_3)
{ after(grammarAccess.getStatementAccess().getState_Comp_RefAssignment_1_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getFor_statementAssignment_1_4()); }
(rule__Statement__For_statementAssignment_1_4)
{ after(grammarAccess.getStatementAccess().getFor_statementAssignment_1_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhen_statementAssignment_1_5()); }
(rule__Statement__When_statementAssignment_1_5)
{ after(grammarAccess.getStatementAccess().getWhen_statementAssignment_1_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhile_statementAssignment_1_6()); }
(rule__Statement__While_statementAssignment_1_6)
{ after(grammarAccess.getStatementAccess().getWhile_statementAssignment_1_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getBreakKeyword_1_7()); }

	'break' 

{ after(grammarAccess.getStatementAccess().getBreakKeyword_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State_Comp_Ref__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_Comp_RefAccess().getGroup_1_0()); }
(rule__State_Comp_Ref__Group_1_0__0)
{ after(grammarAccess.getState_Comp_RefAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getState_Comp_RefAccess().getFun_call_argsAssignment_1_1()); }
(rule__State_Comp_Ref__Fun_call_argsAssignment_1_1)
{ after(grammarAccess.getState_Comp_RefAccess().getFun_call_argsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import_clause__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_clauseAccess().getGroup_1_0()); }
(rule__Import_clause__Group_1_0__0)
{ after(grammarAccess.getImport_clauseAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getImport_clauseAccess().getGroup_1_1()); }
(rule__Import_clause__Group_1_1__0)
{ after(grammarAccess.getImport_clauseAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprAssignment_0()); }
(rule__Expression__ExprAssignment_0)
{ after(grammarAccess.getExpressionAccess().getExprAssignment_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getConditional_exprParserRuleCall_1()); }
	ruleconditional_expr
{ after(grammarAccess.getExpressionAccess().getConditional_exprParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__OpAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getOpRel_op_Less_thenParserRuleCall_1_0_0_0()); }
	rulerel_op_Less_then
{ after(grammarAccess.getRelationAccess().getOpRel_op_Less_thenParserRuleCall_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getOpRel_op_Less_equalParserRuleCall_1_0_0_1()); }
	rulerel_op_Less_equal
{ after(grammarAccess.getRelationAccess().getOpRel_op_Less_equalParserRuleCall_1_0_0_1()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getOpRel_op_greater_thenParserRuleCall_1_0_0_2()); }
	rulerel_op_greater_then
{ after(grammarAccess.getRelationAccess().getOpRel_op_greater_thenParserRuleCall_1_0_0_2()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getOpRel_op_greater_equalParserRuleCall_1_0_0_3()); }
	rulerel_op_greater_equal
{ after(grammarAccess.getRelationAccess().getOpRel_op_greater_equalParserRuleCall_1_0_0_3()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getOpRel_op_assignmentParserRuleCall_1_0_0_4()); }
	rulerel_op_assignment
{ after(grammarAccess.getRelationAccess().getOpRel_op_assignmentParserRuleCall_1_0_0_4()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getOpRel_op_OperParserRuleCall_1_0_0_5()); }
	rulerel_op_Oper
{ after(grammarAccess.getRelationAccess().getOpRel_op_OperParserRuleCall_1_0_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__OprAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_plusParserRuleCall_0_0_0()); }
	ruleadd_op_plus
{ after(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_plusParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_minusParserRuleCall_0_0_1()); }
	ruleadd_op_minus
{ after(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_minusParserRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_dotplusParserRuleCall_0_0_2()); }
	ruleadd_op_dotplus
{ after(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_dotplusParserRuleCall_0_0_2()); }
)

    |(
{ before(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_dotminusParserRuleCall_0_0_3()); }
	ruleadd_op_dotminus
{ after(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_dotminusParserRuleCall_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Oper1Alternatives_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_plusParserRuleCall_2_0_0_0()); }
	ruleadd_op_plus
{ after(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_plusParserRuleCall_2_0_0_0()); }
)

    |(
{ before(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_minusParserRuleCall_2_0_0_1()); }
	ruleadd_op_minus
{ after(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_minusParserRuleCall_2_0_0_1()); }
)

    |(
{ before(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_dotplusParserRuleCall_2_0_0_2()); }
	ruleadd_op_dotplus
{ after(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_dotplusParserRuleCall_2_0_0_2()); }
)

    |(
{ before(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_dotminusParserRuleCall_2_0_0_3()); }
	ruleadd_op_dotminus
{ after(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_dotminusParserRuleCall_2_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__OpAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getOpMul_op_mulParserRuleCall_1_0_0_0()); }
	rulemul_op_mul
{ after(grammarAccess.getTermAccess().getOpMul_op_mulParserRuleCall_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getTermAccess().getOpMul_op_divParserRuleCall_1_0_0_1()); }
	rulemul_op_div
{ after(grammarAccess.getTermAccess().getOpMul_op_divParserRuleCall_1_0_0_1()); }
)

    |(
{ before(grammarAccess.getTermAccess().getOpMul_op_dotmulParserRuleCall_1_0_0_2()); }
	rulemul_op_dotmul
{ after(grammarAccess.getTermAccess().getOpMul_op_dotmulParserRuleCall_1_0_0_2()); }
)

    |(
{ before(grammarAccess.getTermAccess().getOpMul_op_dotdivParserRuleCall_1_0_0_3()); }
	rulemul_op_dotdiv
{ after(grammarAccess.getTermAccess().getOpMul_op_dotdivParserRuleCall_1_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getCircumflexAccentKeyword_1_0_0()); }

	'^' 

{ after(grammarAccess.getFactorAccess().getCircumflexAccentKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getFactorAccess().getFullStopCircumflexAccentKeyword_1_0_1()); }

	'.^' 

{ after(grammarAccess.getFactorAccess().getFullStopCircumflexAccentKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getNumAssignment_0()); }
(rule__Primary__NumAssignment_0)
{ after(grammarAccess.getPrimaryAccess().getNumAssignment_0()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getIntAssignment_1()); }
(rule__Primary__IntAssignment_1)
{ after(grammarAccess.getPrimaryAccess().getIntAssignment_1()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getStrAssignment_2()); }
(rule__Primary__StrAssignment_2)
{ after(grammarAccess.getPrimaryAccess().getStrAssignment_2()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getBoolAssignment_3()); }
(rule__Primary__BoolAssignment_3)
{ after(grammarAccess.getPrimaryAccess().getBoolAssignment_3()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getName_FunctionParserRuleCall_4()); }
	rulename_Function
{ after(grammarAccess.getPrimaryAccess().getName_FunctionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getInitial_refParserRuleCall_5()); }
	ruleinitial_ref
{ after(grammarAccess.getPrimaryAccess().getInitial_refParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getExprDerParserRuleCall_6()); }
	ruleExprDer
{ after(grammarAccess.getPrimaryAccess().getExprDerParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getComponent_referenceAssignment_7()); }
(rule__Primary__Component_referenceAssignment_7)
{ after(grammarAccess.getPrimaryAccess().getComponent_referenceAssignment_7()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getGroup_8()); }
(rule__Primary__Group_8__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getGroup_9()); }
(rule__Primary__Group_9__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getGroup_10()); }
(rule__Primary__Group_10__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getEndAssignment_11()); }
(rule__Primary__EndAssignment_11)
{ after(grammarAccess.getPrimaryAccess().getEndAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subscript__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubscriptAccess().getGroup_0()); }
(rule__Subscript__Group_0__0)
{ after(grammarAccess.getSubscriptAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSubscriptAccess().getExprAssignment_1()); }
(rule__Subscript__ExprAssignment_1)
{ after(grammarAccess.getSubscriptAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getGroup_0()); }
(rule__Function_arguments__Group_0__0)
{ after(grammarAccess.getFunction_argumentsAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFunction_argumentsAccess().getName_argAssignment_1()); }
(rule__Function_arguments__Name_argAssignment_1)
{ after(grammarAccess.getFunction_argumentsAccess().getName_argAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Alternatives_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ExprAssignment_0_2_0()); }
(rule__Function_arguments__Fun_Arg_ExprAssignment_0_2_0)
{ after(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ExprAssignment_0_2_0()); }
)

    |(
{ before(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ForAssignment_0_2_1()); }
(rule__Function_arguments__Fun_Arg_ForAssignment_0_2_1)
{ after(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ForAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Modification_alternatives__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modification_alternatives__Group_0__0__Impl
	rule__Modification_alternatives__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification_alternatives__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModification_alternativesAccess().getLeft_hand_component_referenceParserRuleCall_0_0()); }
	ruleleft_hand_component_reference
{ after(grammarAccess.getModification_alternativesAccess().getLeft_hand_component_referenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Modification_alternatives__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modification_alternatives__Group_0__1__Impl
	rule__Modification_alternatives__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification_alternatives__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModification_alternativesAccess().getEqualsSignKeyword_0_1()); }

	'=' 

{ after(grammarAccess.getModification_alternativesAccess().getEqualsSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Modification_alternatives__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modification_alternatives__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification_alternatives__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModification_alternativesAccess().getExprAssignment_0_2()); }
(rule__Modification_alternatives__ExprAssignment_0_2)
{ after(grammarAccess.getModification_alternativesAccess().getExprAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Left_hand_component_reference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Left_hand_component_reference__Group__0__Impl
	rule__Left_hand_component_reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_hand_component_reference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeft_hand_component_referenceAccess().getFullStopKeyword_0()); }
(
	'.' 
)?
{ after(grammarAccess.getLeft_hand_component_referenceAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Left_hand_component_reference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Left_hand_component_reference__Group__1__Impl
	rule__Left_hand_component_reference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_hand_component_reference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeft_hand_component_referenceAccess().getRefAssignment_1()); }
(rule__Left_hand_component_reference__RefAssignment_1)
{ after(grammarAccess.getLeft_hand_component_referenceAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Left_hand_component_reference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Left_hand_component_reference__Group__2__Impl
	rule__Left_hand_component_reference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_hand_component_reference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeft_hand_component_referenceAccess().getSubscripts1Assignment_2()); }
(rule__Left_hand_component_reference__Subscripts1Assignment_2)?
{ after(grammarAccess.getLeft_hand_component_referenceAccess().getSubscripts1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Left_hand_component_reference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Left_hand_component_reference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_hand_component_reference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeft_hand_component_referenceAccess().getGroup_3()); }
(rule__Left_hand_component_reference__Group_3__0)*
{ after(grammarAccess.getLeft_hand_component_referenceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Left_hand_component_reference__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Left_hand_component_reference__Group_3__0__Impl
	rule__Left_hand_component_reference__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_hand_component_reference__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeft_hand_component_referenceAccess().getFullStopKeyword_3_0()); }

	'.' 

{ after(grammarAccess.getLeft_hand_component_referenceAccess().getFullStopKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Left_hand_component_reference__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Left_hand_component_reference__Group_3__1__Impl
	rule__Left_hand_component_reference__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_hand_component_reference__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeft_hand_component_referenceAccess().getRef1Assignment_3_1()); }
(rule__Left_hand_component_reference__Ref1Assignment_3_1)
{ after(grammarAccess.getLeft_hand_component_referenceAccess().getRef1Assignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Left_hand_component_reference__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Left_hand_component_reference__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Left_hand_component_reference__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeft_hand_component_referenceAccess().getSubscriptsAssignment_3_2()); }
(rule__Left_hand_component_reference__SubscriptsAssignment_3_2)?
{ after(grammarAccess.getLeft_hand_component_referenceAccess().getSubscriptsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Modification__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modification__Group_0__0__Impl
	rule__Modification__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getClass_modificationParserRuleCall_0_0()); }
	ruleclass_modification
{ after(grammarAccess.getModificationAccess().getClass_modificationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Modification__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modification__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getGroup_0_1()); }
(rule__Modification__Group_0_1__0)?
{ after(grammarAccess.getModificationAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Modification__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modification__Group_0_1__0__Impl
	rule__Modification__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getEqualsSignKeyword_0_1_0()); }

	'=' 

{ after(grammarAccess.getModificationAccess().getEqualsSignKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Modification__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modification__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getExprAssignment_0_1_1()); }
(rule__Modification__ExprAssignment_0_1_1)
{ after(grammarAccess.getModificationAccess().getExprAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Modification__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modification__Group_1__0__Impl
	rule__Modification__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getModificationAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Modification__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modification__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getExprAssignment_1_1()); }
(rule__Modification__ExprAssignment_1_1)
{ after(grammarAccess.getModificationAccess().getExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Modification__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modification__Group_2__0__Impl
	rule__Modification__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getColonEqualsSignKeyword_2_0()); }

	':=' 

{ after(grammarAccess.getModificationAccess().getColonEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Modification__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modification__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getExprAssignment_2_1()); }
(rule__Modification__ExprAssignment_2_1)
{ after(grammarAccess.getModificationAccess().getExprAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class_modification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_modification__Group__0__Impl
	rule__Class_modification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_modification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_modificationAccess().getClass_modification_actionAction_0()); }
(

)
{ after(grammarAccess.getClass_modificationAccess().getClass_modification_actionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_modification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_modification__Group__1__Impl
	rule__Class_modification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_modification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_modificationAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getClass_modificationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_modification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_modification__Group__2__Impl
	rule__Class_modification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_modification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_modificationAccess().getArgAssignment_2()); }
(rule__Class_modification__ArgAssignment_2)?
{ after(grammarAccess.getClass_modificationAccess().getArgAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_modification__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_modification__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_modification__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_modificationAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getClass_modificationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Element_modification_or_replaceable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_modification_or_replaceable__Group__0__Impl
	rule__Element_modification_or_replaceable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_modification_or_replaceable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_modification_or_replaceableAccess().getElement_modification_or_replaceableAction_0()); }
(

)
{ after(grammarAccess.getElement_modification_or_replaceableAccess().getElement_modification_or_replaceableAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_modification_or_replaceable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_modification_or_replaceable__Group__1__Impl
	rule__Element_modification_or_replaceable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_modification_or_replaceable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_modification_or_replaceableAccess().getEachKeyword_1()); }
(
	'each' 
)?
{ after(grammarAccess.getElement_modification_or_replaceableAccess().getEachKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_modification_or_replaceable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_modification_or_replaceable__Group__2__Impl
	rule__Element_modification_or_replaceable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_modification_or_replaceable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_modification_or_replaceableAccess().getFinalKeyword_2()); }
(
	'final' 
)?
{ after(grammarAccess.getElement_modification_or_replaceableAccess().getFinalKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_modification_or_replaceable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_modification_or_replaceable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_modification_or_replaceable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_modification_or_replaceableAccess().getAlternatives_3()); }
(rule__Element_modification_or_replaceable__Alternatives_3)
{ after(grammarAccess.getElement_modification_or_replaceableAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Element_modification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_modification__Group__0__Impl
	rule__Element_modification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_modification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_modificationAccess().getNameAssignment_0()); }
(rule__Element_modification__NameAssignment_0)
{ after(grammarAccess.getElement_modificationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_modification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_modification__Group__1__Impl
	rule__Element_modification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_modification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_modificationAccess().getModificationAssignment_1()); }
(rule__Element_modification__ModificationAssignment_1)?
{ after(grammarAccess.getElement_modificationAccess().getModificationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_modification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_modification__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_modification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_modificationAccess().getString_commentParserRuleCall_2()); }
	rulestring_comment
{ after(grammarAccess.getElement_modificationAccess().getString_commentParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Element_replaceable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_replaceable__Group__0__Impl
	rule__Element_replaceable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_replaceable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_replaceableAccess().getElement_replaceableAction_0()); }
(

)
{ after(grammarAccess.getElement_replaceableAccess().getElement_replaceableAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_replaceable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_replaceable__Group__1__Impl
	rule__Element_replaceable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_replaceable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_replaceableAccess().getReplaceableKeyword_1()); }

	'replaceable' 

{ after(grammarAccess.getElement_replaceableAccess().getReplaceableKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_replaceable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_replaceable__Group__2__Impl
	rule__Element_replaceable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_replaceable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_replaceableAccess().getAlternatives_2()); }
(rule__Element_replaceable__Alternatives_2)
{ after(grammarAccess.getElement_replaceableAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_replaceable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_replaceable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_replaceable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_replaceableAccess().getConstrain_ClauseAssignment_3()); }
(rule__Element_replaceable__Constrain_ClauseAssignment_3)?
{ after(grammarAccess.getElement_replaceableAccess().getConstrain_ClauseAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Constraining_clause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraining_clause__Group__0__Impl
	rule__Constraining_clause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraining_clause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraining_clauseAccess().getConstrainedbyKeyword_0()); }

	'constrainedby' 

{ after(grammarAccess.getConstraining_clauseAccess().getConstrainedbyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraining_clause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraining_clause__Group__1__Impl
	rule__Constraining_clause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraining_clause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraining_clauseAccess().getNameAssignment_1()); }
(rule__Constraining_clause__NameAssignment_1)
{ after(grammarAccess.getConstraining_clauseAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraining_clause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraining_clause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraining_clause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraining_clauseAccess().getClass_ModAssignment_2()); }
(rule__Constraining_clause__Class_ModAssignment_2)?
{ after(grammarAccess.getConstraining_clauseAccess().getClass_ModAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Element_redeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_redeclaration__Group__0__Impl
	rule__Element_redeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_redeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_redeclarationAccess().getElement_redeclarationAction_0()); }
(

)
{ after(grammarAccess.getElement_redeclarationAccess().getElement_redeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_redeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_redeclaration__Group__1__Impl
	rule__Element_redeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_redeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_redeclarationAccess().getRedeclareKeyword_1()); }

	'redeclare' 

{ after(grammarAccess.getElement_redeclarationAccess().getRedeclareKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_redeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_redeclaration__Group__2__Impl
	rule__Element_redeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_redeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_redeclarationAccess().getEachKeyword_2()); }
(
	'each' 
)?
{ after(grammarAccess.getElement_redeclarationAccess().getEachKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_redeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_redeclaration__Group__3__Impl
	rule__Element_redeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_redeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_redeclarationAccess().getFinalKeyword_3()); }
(
	'final' 
)?
{ after(grammarAccess.getElement_redeclarationAccess().getFinalKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_redeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_redeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_redeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_redeclarationAccess().getAlternatives_4()); }
(rule__Element_redeclaration__Alternatives_4)
{ after(grammarAccess.getElement_redeclarationAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Component_clause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_clause__Group__0__Impl
	rule__Component_clause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_clause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_clauseAccess().getType_prefixParserRuleCall_0()); }
	ruletype_prefix
{ after(grammarAccess.getComponent_clauseAccess().getType_prefixParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_clause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_clause__Group__1__Impl
	rule__Component_clause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_clause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_clauseAccess().getType_specifierParserRuleCall_1()); }
	ruletype_specifier
{ after(grammarAccess.getComponent_clauseAccess().getType_specifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_clause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_clause__Group__2__Impl
	rule__Component_clause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_clause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_clauseAccess().getArray_SubsAssignment_2()); }
(rule__Component_clause__Array_SubsAssignment_2)?
{ after(grammarAccess.getComponent_clauseAccess().getArray_SubsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_clause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_clause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_clause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_clauseAccess().getCom_ListAssignment_3()); }
(rule__Component_clause__Com_ListAssignment_3)
{ after(grammarAccess.getComponent_clauseAccess().getCom_ListAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Component_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_list__Group__0__Impl
	rule__Component_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_listAccess().getComponent_declarationParserRuleCall_0()); }
	rulecomponent_declaration
{ after(grammarAccess.getComponent_listAccess().getComponent_declarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_listAccess().getGroup_1()); }
(rule__Component_list__Group_1__0)*
{ after(grammarAccess.getComponent_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Component_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_list__Group_1__0__Impl
	rule__Component_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_listAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getComponent_listAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_listAccess().getComponent_DecAssignment_1_1()); }
(rule__Component_list__Component_DecAssignment_1_1)
{ after(grammarAccess.getComponent_listAccess().getComponent_DecAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Component_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_declaration__Group__0__Impl
	rule__Component_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_declarationAccess().getDecAssignment_0()); }
(rule__Component_declaration__DecAssignment_0)
{ after(grammarAccess.getComponent_declarationAccess().getDecAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_declaration__Group__1__Impl
	rule__Component_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_declarationAccess().getConditional_AttAssignment_1()); }
(rule__Component_declaration__Conditional_AttAssignment_1)?
{ after(grammarAccess.getComponent_declarationAccess().getConditional_AttAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_declarationAccess().getCommentParserRuleCall_2()); }
	rulecomment
{ after(grammarAccess.getComponent_declarationAccess().getCommentParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Conditional_attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_attribute__Group__0__Impl
	rule__Conditional_attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_attributeAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getConditional_attributeAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_attribute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_attributeAccess().getExprAssignment_1()); }
(rule__Conditional_attribute__ExprAssignment_1)
{ after(grammarAccess.getConditional_attributeAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Component_clause1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_clause1__Group__0__Impl
	rule__Component_clause1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_clause1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_clause1Access().getType_prefixParserRuleCall_0()); }
	ruletype_prefix
{ after(grammarAccess.getComponent_clause1Access().getType_prefixParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_clause1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_clause1__Group__1__Impl
	rule__Component_clause1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_clause1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_clause1Access().getType_specifierParserRuleCall_1()); }
	ruletype_specifier
{ after(grammarAccess.getComponent_clause1Access().getType_specifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_clause1__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_clause1__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_clause1__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_clause1Access().getCom_DecAssignment_2()); }
(rule__Component_clause1__Com_DecAssignment_2)
{ after(grammarAccess.getComponent_clause1Access().getCom_DecAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Component_declaration1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_declaration1__Group__0__Impl
	rule__Component_declaration1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_declaration1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_declaration1Access().getDeclarationParserRuleCall_0()); }
	ruledeclaration
{ after(grammarAccess.getComponent_declaration1Access().getDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_declaration1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_declaration1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_declaration1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_declaration1Access().getCommentParserRuleCall_1()); }
	rulecomment
{ after(grammarAccess.getComponent_declaration1Access().getCommentParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getDeclarationAction_0()); }
(

)
{ after(grammarAccess.getDeclarationAccess().getDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getRedeclaredComponentNameAssignment_1()); }
(rule__Declaration__RedeclaredComponentNameAssignment_1)
{ after(grammarAccess.getDeclarationAccess().getRedeclaredComponentNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__2__Impl
	rule__Declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getArraySubsAssignment_2()); }
(rule__Declaration__ArraySubsAssignment_2)?
{ after(grammarAccess.getDeclarationAccess().getArraySubsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getModAssignment_3()); }
(rule__Declaration__ModAssignment_3)?
{ after(grammarAccess.getDeclarationAccess().getModAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Class_definition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_definition__Group__0__Impl
	rule__Class_definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_definition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_definitionAccess().getEncapsulatedKeyword_0()); }
(
	'encapsulated' 
)?
{ after(grammarAccess.getClass_definitionAccess().getEncapsulatedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_definition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_definition__Group__1__Impl
	rule__Class_definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_definition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_definitionAccess().getPartialKeyword_1()); }
(
	'partial' 
)?
{ after(grammarAccess.getClass_definitionAccess().getPartialKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_definition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_definition__Group__2__Impl
	rule__Class_definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_definition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_definitionAccess().getAlternatives_2()); }
(rule__Class_definition__Alternatives_2)
{ after(grammarAccess.getClass_definitionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_definition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_definition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_definition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_definitionAccess().getClass_specifierParserRuleCall_3()); }
	ruleclass_specifier
{ after(grammarAccess.getClass_definitionAccess().getClass_specifierParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Class_definition__Group_2_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_definition__Group_2_4__0__Impl
	rule__Class_definition__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_definition__Group_2_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_definitionAccess().getExpandableKeyword_2_4_0()); }
(
	'expandable' 
)?
{ after(grammarAccess.getClass_definitionAccess().getExpandableKeyword_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_definition__Group_2_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_definition__Group_2_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_definition__Group_2_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_definitionAccess().getConnectorKeyword_2_4_1()); }

	'connector' 

{ after(grammarAccess.getClass_definitionAccess().getConnectorKeyword_2_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class_definition__Group_2_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_definition__Group_2_9__0__Impl
	rule__Class_definition__Group_2_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_definition__Group_2_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_definitionAccess().getOperatorKeyword_2_9_0()); }

	'operator' 

{ after(grammarAccess.getClass_definitionAccess().getOperatorKeyword_2_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_definition__Group_2_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_definition__Group_2_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_definition__Group_2_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_definitionAccess().getFunctionKeyword_2_9_1()); }

	'function' 

{ after(grammarAccess.getClass_definitionAccess().getFunctionKeyword_2_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class_definition__Group_2_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_definition__Group_2_10__0__Impl
	rule__Class_definition__Group_2_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_definition__Group_2_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_definitionAccess().getOperatorKeyword_2_10_0()); }

	'operator' 

{ after(grammarAccess.getClass_definitionAccess().getOperatorKeyword_2_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_definition__Group_2_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_definition__Group_2_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_definition__Group_2_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_definitionAccess().getRecordKeyword_2_10_1()); }

	'record' 

{ after(grammarAccess.getClass_definitionAccess().getRecordKeyword_2_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class_specifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group__0__Impl
	rule__Class_specifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getClass_specifierAction_0()); }
(

)
{ after(grammarAccess.getClass_specifierAccess().getClass_specifierAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getAlternatives_1()); }
(rule__Class_specifier__Alternatives_1)
{ after(grammarAccess.getClass_specifierAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class_specifier__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_0__0__Impl
	rule__Class_specifier__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_0_0()); }
	RULE_IDENT
{ after(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_0__1__Impl
	rule__Class_specifier__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getString_commentParserRuleCall_1_0_1()); }
	rulestring_comment
{ after(grammarAccess.getClass_specifierAccess().getString_commentParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_0__2__Impl
	rule__Class_specifier__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getCompAssignment_1_0_2()); }
(rule__Class_specifier__CompAssignment_1_0_2)
{ after(grammarAccess.getClass_specifierAccess().getCompAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_0__3__Impl
	rule__Class_specifier__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getEndKeyword_1_0_3()); }

	'end' 

{ after(grammarAccess.getClass_specifierAccess().getEndKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_0_4()); }
	RULE_IDENT
{ after(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Class_specifier__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_1__0__Impl
	rule__Class_specifier__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_1_0()); }
	RULE_IDENT
{ after(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_1__1__Impl
	rule__Class_specifier__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getEqualsSignKeyword_1_1_1()); }

	'=' 

{ after(grammarAccess.getClass_specifierAccess().getEqualsSignKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_1__2__Impl
	rule__Class_specifier__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getBase_prefixParserRuleCall_1_1_2()); }
	rulebase_prefix
{ after(grammarAccess.getClass_specifierAccess().getBase_prefixParserRuleCall_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_1__3__Impl
	rule__Class_specifier__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getNameAssignment_1_1_3()); }
(rule__Class_specifier__NameAssignment_1_1_3)
{ after(grammarAccess.getClass_specifierAccess().getNameAssignment_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_1__4__Impl
	rule__Class_specifier__Group_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getArray_SubsAssignment_1_1_4()); }
(rule__Class_specifier__Array_SubsAssignment_1_1_4)?
{ after(grammarAccess.getClass_specifierAccess().getArray_SubsAssignment_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_1__5__Impl
	rule__Class_specifier__Group_1_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getClass_modAssignment_1_1_5()); }
(rule__Class_specifier__Class_modAssignment_1_1_5)?
{ after(grammarAccess.getClass_specifierAccess().getClass_modAssignment_1_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getCommentParserRuleCall_1_1_6()); }
	rulecomment
{ after(grammarAccess.getClass_specifierAccess().getCommentParserRuleCall_1_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Class_specifier__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_2__0__Impl
	rule__Class_specifier__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getVarAssignment_1_2_0()); }
(rule__Class_specifier__VarAssignment_1_2_0)
{ after(grammarAccess.getClass_specifierAccess().getVarAssignment_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_2__1__Impl
	rule__Class_specifier__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getEqualsSignKeyword_1_2_1()); }

	'=' 

{ after(grammarAccess.getClass_specifierAccess().getEqualsSignKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_2__2__Impl
	rule__Class_specifier__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getEnumerationKeyword_1_2_2()); }

	'enumeration' 

{ after(grammarAccess.getClass_specifierAccess().getEnumerationKeyword_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_2__3__Impl
	rule__Class_specifier__Group_1_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getLeftParenthesisKeyword_1_2_3()); }

	'(' 

{ after(grammarAccess.getClass_specifierAccess().getLeftParenthesisKeyword_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_2__4__Impl
	rule__Class_specifier__Group_1_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getAlternatives_1_2_4()); }
(rule__Class_specifier__Alternatives_1_2_4)
{ after(grammarAccess.getClass_specifierAccess().getAlternatives_1_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_2__5__Impl
	rule__Class_specifier__Group_1_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getRightParenthesisKeyword_1_2_5()); }

	')' 

{ after(grammarAccess.getClass_specifierAccess().getRightParenthesisKeyword_1_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getCommentParserRuleCall_1_2_6()); }
	rulecomment
{ after(grammarAccess.getClass_specifierAccess().getCommentParserRuleCall_1_2_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Class_specifier__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_3__0__Impl
	rule__Class_specifier__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_3_0()); }
	RULE_IDENT
{ after(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_3__1__Impl
	rule__Class_specifier__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getEqualsSignKeyword_1_3_1()); }

	'=' 

{ after(grammarAccess.getClass_specifierAccess().getEqualsSignKeyword_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_3__2__Impl
	rule__Class_specifier__Group_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getDerKeyword_1_3_2()); }

	'der' 

{ after(grammarAccess.getClass_specifierAccess().getDerKeyword_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_3__3__Impl
	rule__Class_specifier__Group_1_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getLeftParenthesisKeyword_1_3_3()); }

	'(' 

{ after(grammarAccess.getClass_specifierAccess().getLeftParenthesisKeyword_1_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_3__4__Impl
	rule__Class_specifier__Group_1_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getNameAssignment_1_3_4()); }
(rule__Class_specifier__NameAssignment_1_3_4)
{ after(grammarAccess.getClass_specifierAccess().getNameAssignment_1_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_3__5__Impl
	rule__Class_specifier__Group_1_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getCommaKeyword_1_3_5()); }

	',' 

{ after(grammarAccess.getClass_specifierAccess().getCommaKeyword_1_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_3__6__Impl
	rule__Class_specifier__Group_1_3__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_3__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_3_6()); }
	RULE_IDENT
{ after(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_3_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_3__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_3__7__Impl
	rule__Class_specifier__Group_1_3__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_3__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getGroup_1_3_7()); }
(rule__Class_specifier__Group_1_3_7__0)*
{ after(grammarAccess.getClass_specifierAccess().getGroup_1_3_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_3__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_3__8__Impl
	rule__Class_specifier__Group_1_3__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_3__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getRightParenthesisKeyword_1_3_8()); }

	')' 

{ after(grammarAccess.getClass_specifierAccess().getRightParenthesisKeyword_1_3_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_3__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_3__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_3__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getCommentParserRuleCall_1_3_9()); }
	rulecomment
{ after(grammarAccess.getClass_specifierAccess().getCommentParserRuleCall_1_3_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Class_specifier__Group_1_3_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_3_7__0__Impl
	rule__Class_specifier__Group_1_3_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_3_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getCommaKeyword_1_3_7_0()); }

	',' 

{ after(grammarAccess.getClass_specifierAccess().getCommaKeyword_1_3_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_3_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_3_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_3_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_3_7_1()); }
	RULE_IDENT
{ after(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_3_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class_specifier__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_4__0__Impl
	rule__Class_specifier__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getExtendsKeyword_1_4_0()); }

	'extends' 

{ after(grammarAccess.getClass_specifierAccess().getExtendsKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_4__1__Impl
	rule__Class_specifier__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_4_1()); }
	RULE_IDENT
{ after(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_4__2__Impl
	rule__Class_specifier__Group_1_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getClass_modAssignment_1_4_2()); }
(rule__Class_specifier__Class_modAssignment_1_4_2)?
{ after(grammarAccess.getClass_specifierAccess().getClass_modAssignment_1_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_4__3__Impl
	rule__Class_specifier__Group_1_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getString_commentParserRuleCall_1_4_3()); }
	rulestring_comment
{ after(grammarAccess.getClass_specifierAccess().getString_commentParserRuleCall_1_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_4__4__Impl
	rule__Class_specifier__Group_1_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getCompAssignment_1_4_4()); }
(rule__Class_specifier__CompAssignment_1_4_4)
{ after(grammarAccess.getClass_specifierAccess().getCompAssignment_1_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_4__5__Impl
	rule__Class_specifier__Group_1_4__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_4__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getEndKeyword_1_4_5()); }

	'end' 

{ after(grammarAccess.getClass_specifierAccess().getEndKeyword_1_4_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_specifier__Group_1_4__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_specifier__Group_1_4__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Group_1_4__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_4_6()); }
	RULE_IDENT
{ after(grammarAccess.getClass_specifierAccess().getIDENTTerminalRuleCall_1_4_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Type_prefix__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_prefix__Group__0__Impl
	rule__Type_prefix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_prefix__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_prefixAccess().getAlternatives_0()); }
(rule__Type_prefix__Alternatives_0)?
{ after(grammarAccess.getType_prefixAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_prefix__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_prefix__Group__1__Impl
	rule__Type_prefix__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_prefix__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_prefixAccess().getAlternatives_1()); }
(rule__Type_prefix__Alternatives_1)?
{ after(grammarAccess.getType_prefixAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_prefix__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_prefix__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_prefix__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_prefixAccess().getAlternatives_2()); }
(rule__Type_prefix__Alternatives_2)?
{ after(grammarAccess.getType_prefixAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Enum_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum_list__Group__0__Impl
	rule__Enum_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnum_listAccess().getEnum_listAction_0()); }
(

)
{ after(grammarAccess.getEnum_listAccess().getEnum_listAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum_list__Group__1__Impl
	rule__Enum_list__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnum_listAccess().getEnnum_LitAssignment_1()); }
(rule__Enum_list__Ennum_LitAssignment_1)
{ after(grammarAccess.getEnum_listAccess().getEnnum_LitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum_list__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum_list__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_list__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnum_listAccess().getGroup_2()); }
(rule__Enum_list__Group_2__0)*
{ after(grammarAccess.getEnum_listAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Enum_list__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum_list__Group_2__0__Impl
	rule__Enum_list__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_list__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnum_listAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getEnum_listAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum_list__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum_list__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_list__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnum_listAccess().getE_literalAssignment_2_1()); }
(rule__Enum_list__E_literalAssignment_2_1)
{ after(grammarAccess.getEnum_listAccess().getE_literalAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Enumeration_literal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration_literal__Group__0__Impl
	rule__Enumeration_literal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration_literal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeration_literalAccess().getIDENTTerminalRuleCall_0()); }
	RULE_IDENT
{ after(grammarAccess.getEnumeration_literalAccess().getIDENTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration_literal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration_literal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration_literal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumeration_literalAccess().getCommentParserRuleCall_1()); }
	rulecomment
{ after(grammarAccess.getEnumeration_literalAccess().getCommentParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Composition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Composition__Group__0__Impl
	rule__Composition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getE_List_InitialAssignment_0()); }
(rule__Composition__E_List_InitialAssignment_0)
{ after(grammarAccess.getCompositionAccess().getE_List_InitialAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Composition__Group__1__Impl
	rule__Composition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getAlternatives_1()); }
(rule__Composition__Alternatives_1)*
{ after(grammarAccess.getCompositionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Composition__Group__2__Impl
	rule__Composition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getGroup_2()); }
(rule__Composition__Group_2__0)?
{ after(grammarAccess.getCompositionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Composition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getGroup_3()); }
(rule__Composition__Group_3__0)?
{ after(grammarAccess.getCompositionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Composition__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Composition__Group_1_0__0__Impl
	rule__Composition__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getPublicKeyword_1_0_0()); }

	'public' 

{ after(grammarAccess.getCompositionAccess().getPublicKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Composition__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getE_List_PublicAssignment_1_0_1()); }
(rule__Composition__E_List_PublicAssignment_1_0_1)
{ after(grammarAccess.getCompositionAccess().getE_List_PublicAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Composition__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Composition__Group_1_1__0__Impl
	rule__Composition__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getProtectedKeyword_1_1_0()); }

	'protected' 

{ after(grammarAccess.getCompositionAccess().getProtectedKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Composition__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getE_List_ProtectedAssignment_1_1_1()); }
(rule__Composition__E_List_ProtectedAssignment_1_1_1)
{ after(grammarAccess.getCompositionAccess().getE_List_ProtectedAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Composition__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Composition__Group_2__0__Impl
	rule__Composition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getExternalKeyword_2_0()); }

	'external' 

{ after(grammarAccess.getCompositionAccess().getExternalKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Composition__Group_2__1__Impl
	rule__Composition__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getLang_SpecAssignment_2_1()); }
(rule__Composition__Lang_SpecAssignment_2_1)?
{ after(grammarAccess.getCompositionAccess().getLang_SpecAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Composition__Group_2__2__Impl
	rule__Composition__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getExternal_F_CAssignment_2_2()); }
(rule__Composition__External_F_CAssignment_2_2)?
{ after(grammarAccess.getCompositionAccess().getExternal_F_CAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Composition__Group_2__3__Impl
	rule__Composition__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getAnnotation1Assignment_2_3()); }
(rule__Composition__Annotation1Assignment_2_3)?
{ after(grammarAccess.getCompositionAccess().getAnnotation1Assignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Composition__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getSemicolonKeyword_2_4()); }

	';' 

{ after(grammarAccess.getCompositionAccess().getSemicolonKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Composition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Composition__Group_3__0__Impl
	rule__Composition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getAnnotation2Assignment_3_0()); }
(rule__Composition__Annotation2Assignment_3_0)
{ after(grammarAccess.getCompositionAccess().getAnnotation2Assignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Composition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getCompositionAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Element_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_list__Group__0__Impl
	rule__Element_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_listAccess().getElement_listAction_0()); }
(

)
{ after(grammarAccess.getElement_listAccess().getElement_listAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_listAccess().getGroup_1()); }
(rule__Element_list__Group_1__0)*
{ after(grammarAccess.getElement_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Element_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_list__Group_1__0__Impl
	rule__Element_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_listAccess().getElementAssignment_1_0()); }
(rule__Element_list__ElementAssignment_1_0)
{ after(grammarAccess.getElement_listAccess().getElementAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_listAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getElement_listAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Element__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group_2__0__Impl
	rule__Element__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getRedeclareKeyword_2_0()); }
(
	'redeclare' 
)?
{ after(grammarAccess.getElementAccess().getRedeclareKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group_2__1__Impl
	rule__Element__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getFinalKeyword_2_1()); }
(
	'final' 
)?
{ after(grammarAccess.getElementAccess().getFinalKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group_2__2__Impl
	rule__Element__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getInnerKeyword_2_2()); }
(
	'inner' 
)?
{ after(grammarAccess.getElementAccess().getInnerKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group_2__3__Impl
	rule__Element__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getOuterKeyword_2_3()); }
(
	'outer' 
)?
{ after(grammarAccess.getElementAccess().getOuterKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getAlternatives_2_4()); }
(rule__Element__Alternatives_2_4)
{ after(grammarAccess.getElementAccess().getAlternatives_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Element__Group_2_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group_2_4_1__0__Impl
	rule__Element__Group_2_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getReplaceableKeyword_2_4_1_0()); }

	'replaceable' 

{ after(grammarAccess.getElementAccess().getReplaceableKeyword_2_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group_2_4_1__1__Impl
	rule__Element__Group_2_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getAlternatives_2_4_1_1()); }
(rule__Element__Alternatives_2_4_1_1)
{ after(grammarAccess.getElementAccess().getAlternatives_2_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2_4_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group_2_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2_4_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getGroup_2_4_1_2()); }
(rule__Element__Group_2_4_1_2__0)?
{ after(grammarAccess.getElementAccess().getGroup_2_4_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Element__Group_2_4_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group_2_4_1_2__0__Impl
	rule__Element__Group_2_4_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2_4_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getConstrain_ClauseAssignment_2_4_1_2_0()); }
(rule__Element__Constrain_ClauseAssignment_2_4_1_2_0)
{ after(grammarAccess.getElementAccess().getConstrain_ClauseAssignment_2_4_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_2_4_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element__Group_2_4_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_2_4_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getCommentParserRuleCall_2_4_1_2_1()); }
	rulecomment
{ after(grammarAccess.getElementAccess().getCommentParserRuleCall_2_4_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Equation_section__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation_section__Group__0__Impl
	rule__Equation_section__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation_section__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquation_sectionAccess().getEquation_sectionAction_0()); }
(

)
{ after(grammarAccess.getEquation_sectionAccess().getEquation_sectionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation_section__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation_section__Group__1__Impl
	rule__Equation_section__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation_section__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquation_sectionAccess().getInitialKeyword_1()); }
(
	'initial' 
)?
{ after(grammarAccess.getEquation_sectionAccess().getInitialKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation_section__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation_section__Group__2__Impl
	rule__Equation_section__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation_section__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquation_sectionAccess().getEquationKeyword_2()); }

	'equation' 

{ after(grammarAccess.getEquation_sectionAccess().getEquationKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation_section__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation_section__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation_section__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquation_sectionAccess().getGroup_3()); }
(rule__Equation_section__Group_3__0)*
{ after(grammarAccess.getEquation_sectionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Equation_section__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation_section__Group_3__0__Impl
	rule__Equation_section__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation_section__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquation_sectionAccess().getEqnAssignment_3_0()); }
(rule__Equation_section__EqnAssignment_3_0)
{ after(grammarAccess.getEquation_sectionAccess().getEqnAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation_section__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation_section__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation_section__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquation_sectionAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getEquation_sectionAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Equation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group__0__Impl
	rule__Equation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getAlternatives_0()); }
(rule__Equation__Alternatives_0)
{ after(grammarAccess.getEquationAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getCommentAssignment_1()); }
(rule__Equation__CommentAssignment_1)
{ after(grammarAccess.getEquationAccess().getCommentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Equation__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group_0_0__0__Impl
	rule__Equation__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getSimAssignment_0_0_0()); }
(rule__Equation__SimAssignment_0_0_0)
{ after(grammarAccess.getEquationAccess().getSimAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group_0_0__1__Impl
	rule__Equation__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getEqualsSignKeyword_0_0_1()); }

	'=' 

{ after(grammarAccess.getEquationAccess().getEqualsSignKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getExprAssignment_0_0_2()); }
(rule__Equation__ExprAssignment_0_0_2)
{ after(grammarAccess.getEquationAccess().getExprAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__When_equation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_equation__Group__0__Impl
	rule__When_equation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getWhenKeyword_0()); }

	'when' 

{ after(grammarAccess.getWhen_equationAccess().getWhenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_equation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_equation__Group__1__Impl
	rule__When_equation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getWhenEprAssignment_1()); }
(rule__When_equation__WhenEprAssignment_1)
{ after(grammarAccess.getWhen_equationAccess().getWhenEprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_equation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_equation__Group__2__Impl
	rule__When_equation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getWhen_equationAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_equation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_equation__Group__3__Impl
	rule__When_equation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getGroup_3()); }
(rule__When_equation__Group_3__0)*
{ after(grammarAccess.getWhen_equationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_equation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_equation__Group__4__Impl
	rule__When_equation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getGroup_4()); }
(rule__When_equation__Group_4__0)*
{ after(grammarAccess.getWhen_equationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_equation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_equation__Group__5__Impl
	rule__When_equation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getWhen_equationAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_equation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_equation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getWhenKeyword_6()); }

	'when' 

{ after(grammarAccess.getWhen_equationAccess().getWhenKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__When_equation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_equation__Group_3__0__Impl
	rule__When_equation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getEqn_ThenAssignment_3_0()); }
(rule__When_equation__Eqn_ThenAssignment_3_0)
{ after(grammarAccess.getWhen_equationAccess().getEqn_ThenAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_equation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_equation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getWhen_equationAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__When_equation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_equation__Group_4__0__Impl
	rule__When_equation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getElsewhenKeyword_4_0()); }

	'elsewhen' 

{ after(grammarAccess.getWhen_equationAccess().getElsewhenKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_equation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_equation__Group_4__1__Impl
	rule__When_equation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getElseWhenEprAssignment_4_1()); }
(rule__When_equation__ElseWhenEprAssignment_4_1)
{ after(grammarAccess.getWhen_equationAccess().getElseWhenEprAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_equation__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_equation__Group_4__2__Impl
	rule__When_equation__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getThenKeyword_4_2()); }

	'then' 

{ after(grammarAccess.getWhen_equationAccess().getThenKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_equation__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_equation__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getGroup_4_3()); }
(rule__When_equation__Group_4_3__0)*
{ after(grammarAccess.getWhen_equationAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__When_equation__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_equation__Group_4_3__0__Impl
	rule__When_equation__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getEqn_ThenAssignment_4_3_0()); }
(rule__When_equation__Eqn_ThenAssignment_4_3_0)
{ after(grammarAccess.getWhen_equationAccess().getEqn_ThenAssignment_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_equation__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_equation__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getSemicolonKeyword_4_3_1()); }

	';' 

{ after(grammarAccess.getWhen_equationAccess().getSemicolonKeyword_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__If_equation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group__0__Impl
	rule__If_equation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIf_equationAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_equation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group__1__Impl
	rule__If_equation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getExprtrueAssignment_1()); }
(rule__If_equation__ExprtrueAssignment_1)
{ after(grammarAccess.getIf_equationAccess().getExprtrueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_equation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group__2__Impl
	rule__If_equation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getIf_equationAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_equation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group__3__Impl
	rule__If_equation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getGroup_3()); }
(rule__If_equation__Group_3__0)*
{ after(grammarAccess.getIf_equationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_equation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group__4__Impl
	rule__If_equation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getGroup_4()); }
(rule__If_equation__Group_4__0)*
{ after(grammarAccess.getIf_equationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_equation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group__5__Impl
	rule__If_equation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getGroup_5()); }
(rule__If_equation__Group_5__0)?
{ after(grammarAccess.getIf_equationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_equation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group__6__Impl
	rule__If_equation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getEndKeyword_6()); }

	'end' 

{ after(grammarAccess.getIf_equationAccess().getEndKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_equation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getIfKeyword_7()); }

	'if' 

{ after(grammarAccess.getIf_equationAccess().getIfKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__If_equation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group_3__0__Impl
	rule__If_equation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getEqnAssignment_3_0()); }
(rule__If_equation__EqnAssignment_3_0)
{ after(grammarAccess.getIf_equationAccess().getEqnAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_equation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getIf_equationAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__If_equation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group_4__0__Impl
	rule__If_equation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getElseifKeyword_4_0()); }

	'elseif' 

{ after(grammarAccess.getIf_equationAccess().getElseifKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_equation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group_4__1__Impl
	rule__If_equation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getExprStilltrueAssignment_4_1()); }
(rule__If_equation__ExprStilltrueAssignment_4_1)
{ after(grammarAccess.getIf_equationAccess().getExprStilltrueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_equation__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group_4__2__Impl
	rule__If_equation__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getThenKeyword_4_2()); }

	'then' 

{ after(grammarAccess.getIf_equationAccess().getThenKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_equation__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getGroup_4_3()); }
(rule__If_equation__Group_4_3__0)*
{ after(grammarAccess.getIf_equationAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__If_equation__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group_4_3__0__Impl
	rule__If_equation__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getThenEqnAssignment_4_3_0()); }
(rule__If_equation__ThenEqnAssignment_4_3_0)
{ after(grammarAccess.getIf_equationAccess().getThenEqnAssignment_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_equation__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getSemicolonKeyword_4_3_1()); }

	';' 

{ after(grammarAccess.getIf_equationAccess().getSemicolonKeyword_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__If_equation__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group_5__0__Impl
	rule__If_equation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getElseKeyword_5_0()); }

	'else' 

{ after(grammarAccess.getIf_equationAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_equation__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getGroup_5_1()); }
(rule__If_equation__Group_5_1__0)*
{ after(grammarAccess.getIf_equationAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__If_equation__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group_5_1__0__Impl
	rule__If_equation__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getElseEqnAssignment_5_1_0()); }
(rule__If_equation__ElseEqnAssignment_5_1_0)
{ after(grammarAccess.getIf_equationAccess().getElseEqnAssignment_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_equation__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_equation__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getSemicolonKeyword_5_1_1()); }

	';' 

{ after(grammarAccess.getIf_equationAccess().getSemicolonKeyword_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__For_equation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_equation__Group__0__Impl
	rule__For_equation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_equation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_equationAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getFor_equationAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_equation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_equation__Group__1__Impl
	rule__For_equation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For_equation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_equationAccess().getFor_loopAssignment_1()); }
(rule__For_equation__For_loopAssignment_1)
{ after(grammarAccess.getFor_equationAccess().getFor_loopAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_equation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_equation__Group__2__Impl
	rule__For_equation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For_equation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_equationAccess().getLoopKeyword_2()); }

	'loop' 

{ after(grammarAccess.getFor_equationAccess().getLoopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_equation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_equation__Group__3__Impl
	rule__For_equation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For_equation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_equationAccess().getGroup_3()); }
(rule__For_equation__Group_3__0)
{ after(grammarAccess.getFor_equationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_equation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_equation__Group__4__Impl
	rule__For_equation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__For_equation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_equationAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getFor_equationAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_equation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_equation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_equation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_equationAccess().getForKeyword_5()); }

	'for' 

{ after(grammarAccess.getFor_equationAccess().getForKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__For_equation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_equation__Group_3__0__Impl
	rule__For_equation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_equation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_equationAccess().getFor_EqnAssignment_3_0()); }
(rule__For_equation__For_EqnAssignment_3_0)
{ after(grammarAccess.getFor_equationAccess().getFor_EqnAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_equation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_equation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_equation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_equationAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getFor_equationAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Connect_clause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connect_clause__Group__0__Impl
	rule__Connect_clause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connect_clause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnect_clauseAccess().getConnectKeyword_0()); }

	'connect' 

{ after(grammarAccess.getConnect_clauseAccess().getConnectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connect_clause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connect_clause__Group__1__Impl
	rule__Connect_clause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connect_clause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnect_clauseAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getConnect_clauseAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connect_clause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connect_clause__Group__2__Impl
	rule__Connect_clause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connect_clause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnect_clauseAccess().getConnector1Assignment_2()); }
(rule__Connect_clause__Connector1Assignment_2)
{ after(grammarAccess.getConnect_clauseAccess().getConnector1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connect_clause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connect_clause__Group__3__Impl
	rule__Connect_clause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Connect_clause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnect_clauseAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getConnect_clauseAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connect_clause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connect_clause__Group__4__Impl
	rule__Connect_clause__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Connect_clause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnect_clauseAccess().getConnector2Assignment_4()); }
(rule__Connect_clause__Connector2Assignment_4)
{ after(grammarAccess.getConnect_clauseAccess().getConnector2Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Connect_clause__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Connect_clause__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connect_clause__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnect_clauseAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getConnect_clauseAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Algorithm_section__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Algorithm_section__Group__0__Impl
	rule__Algorithm_section__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm_section__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithm_sectionAccess().getAlgorithm_clauseAction_0()); }
(

)
{ after(grammarAccess.getAlgorithm_sectionAccess().getAlgorithm_clauseAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm_section__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Algorithm_section__Group__1__Impl
	rule__Algorithm_section__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm_section__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithm_sectionAccess().getInitialKeyword_1()); }
(
	'initial' 
)?
{ after(grammarAccess.getAlgorithm_sectionAccess().getInitialKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm_section__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Algorithm_section__Group__2__Impl
	rule__Algorithm_section__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm_section__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithm_sectionAccess().getAlgorithmKeyword_2()); }

	'algorithm' 

{ after(grammarAccess.getAlgorithm_sectionAccess().getAlgorithmKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm_section__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Algorithm_section__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm_section__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithm_sectionAccess().getGroup_3()); }
(rule__Algorithm_section__Group_3__0)*
{ after(grammarAccess.getAlgorithm_sectionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Algorithm_section__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Algorithm_section__Group_3__0__Impl
	rule__Algorithm_section__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm_section__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithm_sectionAccess().getAlgorithmAssignment_3_0()); }
(rule__Algorithm_section__AlgorithmAssignment_3_0)
{ after(grammarAccess.getAlgorithm_sectionAccess().getAlgorithmAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm_section__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Algorithm_section__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm_section__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithm_sectionAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getAlgorithm_sectionAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__1__Impl
	rule__Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAlternatives_1()); }
(rule__Statement__Alternatives_1)
{ after(grammarAccess.getStatementAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getCommentParserRuleCall_2()); }
	rulecomment
{ after(grammarAccess.getStatementAccess().getCommentParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__State_OutputExprList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_OutputExprList__Group__0__Impl
	rule__State_OutputExprList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State_OutputExprList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_OutputExprListAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getState_OutputExprListAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State_OutputExprList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_OutputExprList__Group__1__Impl
	rule__State_OutputExprList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State_OutputExprList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_OutputExprListAccess().getOutput_expression_listAssignment_1()); }
(rule__State_OutputExprList__Output_expression_listAssignment_1)
{ after(grammarAccess.getState_OutputExprListAccess().getOutput_expression_listAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State_OutputExprList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_OutputExprList__Group__2__Impl
	rule__State_OutputExprList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State_OutputExprList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_OutputExprListAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getState_OutputExprListAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State_OutputExprList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_OutputExprList__Group__3__Impl
	rule__State_OutputExprList__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State_OutputExprList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_OutputExprListAccess().getColonEqualsSignKeyword_3()); }

	':=' 

{ after(grammarAccess.getState_OutputExprListAccess().getColonEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State_OutputExprList__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_OutputExprList__Group__4__Impl
	rule__State_OutputExprList__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State_OutputExprList__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_OutputExprListAccess().getComponent_refAssignment_4()); }
(rule__State_OutputExprList__Component_refAssignment_4)
{ after(grammarAccess.getState_OutputExprListAccess().getComponent_refAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State_OutputExprList__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_OutputExprList__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State_OutputExprList__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_OutputExprListAccess().getFun_call_argsAssignment_5()); }
(rule__State_OutputExprList__Fun_call_argsAssignment_5)
{ after(grammarAccess.getState_OutputExprListAccess().getFun_call_argsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__State_Comp_Ref__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_Comp_Ref__Group__0__Impl
	rule__State_Comp_Ref__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State_Comp_Ref__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_Comp_RefAccess().getComponent_referenceAssignment_0()); }
(rule__State_Comp_Ref__Component_referenceAssignment_0)
{ after(grammarAccess.getState_Comp_RefAccess().getComponent_referenceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State_Comp_Ref__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_Comp_Ref__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State_Comp_Ref__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_Comp_RefAccess().getAlternatives_1()); }
(rule__State_Comp_Ref__Alternatives_1)
{ after(grammarAccess.getState_Comp_RefAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State_Comp_Ref__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_Comp_Ref__Group_1_0__0__Impl
	rule__State_Comp_Ref__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State_Comp_Ref__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_Comp_RefAccess().getColonEqualsSignKeyword_1_0_0()); }

	':=' 

{ after(grammarAccess.getState_Comp_RefAccess().getColonEqualsSignKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State_Comp_Ref__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State_Comp_Ref__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State_Comp_Ref__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_Comp_RefAccess().getExprAssignment_1_0_1()); }
(rule__State_Comp_Ref__ExprAssignment_1_0_1)
{ after(grammarAccess.getState_Comp_RefAccess().getExprAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__When_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_statement__Group__0__Impl
	rule__When_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getWhenKeyword_0()); }

	'when' 

{ after(grammarAccess.getWhen_statementAccess().getWhenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_statement__Group__1__Impl
	rule__When_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getWhen_exprAssignment_1()); }
(rule__When_statement__When_exprAssignment_1)
{ after(grammarAccess.getWhen_statementAccess().getWhen_exprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_statement__Group__2__Impl
	rule__When_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getWhen_statementAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_statement__Group__3__Impl
	rule__When_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getGroup_3()); }
(rule__When_statement__Group_3__0)*
{ after(grammarAccess.getWhen_statementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_statement__Group__4__Impl
	rule__When_statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getGroup_4()); }
(rule__When_statement__Group_4__0)*
{ after(grammarAccess.getWhen_statementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_statement__Group__5__Impl
	rule__When_statement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getWhen_statementAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_statement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_statement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getWhenKeyword_6()); }

	'when' 

{ after(grammarAccess.getWhen_statementAccess().getWhenKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__When_statement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_statement__Group_3__0__Impl
	rule__When_statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getWhen_stat_trueAssignment_3_0()); }
(rule__When_statement__When_stat_trueAssignment_3_0)
{ after(grammarAccess.getWhen_statementAccess().getWhen_stat_trueAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_statement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_statement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getWhen_statementAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__When_statement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_statement__Group_4__0__Impl
	rule__When_statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getElsewhenKeyword_4_0()); }

	'elsewhen' 

{ after(grammarAccess.getWhen_statementAccess().getElsewhenKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_statement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_statement__Group_4__1__Impl
	rule__When_statement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getElse_When_exprAssignment_4_1()); }
(rule__When_statement__Else_When_exprAssignment_4_1)
{ after(grammarAccess.getWhen_statementAccess().getElse_When_exprAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_statement__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_statement__Group_4__2__Impl
	rule__When_statement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getThenKeyword_4_2()); }

	'then' 

{ after(grammarAccess.getWhen_statementAccess().getThenKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_statement__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_statement__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getGroup_4_3()); }
(rule__When_statement__Group_4_3__0)*
{ after(grammarAccess.getWhen_statementAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__When_statement__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_statement__Group_4_3__0__Impl
	rule__When_statement__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getThen_statementAssignment_4_3_0()); }
(rule__When_statement__Then_statementAssignment_4_3_0)
{ after(grammarAccess.getWhen_statementAccess().getThen_statementAssignment_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__When_statement__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__When_statement__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getSemicolonKeyword_4_3_1()); }

	';' 

{ after(grammarAccess.getWhen_statementAccess().getSemicolonKeyword_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__While_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__0__Impl
	rule__While_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhile_statementAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__1__Impl
	rule__While_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getWhile_exprAssignment_1()); }
(rule__While_statement__While_exprAssignment_1)
{ after(grammarAccess.getWhile_statementAccess().getWhile_exprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__2__Impl
	rule__While_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getLoopKeyword_2()); }

	'loop' 

{ after(grammarAccess.getWhile_statementAccess().getLoopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__3__Impl
	rule__While_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getGroup_3()); }
(rule__While_statement__Group_3__0)*
{ after(grammarAccess.getWhile_statementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__4__Impl
	rule__While_statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getWhile_statementAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getWhileKeyword_5()); }

	'while' 

{ after(grammarAccess.getWhile_statementAccess().getWhileKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__While_statement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group_3__0__Impl
	rule__While_statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getWhile_statAssignment_3_0()); }
(rule__While_statement__While_statAssignment_3_0)
{ after(grammarAccess.getWhile_statementAccess().getWhile_statAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getWhile_statementAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__For_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__0__Impl
	rule__For_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getFor_statementAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__1__Impl
	rule__For_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getFor_indicesAssignment_1()); }
(rule__For_statement__For_indicesAssignment_1)
{ after(grammarAccess.getFor_statementAccess().getFor_indicesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__2__Impl
	rule__For_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getLoopKeyword_2()); }

	'loop' 

{ after(grammarAccess.getFor_statementAccess().getLoopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__3__Impl
	rule__For_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getGroup_3()); }
(rule__For_statement__Group_3__0)*
{ after(grammarAccess.getFor_statementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__4__Impl
	rule__For_statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getFor_statementAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getForKeyword_5()); }

	'for' 

{ after(grammarAccess.getFor_statementAccess().getForKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__For_statement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group_3__0__Impl
	rule__For_statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getFor_statementAssignment_3_0()); }
(rule__For_statement__For_statementAssignment_3_0)
{ after(grammarAccess.getFor_statementAccess().getFor_statementAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getFor_statementAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__If_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__0__Impl
	rule__If_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIf_statementAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__1__Impl
	rule__If_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getExprtrueAssignment_1()); }
(rule__If_statement__ExprtrueAssignment_1)
{ after(grammarAccess.getIf_statementAccess().getExprtrueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__2__Impl
	rule__If_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getIf_statementAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__3__Impl
	rule__If_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getGroup_3()); }
(rule__If_statement__Group_3__0)*
{ after(grammarAccess.getIf_statementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__4__Impl
	rule__If_statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getGroup_4()); }
(rule__If_statement__Group_4__0)*
{ after(grammarAccess.getIf_statementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__5__Impl
	rule__If_statement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getGroup_5()); }
(rule__If_statement__Group_5__0)?
{ after(grammarAccess.getIf_statementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__6__Impl
	rule__If_statement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getEndKeyword_6()); }

	'end' 

{ after(grammarAccess.getIf_statementAccess().getEndKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getIfKeyword_7()); }

	'if' 

{ after(grammarAccess.getIf_statementAccess().getIfKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__If_statement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_3__0__Impl
	rule__If_statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getStateAssignment_3_0()); }
(rule__If_statement__StateAssignment_3_0)
{ after(grammarAccess.getIf_statementAccess().getStateAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getIf_statementAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__If_statement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_4__0__Impl
	rule__If_statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getElseifKeyword_4_0()); }

	'elseif' 

{ after(grammarAccess.getIf_statementAccess().getElseifKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_4__1__Impl
	rule__If_statement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getExprStilltrueAssignment_4_1()); }
(rule__If_statement__ExprStilltrueAssignment_4_1)
{ after(grammarAccess.getIf_statementAccess().getExprStilltrueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_4__2__Impl
	rule__If_statement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getThenKeyword_4_2()); }

	'then' 

{ after(grammarAccess.getIf_statementAccess().getThenKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getGroup_4_3()); }
(rule__If_statement__Group_4_3__0)*
{ after(grammarAccess.getIf_statementAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__If_statement__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_4_3__0__Impl
	rule__If_statement__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getStateAssignment_4_3_0()); }
(rule__If_statement__StateAssignment_4_3_0)
{ after(grammarAccess.getIf_statementAccess().getStateAssignment_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getSemicolonKeyword_4_3_1()); }

	';' 

{ after(grammarAccess.getIf_statementAccess().getSemicolonKeyword_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__If_statement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_5__0__Impl
	rule__If_statement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getElseKeyword_5_0()); }

	'else' 

{ after(grammarAccess.getIf_statementAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getGroup_5_1()); }
(rule__If_statement__Group_5_1__0)*
{ after(grammarAccess.getIf_statementAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__If_statement__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_5_1__0__Impl
	rule__If_statement__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getStateAssignment_5_1_0()); }
(rule__If_statement__StateAssignment_5_1_0)
{ after(grammarAccess.getIf_statementAccess().getStateAssignment_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getSemicolonKeyword_5_1_1()); }

	';' 

{ after(grammarAccess.getIf_statementAccess().getSemicolonKeyword_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Extends_clause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extends_clause__Group__0__Impl
	rule__Extends_clause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Extends_clause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtends_clauseAccess().getExtendsKeyword_0()); }

	'extends' 

{ after(grammarAccess.getExtends_clauseAccess().getExtendsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Extends_clause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extends_clause__Group__1__Impl
	rule__Extends_clause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Extends_clause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtends_clauseAccess().getNameAssignment_1()); }
(rule__Extends_clause__NameAssignment_1)
{ after(grammarAccess.getExtends_clauseAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Extends_clause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extends_clause__Group__2__Impl
	rule__Extends_clause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Extends_clause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtends_clauseAccess().getClass_ModAssignment_2()); }
(rule__Extends_clause__Class_ModAssignment_2)?
{ after(grammarAccess.getExtends_clauseAccess().getClass_ModAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Extends_clause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extends_clause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Extends_clause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtends_clauseAccess().getAnnotationAssignment_3()); }
(rule__Extends_clause__AnnotationAssignment_3)?
{ after(grammarAccess.getExtends_clauseAccess().getAnnotationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Annotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getAnnotationKeyword_0()); }

	'annotation' 

{ after(grammarAccess.getAnnotationAccess().getAnnotationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getClass_ModAssignment_1()); }
(rule__Annotation__Class_ModAssignment_1)
{ after(grammarAccess.getAnnotationAccess().getClass_ModAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import_clause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_clause__Group__0__Impl
	rule__Import_clause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_clause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_clauseAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImport_clauseAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import_clause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_clause__Group__1__Impl
	rule__Import_clause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_clause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_clauseAccess().getAlternatives_1()); }
(rule__Import_clause__Alternatives_1)
{ after(grammarAccess.getImport_clauseAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import_clause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_clause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_clause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_clauseAccess().getCommentParserRuleCall_2()); }
	rulecomment
{ after(grammarAccess.getImport_clauseAccess().getCommentParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Import_clause__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_clause__Group_1_0__0__Impl
	rule__Import_clause__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_clause__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_clauseAccess().getIDENTTerminalRuleCall_1_0_0()); }
	RULE_IDENT
{ after(grammarAccess.getImport_clauseAccess().getIDENTTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import_clause__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_clause__Group_1_0__1__Impl
	rule__Import_clause__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_clause__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_clauseAccess().getEqualsSignKeyword_1_0_1()); }

	'=' 

{ after(grammarAccess.getImport_clauseAccess().getEqualsSignKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import_clause__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_clause__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_clause__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_clauseAccess().getNameAssignment_1_0_2()); }
(rule__Import_clause__NameAssignment_1_0_2)
{ after(grammarAccess.getImport_clauseAccess().getNameAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Import_clause__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_clause__Group_1_1__0__Impl
	rule__Import_clause__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_clause__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_clauseAccess().getNameAssignment_1_1_0()); }
(rule__Import_clause__NameAssignment_1_1_0)
{ after(grammarAccess.getImport_clauseAccess().getNameAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import_clause__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_clause__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_clause__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_clauseAccess().getGroup_1_1_1()); }
(rule__Import_clause__Group_1_1_1__0)?
{ after(grammarAccess.getImport_clauseAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import_clause__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_clause__Group_1_1_1__0__Impl
	rule__Import_clause__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_clause__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_clauseAccess().getFullStopKeyword_1_1_1_0()); }

	'.' 

{ after(grammarAccess.getImport_clauseAccess().getFullStopKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import_clause__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_clause__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_clause__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_clauseAccess().getAsteriskKeyword_1_1_1_1()); }

	'*' 

{ after(grammarAccess.getImport_clauseAccess().getAsteriskKeyword_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__External_function_call__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__External_function_call__Group__0__Impl
	rule__External_function_call__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__External_function_call__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternal_function_callAccess().getExternal_function_callAction_0()); }
(

)
{ after(grammarAccess.getExternal_function_callAccess().getExternal_function_callAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__External_function_call__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__External_function_call__Group__1__Impl
	rule__External_function_call__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__External_function_call__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternal_function_callAccess().getGroup_1()); }
(rule__External_function_call__Group_1__0)?
{ after(grammarAccess.getExternal_function_callAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__External_function_call__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__External_function_call__Group__2__Impl
	rule__External_function_call__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__External_function_call__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternal_function_callAccess().getIDENTTerminalRuleCall_2()); }
	RULE_IDENT
{ after(grammarAccess.getExternal_function_callAccess().getIDENTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__External_function_call__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__External_function_call__Group__3__Impl
	rule__External_function_call__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__External_function_call__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternal_function_callAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getExternal_function_callAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__External_function_call__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__External_function_call__Group__4__Impl
	rule__External_function_call__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__External_function_call__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternal_function_callAccess().getE_ListAssignment_4()); }
(rule__External_function_call__E_ListAssignment_4)?
{ after(grammarAccess.getExternal_function_callAccess().getE_ListAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__External_function_call__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__External_function_call__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__External_function_call__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternal_function_callAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getExternal_function_callAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__External_function_call__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__External_function_call__Group_1__0__Impl
	rule__External_function_call__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__External_function_call__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternal_function_callAccess().getComponent_referenceAssignment_1_0()); }
(rule__External_function_call__Component_referenceAssignment_1_0)
{ after(grammarAccess.getExternal_function_callAccess().getComponent_referenceAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__External_function_call__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__External_function_call__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__External_function_call__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternal_function_callAccess().getEqualsSignKeyword_1_1()); }

	'=' 

{ after(grammarAccess.getExternal_function_callAccess().getEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Simple_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group__0__Impl
	rule__Simple_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getLog_ExpAssignment_0()); }
(rule__Simple_expression__Log_ExpAssignment_0)
{ after(grammarAccess.getSimple_expressionAccess().getLog_ExpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getGroup_1()); }
(rule__Simple_expression__Group_1__0)?
{ after(grammarAccess.getSimple_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Simple_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group_1__0__Impl
	rule__Simple_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getSimple_expressionAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group_1__1__Impl
	rule__Simple_expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getS_Logical_expressionAssignment_1_1()); }
(rule__Simple_expression__S_Logical_expressionAssignment_1_1)
{ after(grammarAccess.getSimple_expressionAccess().getS_Logical_expressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getGroup_1_2()); }
(rule__Simple_expression__Group_1_2__0)?
{ after(grammarAccess.getSimple_expressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Simple_expression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group_1_2__0__Impl
	rule__Simple_expression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getColonKeyword_1_2_0()); }

	':' 

{ after(grammarAccess.getSimple_expressionAccess().getColonKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getL_Logical_expressionAssignment_1_2_1()); }
(rule__Simple_expression__L_Logical_expressionAssignment_1_2_1)
{ after(grammarAccess.getSimple_expressionAccess().getL_Logical_expressionAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conditional_expr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group__0__Impl
	rule__Conditional_expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getConditional_exprAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group__1__Impl
	rule__Conditional_expr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getIfexprAssignment_1()); }
(rule__Conditional_expr__IfexprAssignment_1)
{ after(grammarAccess.getConditional_exprAccess().getIfexprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group__2__Impl
	rule__Conditional_expr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getConditional_exprAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group__3__Impl
	rule__Conditional_expr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getThenexprAssignment_3()); }
(rule__Conditional_expr__ThenexprAssignment_3)
{ after(grammarAccess.getConditional_exprAccess().getThenexprAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group__4__Impl
	rule__Conditional_expr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getGroup_4()); }
(rule__Conditional_expr__Group_4__0)*
{ after(grammarAccess.getConditional_exprAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getGroup_5()); }
(rule__Conditional_expr__Group_5__0)
{ after(grammarAccess.getConditional_exprAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Conditional_expr__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group_4__0__Impl
	rule__Conditional_expr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getElseifKeyword_4_0()); }

	'elseif' 

{ after(grammarAccess.getConditional_exprAccess().getElseifKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group_4__1__Impl
	rule__Conditional_expr__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getElseifexprAssignment_4_1()); }
(rule__Conditional_expr__ElseifexprAssignment_4_1)
{ after(grammarAccess.getConditional_exprAccess().getElseifexprAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group_4__2__Impl
	rule__Conditional_expr__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getThenKeyword_4_2()); }

	'then' 

{ after(grammarAccess.getConditional_exprAccess().getThenKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getTrueexprAssignment_4_3()); }
(rule__Conditional_expr__TrueexprAssignment_4_3)
{ after(grammarAccess.getConditional_exprAccess().getTrueexprAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Conditional_expr__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group_5__0__Impl
	rule__Conditional_expr__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getElseKeyword_5_0()); }

	'else' 

{ after(grammarAccess.getConditional_exprAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getFalseexprAssignment_5_1()); }
(rule__Conditional_expr__FalseexprAssignment_5_1)
{ after(grammarAccess.getConditional_exprAccess().getFalseexprAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_expression__Group__0__Impl
	rule__Logical_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_expressionAccess().getLogical_termParserRuleCall_0()); }
	rulelogical_term
{ after(grammarAccess.getLogical_expressionAccess().getLogical_termParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_expressionAccess().getGroup_1()); }
(rule__Logical_expression__Group_1__0)*
{ after(grammarAccess.getLogical_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_expression__Group_1__0__Impl
	rule__Logical_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_expressionAccess().getOrKeyword_1_0()); }

	'or' 

{ after(grammarAccess.getLogical_expressionAccess().getOrKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_expressionAccess().getLogical_termAssignment_1_1()); }
(rule__Logical_expression__Logical_termAssignment_1_1)
{ after(grammarAccess.getLogical_expressionAccess().getLogical_termAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical_term__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_term__Group__0__Impl
	rule__Logical_term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_term__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_termAccess().getLogical_factorParserRuleCall_0()); }
	rulelogical_factor
{ after(grammarAccess.getLogical_termAccess().getLogical_factorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_term__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_term__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_termAccess().getGroup_1()); }
(rule__Logical_term__Group_1__0)*
{ after(grammarAccess.getLogical_termAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical_term__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_term__Group_1__0__Impl
	rule__Logical_term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_term__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_termAccess().getAndKeyword_1_0()); }

	'and' 

{ after(grammarAccess.getLogical_termAccess().getAndKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_term__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_term__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_term__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_termAccess().getLogical_factorAssignment_1_1()); }
(rule__Logical_term__Logical_factorAssignment_1_1)
{ after(grammarAccess.getLogical_termAccess().getLogical_factorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical_factor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_factor__Group__0__Impl
	rule__Logical_factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_factor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_factorAccess().getNotKeyword_0()); }
(
	'not' 
)?
{ after(grammarAccess.getLogical_factorAccess().getNotKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_factor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_factor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_factorAccess().getRelationAssignment_1()); }
(rule__Logical_factor__RelationAssignment_1)
{ after(grammarAccess.getLogical_factorAccess().getRelationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getArithmetic_expressionParserRuleCall_0()); }
	rulearithmetic_expression
{ after(grammarAccess.getRelationAccess().getArithmetic_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGroup_1()); }
(rule__Relation__Group_1__0)?
{ after(grammarAccess.getRelationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1__0__Impl
	rule__Relation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getOpAssignment_1_0()); }
(rule__Relation__OpAssignment_1_0)
{ after(grammarAccess.getRelationAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getArithmetic_expressionAssignment_1_1()); }
(rule__Relation__Arithmetic_expressionAssignment_1_1)
{ after(grammarAccess.getRelationAccess().getArithmetic_expressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arithmetic_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithmetic_expression__Group__0__Impl
	rule__Arithmetic_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getOprAssignment_0()); }
(rule__Arithmetic_expression__OprAssignment_0)?
{ after(grammarAccess.getArithmetic_expressionAccess().getOprAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithmetic_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithmetic_expression__Group__1__Impl
	rule__Arithmetic_expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getTermAssignment_1()); }
(rule__Arithmetic_expression__TermAssignment_1)
{ after(grammarAccess.getArithmetic_expressionAccess().getTermAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithmetic_expression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithmetic_expression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getGroup_2()); }
(rule__Arithmetic_expression__Group_2__0)*
{ after(grammarAccess.getArithmetic_expressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Arithmetic_expression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithmetic_expression__Group_2__0__Impl
	rule__Arithmetic_expression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getOper1Assignment_2_0()); }
(rule__Arithmetic_expression__Oper1Assignment_2_0)
{ after(grammarAccess.getArithmetic_expressionAccess().getOper1Assignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithmetic_expression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithmetic_expression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getTerm1Assignment_2_1()); }
(rule__Arithmetic_expression__Term1Assignment_2_1)
{ after(grammarAccess.getArithmetic_expressionAccess().getTerm1Assignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Term__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
	rulefactor
{ after(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getGroup_1()); }
(rule__Term__Group_1__0)*
{ after(grammarAccess.getTermAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Term__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getOpAssignment_1_0()); }
(rule__Term__OpAssignment_1_0)
{ after(grammarAccess.getTermAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getFactorAssignment_1_1()); }
(rule__Term__FactorAssignment_1_1)
{ after(grammarAccess.getTermAccess().getFactorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Factor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group__0__Impl
	rule__Factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0()); }
	ruleprimary
{ after(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getGroup_1()); }
(rule__Factor__Group_1__0)?
{ after(grammarAccess.getFactorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Factor__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_1__0__Impl
	rule__Factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getAlternatives_1_0()); }
(rule__Factor__Alternatives_1_0)
{ after(grammarAccess.getFactorAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getPrimaryAssignment_1_1()); }
(rule__Factor__PrimaryAssignment_1_1)
{ after(grammarAccess.getFactorAccess().getPrimaryAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primary__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_8__0__Impl
	rule__Primary__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_8_0()); }

	'(' 

{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_8__1__Impl
	rule__Primary__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getOutput_expr_listAssignment_8_1()); }
(rule__Primary__Output_expr_listAssignment_8_1)
{ after(grammarAccess.getPrimaryAccess().getOutput_expr_listAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_8_2()); }

	')' 

{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Primary__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_9__0__Impl
	rule__Primary__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_9_0()); }

	'[' 

{ after(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_9__1__Impl
	rule__Primary__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getExpre_listAssignment_9_1()); }
(rule__Primary__Expre_listAssignment_9_1)
{ after(grammarAccess.getPrimaryAccess().getExpre_listAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_9__2__Impl
	rule__Primary__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getGroup_9_2()); }
(rule__Primary__Group_9_2__0)*
{ after(grammarAccess.getPrimaryAccess().getGroup_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_9__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_9__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_9_3()); }

	']' 

{ after(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_9_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Primary__Group_9_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_9_2__0__Impl
	rule__Primary__Group_9_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getSemicolonKeyword_9_2_0()); }

	';' 

{ after(grammarAccess.getPrimaryAccess().getSemicolonKeyword_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_9_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_9_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getExpression_listAssignment_9_2_1()); }
(rule__Primary__Expression_listAssignment_9_2_1)
{ after(grammarAccess.getPrimaryAccess().getExpression_listAssignment_9_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primary__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_10__0__Impl
	rule__Primary__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_10_0()); }

	'{' 

{ after(grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_10__1__Impl
	rule__Primary__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getF_argumentsAssignment_10_1()); }
(rule__Primary__F_argumentsAssignment_10_1)
{ after(grammarAccess.getPrimaryAccess().getF_argumentsAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_10_2()); }

	'}' 

{ after(grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Name_Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name_Function__Group__0__Impl
	rule__Name_Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name_Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getName_FunctionAccess().getNameParserRuleCall_0()); }
	rulename
{ after(grammarAccess.getName_FunctionAccess().getNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Name_Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name_Function__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name_Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getName_FunctionAccess().getFunction_call_argsAssignment_1()); }
(rule__Name_Function__Function_call_argsAssignment_1)
{ after(grammarAccess.getName_FunctionAccess().getFunction_call_argsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Initial_ref__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initial_ref__Group__0__Impl
	rule__Initial_ref__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial_ref__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitial_refAccess().getInitialKeyword_0()); }

	'initial' 

{ after(grammarAccess.getInitial_refAccess().getInitialKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Initial_ref__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initial_ref__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial_ref__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitial_refAccess().getFunction_call_argsParserRuleCall_1()); }
	rulefunction_call_args
{ after(grammarAccess.getInitial_refAccess().getFunction_call_argsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprDer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprDer__Group__0__Impl
	rule__ExprDer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprDer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprDerAccess().getDerKeyword_0()); }

	'der' 

{ after(grammarAccess.getExprDerAccess().getDerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprDer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprDer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprDer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprDerAccess().getFunctionArgsAssignment_1()); }
(rule__ExprDer__FunctionArgsAssignment_1)
{ after(grammarAccess.getExprDerAccess().getFunctionArgsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function_call_args__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_call_args__Group__0__Impl
	rule__Function_call_args__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_call_args__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_call_argsAccess().getFunction_call_argsAction_0()); }
(

)
{ after(grammarAccess.getFunction_call_argsAccess().getFunction_call_argsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_call_args__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_call_args__Group__1__Impl
	rule__Function_call_args__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_call_args__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_call_argsAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunction_call_argsAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_call_args__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_call_args__Group__2__Impl
	rule__Function_call_args__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_call_args__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_call_argsAccess().getF_argAssignment_2()); }
(rule__Function_call_args__F_argAssignment_2)?
{ after(grammarAccess.getFunction_call_argsAccess().getF_argAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_call_args__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_call_args__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_call_args__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_call_argsAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFunction_call_argsAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group__0__Impl
	rule__Expression_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getExprAssignment_0()); }
(rule__Expression_list__ExprAssignment_0)
{ after(grammarAccess.getExpression_listAccess().getExprAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getGroup_1()); }
(rule__Expression_list__Group_1__0)*
{ after(grammarAccess.getExpression_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group_1__0__Impl
	rule__Expression_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getExpression_listAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getExpreAssignment_1_1()); }
(rule__Expression_list__ExpreAssignment_1_1)
{ after(grammarAccess.getExpression_listAccess().getExpreAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Name__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group__0__Impl
	rule__Name__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getFullStopKeyword_0()); }
(
	'.' 
)?
{ after(grammarAccess.getNameAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group__1__Impl
	rule__Name__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getName_IDAssignment_1()); }
(rule__Name__Name_IDAssignment_1)
{ after(grammarAccess.getNameAccess().getName_IDAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getGroup_2()); }
(rule__Name__Group_2__0)*
{ after(grammarAccess.getNameAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Name__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group_2__0__Impl
	rule__Name__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getFullStopKeyword_2_0()); }

	'.' 

{ after(grammarAccess.getNameAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getNam_IDAssignment_2_1()); }
(rule__Name__Nam_IDAssignment_2_1)
{ after(grammarAccess.getNameAccess().getNam_IDAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Component_reference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_reference__Group__0__Impl
	rule__Component_reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getFullStopKeyword_0()); }
(
	'.' 
)?
{ after(grammarAccess.getComponent_referenceAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_reference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_reference__Group__1__Impl
	rule__Component_reference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getRefAssignment_1()); }
(rule__Component_reference__RefAssignment_1)
{ after(grammarAccess.getComponent_referenceAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_reference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_reference__Group__2__Impl
	rule__Component_reference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getSubscripts1Assignment_2()); }
(rule__Component_reference__Subscripts1Assignment_2)?
{ after(grammarAccess.getComponent_referenceAccess().getSubscripts1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_reference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_reference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getGroup_3()); }
(rule__Component_reference__Group_3__0)*
{ after(grammarAccess.getComponent_referenceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Component_reference__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_reference__Group_3__0__Impl
	rule__Component_reference__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getFullStopKeyword_3_0()); }

	'.' 

{ after(grammarAccess.getComponent_referenceAccess().getFullStopKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_reference__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_reference__Group_3__1__Impl
	rule__Component_reference__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getRef1Assignment_3_1()); }
(rule__Component_reference__Ref1Assignment_3_1)
{ after(grammarAccess.getComponent_referenceAccess().getRef1Assignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_reference__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_reference__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getSubscriptsAssignment_3_2()); }
(rule__Component_reference__SubscriptsAssignment_3_2)?
{ after(grammarAccess.getComponent_referenceAccess().getSubscriptsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Output_expression_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output_expression_list__Group__0__Impl
	rule__Output_expression_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output_expression_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutput_expression_listAccess().getOutput_expression_listAction_0()); }
(

)
{ after(grammarAccess.getOutput_expression_listAccess().getOutput_expression_listAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output_expression_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output_expression_list__Group__1__Impl
	rule__Output_expression_list__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output_expression_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutput_expression_listAccess().getEprAssignment_1()); }
(rule__Output_expression_list__EprAssignment_1)?
{ after(grammarAccess.getOutput_expression_listAccess().getEprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output_expression_list__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output_expression_list__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output_expression_list__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutput_expression_listAccess().getGroup_2()); }
(rule__Output_expression_list__Group_2__0)*
{ after(grammarAccess.getOutput_expression_listAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Output_expression_list__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output_expression_list__Group_2__0__Impl
	rule__Output_expression_list__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output_expression_list__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutput_expression_listAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getOutput_expression_listAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output_expression_list__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output_expression_list__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output_expression_list__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutput_expression_listAccess().getExprAssignment_2_1()); }
(rule__Output_expression_list__ExprAssignment_2_1)?
{ after(grammarAccess.getOutput_expression_listAccess().getExprAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Array_subscripts__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_subscripts__Group__0__Impl
	rule__Array_subscripts__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getArray_subscriptsAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_subscripts__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_subscripts__Group__1__Impl
	rule__Array_subscripts__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getSubAssignment_1()); }
(rule__Array_subscripts__SubAssignment_1)
{ after(grammarAccess.getArray_subscriptsAccess().getSubAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_subscripts__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_subscripts__Group__2__Impl
	rule__Array_subscripts__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getGroup_2()); }
(rule__Array_subscripts__Group_2__0)*
{ after(grammarAccess.getArray_subscriptsAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_subscripts__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_subscripts__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getArray_subscriptsAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Array_subscripts__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_subscripts__Group_2__0__Impl
	rule__Array_subscripts__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getArray_subscriptsAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_subscripts__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_subscripts__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getSubscriptAssignment_2_1()); }
(rule__Array_subscripts__SubscriptAssignment_2_1)
{ after(grammarAccess.getArray_subscriptsAccess().getSubscriptAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Subscript__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subscript__Group_0__0__Impl
	rule__Subscript__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subscript__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubscriptAccess().getSubscriptAction_0_0()); }
(

)
{ after(grammarAccess.getSubscriptAccess().getSubscriptAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subscript__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subscript__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subscript__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubscriptAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getSubscriptAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function_arguments__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_arguments__Group_0__0__Impl
	rule__Function_arguments__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getFunction_argumentsAction_0_0()); }
(

)
{ after(grammarAccess.getFunction_argumentsAccess().getFunction_argumentsAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_arguments__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_arguments__Group_0__1__Impl
	rule__Function_arguments__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getArgExpAssignment_0_1()); }
(rule__Function_arguments__ArgExpAssignment_0_1)
{ after(grammarAccess.getFunction_argumentsAccess().getArgExpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_arguments__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_arguments__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getAlternatives_0_2()); }
(rule__Function_arguments__Alternatives_0_2)?
{ after(grammarAccess.getFunction_argumentsAccess().getAlternatives_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Fun_Arguments_exp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fun_Arguments_exp__Group__0__Impl
	rule__Fun_Arguments_exp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fun_Arguments_exp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFun_Arguments_expAccess().getCommaKeyword_0()); }

	',' 

{ after(grammarAccess.getFun_Arguments_expAccess().getCommaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fun_Arguments_exp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fun_Arguments_exp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fun_Arguments_exp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFun_Arguments_expAccess().getArgsAssignment_1()); }
(rule__Fun_Arguments_exp__ArgsAssignment_1)
{ after(grammarAccess.getFun_Arguments_expAccess().getArgsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Fun_Arguments_for__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fun_Arguments_for__Group__0__Impl
	rule__Fun_Arguments_for__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fun_Arguments_for__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFun_Arguments_forAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getFun_Arguments_forAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fun_Arguments_for__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fun_Arguments_for__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fun_Arguments_for__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFun_Arguments_forAccess().getFor_indicesAssignment_1()); }
(rule__Fun_Arguments_for__For_indicesAssignment_1)
{ after(grammarAccess.getFun_Arguments_forAccess().getFor_indicesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Named_arguments__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Named_arguments__Group__0__Impl
	rule__Named_arguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Named_arguments__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentsAccess().getNamed_argumentParserRuleCall_0()); }
	rulenamed_argument
{ after(grammarAccess.getNamed_argumentsAccess().getNamed_argumentParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Named_arguments__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Named_arguments__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Named_arguments__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentsAccess().getGroup_1()); }
(rule__Named_arguments__Group_1__0)?
{ after(grammarAccess.getNamed_argumentsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Named_arguments__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Named_arguments__Group_1__0__Impl
	rule__Named_arguments__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Named_arguments__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getNamed_argumentsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Named_arguments__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Named_arguments__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Named_arguments__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentsAccess().getNamed_argumentsAssignment_1_1()); }
(rule__Named_arguments__Named_argumentsAssignment_1_1)
{ after(grammarAccess.getNamed_argumentsAccess().getNamed_argumentsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Named_argument__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Named_argument__Group__0__Impl
	rule__Named_argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Named_argument__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentAccess().getArgAssignment_0()); }
(rule__Named_argument__ArgAssignment_0)
{ after(grammarAccess.getNamed_argumentAccess().getArgAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Named_argument__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Named_argument__Group__1__Impl
	rule__Named_argument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Named_argument__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getNamed_argumentAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Named_argument__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Named_argument__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Named_argument__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentAccess().getExprAssignment_2()); }
(rule__Named_argument__ExprAssignment_2)
{ after(grammarAccess.getNamed_argumentAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__For_indices__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_indices__Group__0__Impl
	rule__For_indices__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_indices__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indicesAccess().getFor_indexParserRuleCall_0()); }
	rulefor_index
{ after(grammarAccess.getFor_indicesAccess().getFor_indexParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_indices__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_indices__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_indices__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indicesAccess().getGroup_1()); }
(rule__For_indices__Group_1__0)*
{ after(grammarAccess.getFor_indicesAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__For_indices__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_indices__Group_1__0__Impl
	rule__For_indices__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_indices__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indicesAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getFor_indicesAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_indices__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_indices__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_indices__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indicesAccess().getFor_indexAssignment_1_1()); }
(rule__For_indices__For_indexAssignment_1_1)
{ after(grammarAccess.getFor_indicesAccess().getFor_indexAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__For_index__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_index__Group__0__Impl
	rule__For_index__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_index__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indexAccess().getIndexAssignment_0()); }
(rule__For_index__IndexAssignment_0)
{ after(grammarAccess.getFor_indexAccess().getIndexAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_index__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_index__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_index__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indexAccess().getGroup_1()); }
(rule__For_index__Group_1__0)?
{ after(grammarAccess.getFor_indexAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__For_index__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_index__Group_1__0__Impl
	rule__For_index__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_index__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indexAccess().getInKeyword_1_0()); }

	'in' 

{ after(grammarAccess.getFor_indexAccess().getInKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_index__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_index__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_index__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indexAccess().getExprAssignment_1_1()); }
(rule__For_index__ExprAssignment_1_1)
{ after(grammarAccess.getFor_indexAccess().getExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__String_comment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String_comment__Group__0__Impl
	rule__String_comment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__String_comment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getString_commentAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getString_commentAccess().getSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__String_comment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String_comment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__String_comment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getString_commentAccess().getGroup_1()); }
(rule__String_comment__Group_1__0)*
{ after(grammarAccess.getString_commentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__String_comment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String_comment__Group_1__0__Impl
	rule__String_comment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__String_comment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getString_commentAccess().getPlusSignKeyword_1_0()); }

	'+' 

{ after(grammarAccess.getString_commentAccess().getPlusSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__String_comment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String_comment__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__String_comment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getString_commentAccess().getSTRINGTerminalRuleCall_1_1()); }
	RULE_STRING
{ after(grammarAccess.getString_commentAccess().getSTRINGTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Modification_alternatives__ExprAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModification_alternativesAccess().getExprExpressionParserRuleCall_0_2_0()); }
	ruleexpression{ after(grammarAccess.getModification_alternativesAccess().getExprExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modification_alternatives__Modification_RuleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModification_alternativesAccess().getModification_RuleModificationParserRuleCall_1_0()); }
	rulemodification{ after(grammarAccess.getModification_alternativesAccess().getModification_RuleModificationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Left_hand_component_reference__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeft_hand_component_referenceAccess().getRefIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getLeft_hand_component_referenceAccess().getRefIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Left_hand_component_reference__Subscripts1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeft_hand_component_referenceAccess().getSubscripts1Array_subscriptsParserRuleCall_2_0()); }
	rulearray_subscripts{ after(grammarAccess.getLeft_hand_component_referenceAccess().getSubscripts1Array_subscriptsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Left_hand_component_reference__Ref1Assignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeft_hand_component_referenceAccess().getRef1IDENTTerminalRuleCall_3_1_0()); }
	RULE_IDENT{ after(grammarAccess.getLeft_hand_component_referenceAccess().getRef1IDENTTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Left_hand_component_reference__SubscriptsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeft_hand_component_referenceAccess().getSubscriptsArray_subscriptsParserRuleCall_3_2_0()); }
	rulearray_subscripts{ after(grammarAccess.getLeft_hand_component_referenceAccess().getSubscriptsArray_subscriptsParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__ExprAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_0_1_1_0()); }
	ruleexpression{ after(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__ExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_1_1_0()); }
	ruleexpression{ after(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__ExprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_2_1_0()); }
	ruleexpression{ after(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_modification__ArgAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_modificationAccess().getArgArgument_listParserRuleCall_2_0()); }
	ruleargument_list{ after(grammarAccess.getClass_modificationAccess().getArgArgument_listParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_modification_or_replaceable__Element_modAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_modification_or_replaceableAccess().getElement_modElement_modificationParserRuleCall_3_0_0()); }
	ruleelement_modification{ after(grammarAccess.getElement_modification_or_replaceableAccess().getElement_modElement_modificationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_modification_or_replaceable__Element_repAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_modification_or_replaceableAccess().getElement_repElement_replaceableParserRuleCall_3_1_0()); }
	ruleelement_replaceable{ after(grammarAccess.getElement_modification_or_replaceableAccess().getElement_repElement_replaceableParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_modification__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_modificationAccess().getNameNameParserRuleCall_0_0()); }
	rulename{ after(grammarAccess.getElement_modificationAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_modification__ModificationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_modificationAccess().getModificationModificationParserRuleCall_1_0()); }
	rulemodification{ after(grammarAccess.getElement_modificationAccess().getModificationModificationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_replaceable__Class_DefAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_replaceableAccess().getClass_DefClass_definitionParserRuleCall_2_0_0()); }
	ruleclass_definition{ after(grammarAccess.getElement_replaceableAccess().getClass_DefClass_definitionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_replaceable__Comp_clause2Assignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_replaceableAccess().getComp_clause2Component_clause1ParserRuleCall_2_1_0()); }
	rulecomponent_clause1{ after(grammarAccess.getElement_replaceableAccess().getComp_clause2Component_clause1ParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_replaceable__Constrain_ClauseAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_replaceableAccess().getConstrain_ClauseConstraining_clauseParserRuleCall_3_0()); }
	ruleconstraining_clause{ after(grammarAccess.getElement_replaceableAccess().getConstrain_ClauseConstraining_clauseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraining_clause__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraining_clauseAccess().getNameNameParserRuleCall_1_0()); }
	rulename{ after(grammarAccess.getConstraining_clauseAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraining_clause__Class_ModAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraining_clauseAccess().getClass_ModClass_modificationParserRuleCall_2_0()); }
	ruleclass_modification{ after(grammarAccess.getConstraining_clauseAccess().getClass_ModClass_modificationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_redeclaration__Class_DefAssignment_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_redeclarationAccess().getClass_DefClass_definitionParserRuleCall_4_0_0_0()); }
	ruleclass_definition{ after(grammarAccess.getElement_redeclarationAccess().getClass_DefClass_definitionParserRuleCall_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_redeclaration__Comp_clause1Assignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_redeclarationAccess().getComp_clause1Component_clause1ParserRuleCall_4_0_1_0()); }
	rulecomponent_clause1{ after(grammarAccess.getElement_redeclarationAccess().getComp_clause1Component_clause1ParserRuleCall_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_redeclaration__Element_RAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_redeclarationAccess().getElement_RElement_replaceableParserRuleCall_4_1_0()); }
	ruleelement_replaceable{ after(grammarAccess.getElement_redeclarationAccess().getElement_RElement_replaceableParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component_clause__Array_SubsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_clauseAccess().getArray_SubsArray_subscriptsParserRuleCall_2_0()); }
	rulearray_subscripts{ after(grammarAccess.getComponent_clauseAccess().getArray_SubsArray_subscriptsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component_clause__Com_ListAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_clauseAccess().getCom_ListComponent_listParserRuleCall_3_0()); }
	rulecomponent_list{ after(grammarAccess.getComponent_clauseAccess().getCom_ListComponent_listParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component_list__Component_DecAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_listAccess().getComponent_DecComponent_declarationParserRuleCall_1_1_0()); }
	rulecomponent_declaration{ after(grammarAccess.getComponent_listAccess().getComponent_DecComponent_declarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component_declaration__DecAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_declarationAccess().getDecDeclarationParserRuleCall_0_0()); }
	ruledeclaration{ after(grammarAccess.getComponent_declarationAccess().getDecDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component_declaration__Conditional_AttAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_declarationAccess().getConditional_AttConditional_attributeParserRuleCall_1_0()); }
	ruleconditional_attribute{ after(grammarAccess.getComponent_declarationAccess().getConditional_AttConditional_attributeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_attribute__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_attributeAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleexpression{ after(grammarAccess.getConditional_attributeAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component_clause1__Com_DecAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_clause1Access().getCom_DecComponent_declaration1ParserRuleCall_2_0()); }
	rulecomponent_declaration1{ after(grammarAccess.getComponent_clause1Access().getCom_DecComponent_declaration1ParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_specifier__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_specifierAccess().getNameNameParserRuleCall_0()); }
	rulename{ after(grammarAccess.getType_specifierAccess().getNameNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__RedeclaredComponentNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getRedeclaredComponentNameIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getDeclarationAccess().getRedeclaredComponentNameIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ArraySubsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getArraySubsArray_subscriptsParserRuleCall_2_0()); }
	rulearray_subscripts{ after(grammarAccess.getDeclarationAccess().getArraySubsArray_subscriptsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ModAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getModModificationParserRuleCall_3_0()); }
	rulemodification{ after(grammarAccess.getDeclarationAccess().getModModificationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__CompAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getCompCompositionParserRuleCall_1_0_2_0()); }
	rulecomposition{ after(grammarAccess.getClass_specifierAccess().getCompCompositionParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__NameAssignment_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getNameNameParserRuleCall_1_1_3_0()); }
	rulename{ after(grammarAccess.getClass_specifierAccess().getNameNameParserRuleCall_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Array_SubsAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getArray_SubsArray_subscriptsParserRuleCall_1_1_4_0()); }
	rulearray_subscripts{ after(grammarAccess.getClass_specifierAccess().getArray_SubsArray_subscriptsParserRuleCall_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Class_modAssignment_1_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getClass_modClass_modificationParserRuleCall_1_1_5_0()); }
	ruleclass_modification{ after(grammarAccess.getClass_specifierAccess().getClass_modClass_modificationParserRuleCall_1_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__VarAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getVarIDENTTerminalRuleCall_1_2_0_0()); }
	RULE_IDENT{ after(grammarAccess.getClass_specifierAccess().getVarIDENTTerminalRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Enum_listAssignment_1_2_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getEnum_listEnum_listParserRuleCall_1_2_4_0_0()); }
	ruleenum_list{ after(grammarAccess.getClass_specifierAccess().getEnum_listEnum_listParserRuleCall_1_2_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__NameAssignment_1_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getNameNameParserRuleCall_1_3_4_0()); }
	rulename{ after(grammarAccess.getClass_specifierAccess().getNameNameParserRuleCall_1_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__Class_modAssignment_1_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getClass_modClass_modificationParserRuleCall_1_4_2_0()); }
	ruleclass_modification{ after(grammarAccess.getClass_specifierAccess().getClass_modClass_modificationParserRuleCall_1_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_specifier__CompAssignment_1_4_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_specifierAccess().getCompCompositionParserRuleCall_1_4_4_0()); }
	rulecomposition{ after(grammarAccess.getClass_specifierAccess().getCompCompositionParserRuleCall_1_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_list__Ennum_LitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnum_listAccess().getEnnum_LitEnumeration_literalParserRuleCall_1_0()); }
	ruleenumeration_literal{ after(grammarAccess.getEnum_listAccess().getEnnum_LitEnumeration_literalParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum_list__E_literalAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnum_listAccess().getE_literalEnumeration_literalParserRuleCall_2_1_0()); }
	ruleenumeration_literal{ after(grammarAccess.getEnum_listAccess().getE_literalEnumeration_literalParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__E_List_InitialAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getE_List_InitialElement_listParserRuleCall_0_0()); }
	ruleelement_list{ after(grammarAccess.getCompositionAccess().getE_List_InitialElement_listParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__E_List_PublicAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getE_List_PublicElement_listParserRuleCall_1_0_1_0()); }
	ruleelement_list{ after(grammarAccess.getCompositionAccess().getE_List_PublicElement_listParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__E_List_ProtectedAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getE_List_ProtectedElement_listParserRuleCall_1_1_1_0()); }
	ruleelement_list{ after(grammarAccess.getCompositionAccess().getE_List_ProtectedElement_listParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Eqn_sectionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getEqn_sectionEquation_sectionParserRuleCall_1_2_0()); }
	ruleequation_section{ after(grammarAccess.getCompositionAccess().getEqn_sectionEquation_sectionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Alg_sectionAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getAlg_sectionAlgorithm_sectionParserRuleCall_1_3_0()); }
	rulealgorithm_section{ after(grammarAccess.getCompositionAccess().getAlg_sectionAlgorithm_sectionParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Lang_SpecAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getLang_SpecLanguage_specificationParserRuleCall_2_1_0()); }
	rulelanguage_specification{ after(grammarAccess.getCompositionAccess().getLang_SpecLanguage_specificationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__External_F_CAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getExternal_F_CExternal_function_callParserRuleCall_2_2_0()); }
	ruleexternal_function_call{ after(grammarAccess.getCompositionAccess().getExternal_F_CExternal_function_callParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Annotation1Assignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getAnnotation1AnnotationParserRuleCall_2_3_0()); }
	ruleannotation{ after(grammarAccess.getCompositionAccess().getAnnotation1AnnotationParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Annotation2Assignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositionAccess().getAnnotation2AnnotationParserRuleCall_3_0_0()); }
	ruleannotation{ after(grammarAccess.getCompositionAccess().getAnnotation2AnnotationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_list__ElementAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_listAccess().getElementElementParserRuleCall_1_0_0()); }
	ruleelement{ after(grammarAccess.getElement_listAccess().getElementElementParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Class_DefAssignment_2_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getClass_DefClass_definitionParserRuleCall_2_4_0_0_0()); }
	ruleclass_definition{ after(grammarAccess.getElementAccess().getClass_DefClass_definitionParserRuleCall_2_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Comp_ClauseAssignment_2_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getComp_ClauseComponent_clauseParserRuleCall_2_4_0_1_0()); }
	rulecomponent_clause{ after(grammarAccess.getElementAccess().getComp_ClauseComponent_clauseParserRuleCall_2_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Class_DefAssignment_2_4_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getClass_DefClass_definitionParserRuleCall_2_4_1_1_0_0()); }
	ruleclass_definition{ after(grammarAccess.getElementAccess().getClass_DefClass_definitionParserRuleCall_2_4_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Comp_ClauseAssignment_2_4_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getComp_ClauseComponent_clauseParserRuleCall_2_4_1_1_1_0()); }
	rulecomponent_clause{ after(grammarAccess.getElementAccess().getComp_ClauseComponent_clauseParserRuleCall_2_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Constrain_ClauseAssignment_2_4_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getConstrain_ClauseConstraining_clauseParserRuleCall_2_4_1_2_0_0()); }
	ruleconstraining_clause{ after(grammarAccess.getElementAccess().getConstrain_ClauseConstraining_clauseParserRuleCall_2_4_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation_section__EqnAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquation_sectionAccess().getEqnEquationParserRuleCall_3_0_0()); }
	ruleequation{ after(grammarAccess.getEquation_sectionAccess().getEqnEquationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__SimAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getSimSimple_expressionParserRuleCall_0_0_0_0()); }
	rulesimple_expression{ after(grammarAccess.getEquationAccess().getSimSimple_expressionParserRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__ExprAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getExprExpressionParserRuleCall_0_0_2_0()); }
	ruleexpression{ after(grammarAccess.getEquationAccess().getExprExpressionParserRuleCall_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__IF_EQNAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getIF_EQNIf_equationParserRuleCall_0_1_0()); }
	ruleif_equation{ after(grammarAccess.getEquationAccess().getIF_EQNIf_equationParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__FOR_EQNAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getFOR_EQNFor_equationParserRuleCall_0_2_0()); }
	rulefor_equation{ after(grammarAccess.getEquationAccess().getFOR_EQNFor_equationParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__ConAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getConConnect_clauseParserRuleCall_0_3_0()); }
	ruleconnect_clause{ after(grammarAccess.getEquationAccess().getConConnect_clauseParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__WHEN_EQNAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getWHEN_EQNWhen_equationParserRuleCall_0_4_0()); }
	rulewhen_equation{ after(grammarAccess.getEquationAccess().getWHEN_EQNWhen_equationParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__CommentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getCommentCommentParserRuleCall_1_0()); }
	rulecomment{ after(grammarAccess.getEquationAccess().getCommentCommentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__WhenEprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getWhenEprExpressionParserRuleCall_1_0()); }
	ruleexpression{ after(grammarAccess.getWhen_equationAccess().getWhenEprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Eqn_ThenAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getEqn_ThenEquationParserRuleCall_3_0_0()); }
	ruleequation{ after(grammarAccess.getWhen_equationAccess().getEqn_ThenEquationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__ElseWhenEprAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getElseWhenEprExpressionParserRuleCall_4_1_0()); }
	ruleexpression{ after(grammarAccess.getWhen_equationAccess().getElseWhenEprExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__When_equation__Eqn_ThenAssignment_4_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_equationAccess().getEqn_ThenEquationParserRuleCall_4_3_0_0()); }
	ruleequation{ after(grammarAccess.getWhen_equationAccess().getEqn_ThenEquationParserRuleCall_4_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__ExprtrueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getExprtrueExpressionParserRuleCall_1_0()); }
	ruleexpression{ after(grammarAccess.getIf_equationAccess().getExprtrueExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__EqnAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getEqnEquationParserRuleCall_3_0_0()); }
	ruleequation{ after(grammarAccess.getIf_equationAccess().getEqnEquationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__ExprStilltrueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getExprStilltrueExpressionParserRuleCall_4_1_0()); }
	ruleexpression{ after(grammarAccess.getIf_equationAccess().getExprStilltrueExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__ThenEqnAssignment_4_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getThenEqnEquationParserRuleCall_4_3_0_0()); }
	ruleequation{ after(grammarAccess.getIf_equationAccess().getThenEqnEquationParserRuleCall_4_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_equation__ElseEqnAssignment_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_equationAccess().getElseEqnEquationParserRuleCall_5_1_0_0()); }
	ruleequation{ after(grammarAccess.getIf_equationAccess().getElseEqnEquationParserRuleCall_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_equation__For_loopAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_equationAccess().getFor_loopFor_indicesParserRuleCall_1_0()); }
	rulefor_indices{ after(grammarAccess.getFor_equationAccess().getFor_loopFor_indicesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_equation__For_EqnAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_equationAccess().getFor_EqnEquationParserRuleCall_3_0_0()); }
	ruleequation{ after(grammarAccess.getFor_equationAccess().getFor_EqnEquationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connect_clause__Connector1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnect_clauseAccess().getConnector1Component_referenceParserRuleCall_2_0()); }
	rulecomponent_reference{ after(grammarAccess.getConnect_clauseAccess().getConnector1Component_referenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connect_clause__Connector2Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnect_clauseAccess().getConnector2Component_referenceParserRuleCall_4_0()); }
	rulecomponent_reference{ after(grammarAccess.getConnect_clauseAccess().getConnector2Component_referenceParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm_section__AlgorithmAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithm_sectionAccess().getAlgorithmStatementParserRuleCall_3_0_0()); }
	rulestatement{ after(grammarAccess.getAlgorithm_sectionAccess().getAlgorithmStatementParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__If_statementAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIf_statementIf_statementParserRuleCall_1_0_0()); }
	ruleif_statement{ after(grammarAccess.getStatementAccess().getIf_statementIf_statementParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__State_OutputExprListAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getState_OutputExprListState_OutputExprListParserRuleCall_1_1_0()); }
	rulestate_OutputExprList{ after(grammarAccess.getStatementAccess().getState_OutputExprListState_OutputExprListParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__State_Comp_RefAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getState_Comp_RefState_Comp_RefParserRuleCall_1_3_0()); }
	rulestate_Comp_Ref{ after(grammarAccess.getStatementAccess().getState_Comp_RefState_Comp_RefParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__For_statementAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getFor_statementFor_statementParserRuleCall_1_4_0()); }
	rulefor_statement{ after(grammarAccess.getStatementAccess().getFor_statementFor_statementParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__When_statementAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getWhen_statementWhen_statementParserRuleCall_1_5_0()); }
	rulewhen_statement{ after(grammarAccess.getStatementAccess().getWhen_statementWhen_statementParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__While_statementAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getWhile_statementWhile_statementParserRuleCall_1_6_0()); }
	rulewhile_statement{ after(grammarAccess.getStatementAccess().getWhile_statementWhile_statementParserRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State_OutputExprList__Output_expression_listAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_OutputExprListAccess().getOutput_expression_listOutput_expression_listParserRuleCall_1_0()); }
	ruleoutput_expression_list{ after(grammarAccess.getState_OutputExprListAccess().getOutput_expression_listOutput_expression_listParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State_OutputExprList__Component_refAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_OutputExprListAccess().getComponent_refComponent_referenceParserRuleCall_4_0()); }
	rulecomponent_reference{ after(grammarAccess.getState_OutputExprListAccess().getComponent_refComponent_referenceParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State_OutputExprList__Fun_call_argsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_OutputExprListAccess().getFun_call_argsFunction_call_argsParserRuleCall_5_0()); }
	rulefunction_call_args{ after(grammarAccess.getState_OutputExprListAccess().getFun_call_argsFunction_call_argsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State_Comp_Ref__Component_referenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_Comp_RefAccess().getComponent_referenceComponent_referenceParserRuleCall_0_0()); }
	rulecomponent_reference{ after(grammarAccess.getState_Comp_RefAccess().getComponent_referenceComponent_referenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State_Comp_Ref__ExprAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_Comp_RefAccess().getExprExpressionParserRuleCall_1_0_1_0()); }
	ruleexpression{ after(grammarAccess.getState_Comp_RefAccess().getExprExpressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State_Comp_Ref__Fun_call_argsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getState_Comp_RefAccess().getFun_call_argsFunction_call_argsParserRuleCall_1_1_0()); }
	rulefunction_call_args{ after(grammarAccess.getState_Comp_RefAccess().getFun_call_argsFunction_call_argsParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__When_exprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getWhen_exprExpressionParserRuleCall_1_0()); }
	ruleexpression{ after(grammarAccess.getWhen_statementAccess().getWhen_exprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__When_stat_trueAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getWhen_stat_trueStatementParserRuleCall_3_0_0()); }
	rulestatement{ after(grammarAccess.getWhen_statementAccess().getWhen_stat_trueStatementParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Else_When_exprAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getElse_When_exprExpressionParserRuleCall_4_1_0()); }
	ruleexpression{ after(grammarAccess.getWhen_statementAccess().getElse_When_exprExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__When_statement__Then_statementAssignment_4_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhen_statementAccess().getThen_statementStatementParserRuleCall_4_3_0_0()); }
	rulestatement{ after(grammarAccess.getWhen_statementAccess().getThen_statementStatementParserRuleCall_4_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__While_exprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getWhile_exprExpressionParserRuleCall_1_0()); }
	ruleexpression{ after(grammarAccess.getWhile_statementAccess().getWhile_exprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__While_statAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getWhile_statWhile_statementParserRuleCall_3_0_0()); }
	rulewhile_statement{ after(grammarAccess.getWhile_statementAccess().getWhile_statWhile_statementParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__For_indicesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getFor_indicesFor_indicesParserRuleCall_1_0()); }
	rulefor_indices{ after(grammarAccess.getFor_statementAccess().getFor_indicesFor_indicesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__For_statementAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getFor_statementFor_statementParserRuleCall_3_0_0()); }
	rulefor_statement{ after(grammarAccess.getFor_statementAccess().getFor_statementFor_statementParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__ExprtrueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getExprtrueExpressionParserRuleCall_1_0()); }
	ruleexpression{ after(grammarAccess.getIf_statementAccess().getExprtrueExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__StateAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getStateStatementParserRuleCall_3_0_0()); }
	rulestatement{ after(grammarAccess.getIf_statementAccess().getStateStatementParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__ExprStilltrueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getExprStilltrueExpressionParserRuleCall_4_1_0()); }
	ruleexpression{ after(grammarAccess.getIf_statementAccess().getExprStilltrueExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__StateAssignment_4_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getStateStatementParserRuleCall_4_3_0_0()); }
	rulestatement{ after(grammarAccess.getIf_statementAccess().getStateStatementParserRuleCall_4_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__StateAssignment_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getStateStatementParserRuleCall_5_1_0_0()); }
	rulestatement{ after(grammarAccess.getIf_statementAccess().getStateStatementParserRuleCall_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Extends_clause__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtends_clauseAccess().getNameNameParserRuleCall_1_0()); }
	rulename{ after(grammarAccess.getExtends_clauseAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Extends_clause__Class_ModAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtends_clauseAccess().getClass_ModClass_modificationParserRuleCall_2_0()); }
	ruleclass_modification{ after(grammarAccess.getExtends_clauseAccess().getClass_ModClass_modificationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Extends_clause__AnnotationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtends_clauseAccess().getAnnotationAnnotationParserRuleCall_3_0()); }
	ruleannotation{ after(grammarAccess.getExtends_clauseAccess().getAnnotationAnnotationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Class_ModAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getClass_ModClass_modificationParserRuleCall_1_0()); }
	ruleclass_modification{ after(grammarAccess.getAnnotationAccess().getClass_ModClass_modificationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import_clause__NameAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_clauseAccess().getNameNameParserRuleCall_1_0_2_0()); }
	rulename{ after(grammarAccess.getImport_clauseAccess().getNameNameParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import_clause__NameAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_clauseAccess().getNameNameParserRuleCall_1_1_0_0()); }
	rulename{ after(grammarAccess.getImport_clauseAccess().getNameNameParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Language_specification__StrAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLanguage_specificationAccess().getStrSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getLanguage_specificationAccess().getStrSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__External_function_call__Component_referenceAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternal_function_callAccess().getComponent_referenceComponent_referenceParserRuleCall_1_0_0()); }
	rulecomponent_reference{ after(grammarAccess.getExternal_function_callAccess().getComponent_referenceComponent_referenceParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__External_function_call__E_ListAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternal_function_callAccess().getE_ListExpression_listParserRuleCall_4_0()); }
	ruleexpression_list{ after(grammarAccess.getExternal_function_callAccess().getE_ListExpression_listParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprSimple_expressionParserRuleCall_0_0()); }
	rulesimple_expression{ after(grammarAccess.getExpressionAccess().getExprSimple_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Log_ExpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getLog_ExpLogical_expressionParserRuleCall_0_0()); }
	rulelogical_expression{ after(grammarAccess.getSimple_expressionAccess().getLog_ExpLogical_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__S_Logical_expressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getS_Logical_expressionLogical_expressionParserRuleCall_1_1_0()); }
	rulelogical_expression{ after(grammarAccess.getSimple_expressionAccess().getS_Logical_expressionLogical_expressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__L_Logical_expressionAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getL_Logical_expressionLogical_expressionParserRuleCall_1_2_1_0()); }
	rulelogical_expression{ after(grammarAccess.getSimple_expressionAccess().getL_Logical_expressionLogical_expressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__IfexprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getIfexprExpressionParserRuleCall_1_0()); }
	ruleexpression{ after(grammarAccess.getConditional_exprAccess().getIfexprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__ThenexprAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getThenexprExpressionParserRuleCall_3_0()); }
	ruleexpression{ after(grammarAccess.getConditional_exprAccess().getThenexprExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__ElseifexprAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getElseifexprExpressionParserRuleCall_4_1_0()); }
	ruleexpression{ after(grammarAccess.getConditional_exprAccess().getElseifexprExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__TrueexprAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getTrueexprExpressionParserRuleCall_4_3_0()); }
	ruleexpression{ after(grammarAccess.getConditional_exprAccess().getTrueexprExpressionParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__FalseexprAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getFalseexprExpressionParserRuleCall_5_1_0()); }
	ruleexpression{ after(grammarAccess.getConditional_exprAccess().getFalseexprExpressionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_expression__Logical_termAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_expressionAccess().getLogical_termLogical_termParserRuleCall_1_1_0()); }
	rulelogical_term{ after(grammarAccess.getLogical_expressionAccess().getLogical_termLogical_termParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_term__Logical_factorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_termAccess().getLogical_factorLogical_factorParserRuleCall_1_1_0()); }
	rulelogical_factor{ after(grammarAccess.getLogical_termAccess().getLogical_factorLogical_factorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_factor__RelationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_factorAccess().getRelationRelationParserRuleCall_1_0()); }
	rulerelation{ after(grammarAccess.getLogical_factorAccess().getRelationRelationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getOpAlternatives_1_0_0()); }
(rule__Relation__OpAlternatives_1_0_0)
{ after(grammarAccess.getRelationAccess().getOpAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Arithmetic_expressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getArithmetic_expressionArithmetic_expressionParserRuleCall_1_1_0()); }
	rulearithmetic_expression{ after(grammarAccess.getRelationAccess().getArithmetic_expressionArithmetic_expressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__OprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getOprAlternatives_0_0()); }
(rule__Arithmetic_expression__OprAlternatives_0_0)
{ after(grammarAccess.getArithmetic_expressionAccess().getOprAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__TermAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getTermTermParserRuleCall_1_0()); }
	ruleterm{ after(grammarAccess.getArithmetic_expressionAccess().getTermTermParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Oper1Assignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getOper1Alternatives_2_0_0()); }
(rule__Arithmetic_expression__Oper1Alternatives_2_0_0)
{ after(grammarAccess.getArithmetic_expressionAccess().getOper1Alternatives_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Term1Assignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getTerm1TermParserRuleCall_2_1_0()); }
	ruleterm{ after(grammarAccess.getArithmetic_expressionAccess().getTerm1TermParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getOpAlternatives_1_0_0()); }
(rule__Term__OpAlternatives_1_0_0)
{ after(grammarAccess.getTermAccess().getOpAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__FactorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getFactorFactorParserRuleCall_1_1_0()); }
	rulefactor{ after(grammarAccess.getTermAccess().getFactorFactorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__PrimaryAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getPrimaryPrimaryParserRuleCall_1_1_0()); }
	ruleprimary{ after(grammarAccess.getFactorAccess().getPrimaryPrimaryParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__NumAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getNumUNSIGNED_NUMBERTerminalRuleCall_0_0()); }
	RULE_UNSIGNED_NUMBER{ after(grammarAccess.getPrimaryAccess().getNumUNSIGNED_NUMBERTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__IntAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getIntINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getPrimaryAccess().getIntINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__StrAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getStrSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getPrimaryAccess().getStrSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__BoolAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getBoolBOOL_VALTerminalRuleCall_3_0()); }
	RULE_BOOL_VAL{ after(grammarAccess.getPrimaryAccess().getBoolBOOL_VALTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Component_referenceAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getComponent_referenceComponent_referenceParserRuleCall_7_0()); }
	rulecomponent_reference{ after(grammarAccess.getPrimaryAccess().getComponent_referenceComponent_referenceParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Output_expr_listAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getOutput_expr_listOutput_expression_listParserRuleCall_8_1_0()); }
	ruleoutput_expression_list{ after(grammarAccess.getPrimaryAccess().getOutput_expr_listOutput_expression_listParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Expre_listAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getExpre_listExpression_listParserRuleCall_9_1_0()); }
	ruleexpression_list{ after(grammarAccess.getPrimaryAccess().getExpre_listExpression_listParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Expression_listAssignment_9_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getExpression_listExpression_listParserRuleCall_9_2_1_0()); }
	ruleexpression_list{ after(grammarAccess.getPrimaryAccess().getExpression_listExpression_listParserRuleCall_9_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__F_argumentsAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getF_argumentsFunction_argumentsParserRuleCall_10_1_0()); }
	rulefunction_arguments{ after(grammarAccess.getPrimaryAccess().getF_argumentsFunction_argumentsParserRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__EndAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getEndEndKeyword_11_0()); }
(
{ before(grammarAccess.getPrimaryAccess().getEndEndKeyword_11_0()); }

	'end' 

{ after(grammarAccess.getPrimaryAccess().getEndEndKeyword_11_0()); }
)

{ after(grammarAccess.getPrimaryAccess().getEndEndKeyword_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name_Function__Function_call_argsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getName_FunctionAccess().getFunction_call_argsFunction_call_argsParserRuleCall_1_0()); }
	rulefunction_call_args{ after(grammarAccess.getName_FunctionAccess().getFunction_call_argsFunction_call_argsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprDer__FunctionArgsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprDerAccess().getFunctionArgsFunction_call_argsParserRuleCall_1_0()); }
	rulefunction_call_args{ after(grammarAccess.getExprDerAccess().getFunctionArgsFunction_call_argsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_call_args__F_argAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_call_argsAccess().getF_argFunction_argumentsParserRuleCall_2_0()); }
	rulefunction_arguments{ after(grammarAccess.getFunction_call_argsAccess().getF_argFunction_argumentsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getExprExpressionParserRuleCall_0_0()); }
	ruleexpression{ after(grammarAccess.getExpression_listAccess().getExprExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__ExpreAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getExpreExpressionParserRuleCall_1_1_0()); }
	ruleexpression{ after(grammarAccess.getExpression_listAccess().getExpreExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Name_IDAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getName_IDIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getNameAccess().getName_IDIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Nam_IDAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getNam_IDIDENTTerminalRuleCall_2_1_0()); }
	RULE_IDENT{ after(grammarAccess.getNameAccess().getNam_IDIDENTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getRefIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getComponent_referenceAccess().getRefIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Subscripts1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getSubscripts1Array_subscriptsParserRuleCall_2_0()); }
	rulearray_subscripts{ after(grammarAccess.getComponent_referenceAccess().getSubscripts1Array_subscriptsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Ref1Assignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getRef1IDENTTerminalRuleCall_3_1_0()); }
	RULE_IDENT{ after(grammarAccess.getComponent_referenceAccess().getRef1IDENTTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__SubscriptsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getSubscriptsArray_subscriptsParserRuleCall_3_2_0()); }
	rulearray_subscripts{ after(grammarAccess.getComponent_referenceAccess().getSubscriptsArray_subscriptsParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output_expression_list__EprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutput_expression_listAccess().getEprExpressionParserRuleCall_1_0()); }
	ruleexpression{ after(grammarAccess.getOutput_expression_listAccess().getEprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output_expression_list__ExprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutput_expression_listAccess().getExprExpressionParserRuleCall_2_1_0()); }
	ruleexpression{ after(grammarAccess.getOutput_expression_listAccess().getExprExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__SubAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getSubSubscriptParserRuleCall_1_0()); }
	rulesubscript{ after(grammarAccess.getArray_subscriptsAccess().getSubSubscriptParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__SubscriptAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getSubscriptSubscriptParserRuleCall_2_1_0()); }
	rulesubscript{ after(grammarAccess.getArray_subscriptsAccess().getSubscriptSubscriptParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subscript__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubscriptAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleexpression{ after(grammarAccess.getSubscriptAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__ArgExpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getArgExpExpressionParserRuleCall_0_1_0()); }
	ruleexpression{ after(grammarAccess.getFunction_argumentsAccess().getArgExpExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Fun_Arg_ExprAssignment_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ExprFun_Arguments_expParserRuleCall_0_2_0_0()); }
	ruleFun_Arguments_exp{ after(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ExprFun_Arguments_expParserRuleCall_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Fun_Arg_ForAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ForFun_Arguments_forParserRuleCall_0_2_1_0()); }
	ruleFun_Arguments_for{ after(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ForFun_Arguments_forParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Name_argAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getName_argNamed_argumentsParserRuleCall_1_0()); }
	rulenamed_arguments{ after(grammarAccess.getFunction_argumentsAccess().getName_argNamed_argumentsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fun_Arguments_exp__ArgsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFun_Arguments_expAccess().getArgsFunction_argumentsParserRuleCall_1_0()); }
	rulefunction_arguments{ after(grammarAccess.getFun_Arguments_expAccess().getArgsFunction_argumentsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fun_Arguments_for__For_indicesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFun_Arguments_forAccess().getFor_indicesFor_indicesParserRuleCall_1_0()); }
	rulefor_indices{ after(grammarAccess.getFun_Arguments_forAccess().getFor_indicesFor_indicesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Named_arguments__Named_argumentsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentsAccess().getNamed_argumentsNamed_argumentsParserRuleCall_1_1_0()); }
	rulenamed_arguments{ after(grammarAccess.getNamed_argumentsAccess().getNamed_argumentsNamed_argumentsParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Named_argument__ArgAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentAccess().getArgIDENTTerminalRuleCall_0_0()); }
	RULE_IDENT{ after(grammarAccess.getNamed_argumentAccess().getArgIDENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Named_argument__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleexpression{ after(grammarAccess.getNamed_argumentAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_indices__For_indexAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indicesAccess().getFor_indexFor_indexParserRuleCall_1_1_0()); }
	rulefor_index{ after(grammarAccess.getFor_indicesAccess().getFor_indexFor_indexParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_index__IndexAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indexAccess().getIndexIDENTTerminalRuleCall_0_0()); }
	RULE_IDENT{ after(grammarAccess.getFor_indexAccess().getIndexIDENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_index__ExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indexAccess().getExprExpressionParserRuleCall_1_1_0()); }
	ruleexpression{ after(grammarAccess.getFor_indexAccess().getExprExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_UNSIGNED_NUMBER : (('0'..'9')+ '.' ('0'..'9')* (('E'|'e') ('+'|'-')? ('0'..'9')+)?|('0'..'9')+ ('E'|'e') ('+'|'-')? ('0'..'9')+);

RULE_BOOL_VAL : ('true'|'false');

RULE_INT : ('0'..'9')+;

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_IDENT : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'.')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


