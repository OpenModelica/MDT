/*
* generated by Xtext
*/
package org.openmodelica.modelicaml.editor.xtext.modification.ui.contentassist;

import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.jface.text.contentassist.ICompletionProposal;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;
import org.openmodelica.modelicaml.common.contentassist.ModelicaMLContentAssist;
import org.openmodelica.modelicaml.editor.xtext.modification.ui.contentassist.AbstractModificationProposalProvider;
/**
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on how to customize content assistant
 */
public class ModificationProposalProvider extends AbstractModificationProposalProvider {
	@Override
	public void complete_left_hand_component_reference(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor)
	{
		super.complete_component_reference(model, ruleCall, context, acceptor);
		List<String> cList = ModelicaMLContentAssist.getModifiedComponentReferenceSortedList();

		for (String string : cList) 
		{
			String completionString = string;
			String displayString = ModelicaMLContentAssist.getDisplayCompletionString(context.getPrefix(), completionString);
			ICompletionProposal completionProposal = createCompletionProposal(completionString, displayString, ModelicaMLContentAssist.getIcon(string), context);
			acceptor.accept(completionProposal);
		}

	}
}
