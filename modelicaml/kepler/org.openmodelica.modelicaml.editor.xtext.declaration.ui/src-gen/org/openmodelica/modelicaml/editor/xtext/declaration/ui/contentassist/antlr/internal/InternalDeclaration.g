/*
* generated by Xtext
*/
grammar InternalDeclaration;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.openmodelica.modelicaml.editor.xtext.declaration.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.openmodelica.modelicaml.editor.xtext.declaration.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.openmodelica.modelicaml.editor.xtext.declaration.services.DeclarationGrammarAccess;

}

@parser::members {
 
 	private DeclarationGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DeclarationGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulecomponent_declaration
entryRulecomponent_declaration 
:
{ before(grammarAccess.getComponent_declarationRule()); }
	 rulecomponent_declaration
{ after(grammarAccess.getComponent_declarationRule()); } 
	 EOF 
;

// Rule component_declaration
rulecomponent_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponent_declarationAccess().getGroup()); }
(rule__Component_declaration__Group__0)?
{ after(grammarAccess.getComponent_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemodification
entryRulemodification 
:
{ before(grammarAccess.getModificationRule()); }
	 rulemodification
{ after(grammarAccess.getModificationRule()); } 
	 EOF 
;

// Rule modification
rulemodification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModificationAccess().getAlternatives()); }
(rule__Modification__Alternatives)
{ after(grammarAccess.getModificationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconditional_attribute
entryRuleconditional_attribute 
:
{ before(grammarAccess.getConditional_attributeRule()); }
	 ruleconditional_attribute
{ after(grammarAccess.getConditional_attributeRule()); } 
	 EOF 
;

// Rule conditional_attribute
ruleconditional_attribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditional_attributeAccess().getGroup()); }
(rule__Conditional_attribute__Group__0)
{ after(grammarAccess.getConditional_attributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpression
entryRuleexpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesimple_expression
entryRulesimple_expression 
:
{ before(grammarAccess.getSimple_expressionRule()); }
	 rulesimple_expression
{ after(grammarAccess.getSimple_expressionRule()); } 
	 EOF 
;

// Rule simple_expression
rulesimple_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimple_expressionAccess().getGroup()); }
(rule__Simple_expression__Group__0)
{ after(grammarAccess.getSimple_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconditional_expr
entryRuleconditional_expr 
:
{ before(grammarAccess.getConditional_exprRule()); }
	 ruleconditional_expr
{ after(grammarAccess.getConditional_exprRule()); } 
	 EOF 
;

// Rule conditional_expr
ruleconditional_expr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditional_exprAccess().getGroup()); }
(rule__Conditional_expr__Group__0)
{ after(grammarAccess.getConditional_exprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelogical_expression
entryRulelogical_expression 
:
{ before(grammarAccess.getLogical_expressionRule()); }
	 rulelogical_expression
{ after(grammarAccess.getLogical_expressionRule()); } 
	 EOF 
;

// Rule logical_expression
rulelogical_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogical_expressionAccess().getGroup()); }
(rule__Logical_expression__Group__0)
{ after(grammarAccess.getLogical_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelogical_term
entryRulelogical_term 
:
{ before(grammarAccess.getLogical_termRule()); }
	 rulelogical_term
{ after(grammarAccess.getLogical_termRule()); } 
	 EOF 
;

// Rule logical_term
rulelogical_term
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogical_termAccess().getGroup()); }
(rule__Logical_term__Group__0)
{ after(grammarAccess.getLogical_termAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelogical_factor
entryRulelogical_factor 
:
{ before(grammarAccess.getLogical_factorRule()); }
	 rulelogical_factor
{ after(grammarAccess.getLogical_factorRule()); } 
	 EOF 
;

// Rule logical_factor
rulelogical_factor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogical_factorAccess().getGroup()); }
(rule__Logical_factor__Group__0)
{ after(grammarAccess.getLogical_factorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerelation
entryRulerelation 
:
{ before(grammarAccess.getRelationRule()); }
	 rulerelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule relation
rulerelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationAccess().getGroup()); }
(rule__Relation__Group__0)
{ after(grammarAccess.getRelationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulearithmetic_expression
entryRulearithmetic_expression 
:
{ before(grammarAccess.getArithmetic_expressionRule()); }
	 rulearithmetic_expression
{ after(grammarAccess.getArithmetic_expressionRule()); } 
	 EOF 
;

// Rule arithmetic_expression
rulearithmetic_expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getGroup()); }
(rule__Arithmetic_expression__Group__0)
{ after(grammarAccess.getArithmetic_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleterm
entryRuleterm 
:
{ before(grammarAccess.getTermRule()); }
	 ruleterm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule term
ruleterm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTermAccess().getGroup()); }
(rule__Term__Group__0)
{ after(grammarAccess.getTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefactor
entryRulefactor 
:
{ before(grammarAccess.getFactorRule()); }
	 rulefactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule factor
rulefactor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFactorAccess().getGroup()); }
(rule__Factor__Group__0)
{ after(grammarAccess.getFactorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleprimary
entryRuleprimary 
:
{ before(grammarAccess.getPrimaryRule()); }
	 ruleprimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule primary
ruleprimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
(rule__Primary__Alternatives)
{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulename_Function
entryRulename_Function 
:
{ before(grammarAccess.getName_FunctionRule()); }
	 rulename_Function
{ after(grammarAccess.getName_FunctionRule()); } 
	 EOF 
;

// Rule name_Function
rulename_Function
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getName_FunctionAccess().getGroup()); }
(rule__Name_Function__Group__0)
{ after(grammarAccess.getName_FunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleinitial_ref
entryRuleinitial_ref 
:
{ before(grammarAccess.getInitial_refRule()); }
	 ruleinitial_ref
{ after(grammarAccess.getInitial_refRule()); } 
	 EOF 
;

// Rule initial_ref
ruleinitial_ref
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitial_refAccess().getGroup()); }
(rule__Initial_ref__Group__0)
{ after(grammarAccess.getInitial_refAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprDer
entryRuleExprDer 
:
{ before(grammarAccess.getExprDerRule()); }
	 ruleExprDer
{ after(grammarAccess.getExprDerRule()); } 
	 EOF 
;

// Rule ExprDer
ruleExprDer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprDerAccess().getGroup()); }
(rule__ExprDer__Group__0)
{ after(grammarAccess.getExprDerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunction_call_args
entryRulefunction_call_args 
:
{ before(grammarAccess.getFunction_call_argsRule()); }
	 rulefunction_call_args
{ after(grammarAccess.getFunction_call_argsRule()); } 
	 EOF 
;

// Rule function_call_args
rulefunction_call_args
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunction_call_argsAccess().getGroup()); }
(rule__Function_call_args__Group__0)
{ after(grammarAccess.getFunction_call_argsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpression_list
entryRuleexpression_list 
:
{ before(grammarAccess.getExpression_listRule()); }
	 ruleexpression_list
{ after(grammarAccess.getExpression_listRule()); } 
	 EOF 
;

// Rule expression_list
ruleexpression_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_listAccess().getGroup()); }
(rule__Expression_list__Group__0)
{ after(grammarAccess.getExpression_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulename
entryRulename 
:
{ before(grammarAccess.getNameRule()); }
	 rulename
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule name
rulename
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameAccess().getGroup()); }
(rule__Name__Group__0)
{ after(grammarAccess.getNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecomponent_reference
entryRulecomponent_reference 
:
{ before(grammarAccess.getComponent_referenceRule()); }
	 rulecomponent_reference
{ after(grammarAccess.getComponent_referenceRule()); } 
	 EOF 
;

// Rule component_reference
rulecomponent_reference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponent_referenceAccess().getGroup()); }
(rule__Component_reference__Group__0)
{ after(grammarAccess.getComponent_referenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleoutput_expression_list
entryRuleoutput_expression_list 
:
{ before(grammarAccess.getOutput_expression_listRule()); }
	 ruleoutput_expression_list
{ after(grammarAccess.getOutput_expression_listRule()); } 
	 EOF 
;

// Rule output_expression_list
ruleoutput_expression_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutput_expression_listAccess().getGroup()); }
(rule__Output_expression_list__Group__0)
{ after(grammarAccess.getOutput_expression_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulearray_subscripts
entryRulearray_subscripts 
:
{ before(grammarAccess.getArray_subscriptsRule()); }
	 rulearray_subscripts
{ after(grammarAccess.getArray_subscriptsRule()); } 
	 EOF 
;

// Rule array_subscripts
rulearray_subscripts
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArray_subscriptsAccess().getGroup()); }
(rule__Array_subscripts__Group__0)
{ after(grammarAccess.getArray_subscriptsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesubscript
entryRulesubscript 
:
{ before(grammarAccess.getSubscriptRule()); }
	 rulesubscript
{ after(grammarAccess.getSubscriptRule()); } 
	 EOF 
;

// Rule subscript
rulesubscript
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubscriptAccess().getAlternatives()); }
(rule__Subscript__Alternatives)
{ after(grammarAccess.getSubscriptAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunction_arguments
entryRulefunction_arguments 
:
{ before(grammarAccess.getFunction_argumentsRule()); }
	 rulefunction_arguments
{ after(grammarAccess.getFunction_argumentsRule()); } 
	 EOF 
;

// Rule function_arguments
rulefunction_arguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunction_argumentsAccess().getAlternatives()); }
(rule__Function_arguments__Alternatives)
{ after(grammarAccess.getFunction_argumentsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFun_Arguments_exp
entryRuleFun_Arguments_exp 
:
{ before(grammarAccess.getFun_Arguments_expRule()); }
	 ruleFun_Arguments_exp
{ after(grammarAccess.getFun_Arguments_expRule()); } 
	 EOF 
;

// Rule Fun_Arguments_exp
ruleFun_Arguments_exp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFun_Arguments_expAccess().getGroup()); }
(rule__Fun_Arguments_exp__Group__0)
{ after(grammarAccess.getFun_Arguments_expAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFun_Arguments_for
entryRuleFun_Arguments_for 
:
{ before(grammarAccess.getFun_Arguments_forRule()); }
	 ruleFun_Arguments_for
{ after(grammarAccess.getFun_Arguments_forRule()); } 
	 EOF 
;

// Rule Fun_Arguments_for
ruleFun_Arguments_for
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFun_Arguments_forAccess().getGroup()); }
(rule__Fun_Arguments_for__Group__0)
{ after(grammarAccess.getFun_Arguments_forAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenamed_arguments
entryRulenamed_arguments 
:
{ before(grammarAccess.getNamed_argumentsRule()); }
	 rulenamed_arguments
{ after(grammarAccess.getNamed_argumentsRule()); } 
	 EOF 
;

// Rule named_arguments
rulenamed_arguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamed_argumentsAccess().getGroup()); }
(rule__Named_arguments__Group__0)
{ after(grammarAccess.getNamed_argumentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenamed_argument
entryRulenamed_argument 
:
{ before(grammarAccess.getNamed_argumentRule()); }
	 rulenamed_argument
{ after(grammarAccess.getNamed_argumentRule()); } 
	 EOF 
;

// Rule named_argument
rulenamed_argument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamed_argumentAccess().getGroup()); }
(rule__Named_argument__Group__0)
{ after(grammarAccess.getNamed_argumentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefor_indices
entryRulefor_indices 
:
{ before(grammarAccess.getFor_indicesRule()); }
	 rulefor_indices
{ after(grammarAccess.getFor_indicesRule()); } 
	 EOF 
;

// Rule for_indices
rulefor_indices
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFor_indicesAccess().getGroup()); }
(rule__For_indices__Group__0)
{ after(grammarAccess.getFor_indicesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefor_index
entryRulefor_index 
:
{ before(grammarAccess.getFor_indexRule()); }
	 rulefor_index
{ after(grammarAccess.getFor_indexRule()); } 
	 EOF 
;

// Rule for_index
rulefor_index
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFor_indexAccess().getGroup()); }
(rule__For_index__Group__0)
{ after(grammarAccess.getFor_indexAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemul_op_mul
entryRulemul_op_mul 
:
{ before(grammarAccess.getMul_op_mulRule()); }
	 rulemul_op_mul
{ after(grammarAccess.getMul_op_mulRule()); } 
	 EOF 
;

// Rule mul_op_mul
rulemul_op_mul
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMul_op_mulAccess().getAsteriskKeyword()); }

	'*' 

{ after(grammarAccess.getMul_op_mulAccess().getAsteriskKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemul_op_div
entryRulemul_op_div 
:
{ before(grammarAccess.getMul_op_divRule()); }
	 rulemul_op_div
{ after(grammarAccess.getMul_op_divRule()); } 
	 EOF 
;

// Rule mul_op_div
rulemul_op_div
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMul_op_divAccess().getSolidusKeyword()); }

	'/' 

{ after(grammarAccess.getMul_op_divAccess().getSolidusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemul_op_dotmul
entryRulemul_op_dotmul 
:
{ before(grammarAccess.getMul_op_dotmulRule()); }
	 rulemul_op_dotmul
{ after(grammarAccess.getMul_op_dotmulRule()); } 
	 EOF 
;

// Rule mul_op_dotmul
rulemul_op_dotmul
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMul_op_dotmulAccess().getFullStopAsteriskKeyword()); }

	'.*' 

{ after(grammarAccess.getMul_op_dotmulAccess().getFullStopAsteriskKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemul_op_dotdiv
entryRulemul_op_dotdiv 
:
{ before(grammarAccess.getMul_op_dotdivRule()); }
	 rulemul_op_dotdiv
{ after(grammarAccess.getMul_op_dotdivRule()); } 
	 EOF 
;

// Rule mul_op_dotdiv
rulemul_op_dotdiv
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMul_op_dotdivAccess().getFullStopSolidusKeyword()); }

	'./' 

{ after(grammarAccess.getMul_op_dotdivAccess().getFullStopSolidusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleadd_op_plus
entryRuleadd_op_plus 
:
{ before(grammarAccess.getAdd_op_plusRule()); }
	 ruleadd_op_plus
{ after(grammarAccess.getAdd_op_plusRule()); } 
	 EOF 
;

// Rule add_op_plus
ruleadd_op_plus
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdd_op_plusAccess().getPlusSignKeyword()); }

	'+' 

{ after(grammarAccess.getAdd_op_plusAccess().getPlusSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleadd_op_minus
entryRuleadd_op_minus 
:
{ before(grammarAccess.getAdd_op_minusRule()); }
	 ruleadd_op_minus
{ after(grammarAccess.getAdd_op_minusRule()); } 
	 EOF 
;

// Rule add_op_minus
ruleadd_op_minus
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdd_op_minusAccess().getHyphenMinusKeyword()); }

	'-' 

{ after(grammarAccess.getAdd_op_minusAccess().getHyphenMinusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleadd_op_dotplus
entryRuleadd_op_dotplus 
:
{ before(grammarAccess.getAdd_op_dotplusRule()); }
	 ruleadd_op_dotplus
{ after(grammarAccess.getAdd_op_dotplusRule()); } 
	 EOF 
;

// Rule add_op_dotplus
ruleadd_op_dotplus
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdd_op_dotplusAccess().getFullStopPlusSignKeyword()); }

	'.+' 

{ after(grammarAccess.getAdd_op_dotplusAccess().getFullStopPlusSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleadd_op_dotminus
entryRuleadd_op_dotminus 
:
{ before(grammarAccess.getAdd_op_dotminusRule()); }
	 ruleadd_op_dotminus
{ after(grammarAccess.getAdd_op_dotminusRule()); } 
	 EOF 
;

// Rule add_op_dotminus
ruleadd_op_dotminus
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdd_op_dotminusAccess().getFullStopHyphenMinusKeyword()); }

	'.-' 

{ after(grammarAccess.getAdd_op_dotminusAccess().getFullStopHyphenMinusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_Less_then
entryRulerel_op_Less_then 
:
{ before(grammarAccess.getRel_op_Less_thenRule()); }
	 rulerel_op_Less_then
{ after(grammarAccess.getRel_op_Less_thenRule()); } 
	 EOF 
;

// Rule rel_op_Less_then
rulerel_op_Less_then
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_Less_thenAccess().getLessThanSignKeyword()); }

	'<' 

{ after(grammarAccess.getRel_op_Less_thenAccess().getLessThanSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_Less_equal
entryRulerel_op_Less_equal 
:
{ before(grammarAccess.getRel_op_Less_equalRule()); }
	 rulerel_op_Less_equal
{ after(grammarAccess.getRel_op_Less_equalRule()); } 
	 EOF 
;

// Rule rel_op_Less_equal
rulerel_op_Less_equal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_Less_equalAccess().getLessThanSignEqualsSignKeyword()); }

	'<=' 

{ after(grammarAccess.getRel_op_Less_equalAccess().getLessThanSignEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_greater_then
entryRulerel_op_greater_then 
:
{ before(grammarAccess.getRel_op_greater_thenRule()); }
	 rulerel_op_greater_then
{ after(grammarAccess.getRel_op_greater_thenRule()); } 
	 EOF 
;

// Rule rel_op_greater_then
rulerel_op_greater_then
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_greater_thenAccess().getGreaterThanSignKeyword()); }

	'>' 

{ after(grammarAccess.getRel_op_greater_thenAccess().getGreaterThanSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_greater_equal
entryRulerel_op_greater_equal 
:
{ before(grammarAccess.getRel_op_greater_equalRule()); }
	 rulerel_op_greater_equal
{ after(grammarAccess.getRel_op_greater_equalRule()); } 
	 EOF 
;

// Rule rel_op_greater_equal
rulerel_op_greater_equal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_greater_equalAccess().getGreaterThanSignEqualsSignKeyword()); }

	'>=' 

{ after(grammarAccess.getRel_op_greater_equalAccess().getGreaterThanSignEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_assignment
entryRulerel_op_assignment 
:
{ before(grammarAccess.getRel_op_assignmentRule()); }
	 rulerel_op_assignment
{ after(grammarAccess.getRel_op_assignmentRule()); } 
	 EOF 
;

// Rule rel_op_assignment
rulerel_op_assignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_assignmentAccess().getEqualsSignEqualsSignKeyword()); }

	'==' 

{ after(grammarAccess.getRel_op_assignmentAccess().getEqualsSignEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerel_op_Oper
entryRulerel_op_Oper 
:
{ before(grammarAccess.getRel_op_OperRule()); }
	 rulerel_op_Oper
{ after(grammarAccess.getRel_op_OperRule()); } 
	 EOF 
;

// Rule rel_op_Oper
rulerel_op_Oper
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRel_op_OperAccess().getLessThanSignGreaterThanSignKeyword()); }

	'<>' 

{ after(grammarAccess.getRel_op_OperAccess().getLessThanSignGreaterThanSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecomment
entryRulecomment 
:
{ before(grammarAccess.getCommentRule()); }
	 rulecomment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule comment
rulecomment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAccess().getString_commentParserRuleCall()); }
	rulestring_comment
{ after(grammarAccess.getCommentAccess().getString_commentParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestring_comment
entryRulestring_comment 
:
{ before(grammarAccess.getString_commentRule()); }
	 rulestring_comment
{ after(grammarAccess.getString_commentRule()); } 
	 EOF 
;

// Rule string_comment
rulestring_comment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getString_commentAccess().getGroup()); }
(rule__String_comment__Group__0)?
{ after(grammarAccess.getString_commentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Modification__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getGroup_0()); }
(rule__Modification__Group_0__0)
{ after(grammarAccess.getModificationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getModificationAccess().getGroup_1()); }
(rule__Modification__Group_1__0)
{ after(grammarAccess.getModificationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprAssignment_0()); }
(rule__Expression__ExprAssignment_0)
{ after(grammarAccess.getExpressionAccess().getExprAssignment_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getConditional_exprParserRuleCall_1()); }
	ruleconditional_expr
{ after(grammarAccess.getExpressionAccess().getConditional_exprParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__OpAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getOpRel_op_Less_thenParserRuleCall_1_0_0_0()); }
	rulerel_op_Less_then
{ after(grammarAccess.getRelationAccess().getOpRel_op_Less_thenParserRuleCall_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getOpRel_op_Less_equalParserRuleCall_1_0_0_1()); }
	rulerel_op_Less_equal
{ after(grammarAccess.getRelationAccess().getOpRel_op_Less_equalParserRuleCall_1_0_0_1()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getOpRel_op_greater_thenParserRuleCall_1_0_0_2()); }
	rulerel_op_greater_then
{ after(grammarAccess.getRelationAccess().getOpRel_op_greater_thenParserRuleCall_1_0_0_2()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getOpRel_op_greater_equalParserRuleCall_1_0_0_3()); }
	rulerel_op_greater_equal
{ after(grammarAccess.getRelationAccess().getOpRel_op_greater_equalParserRuleCall_1_0_0_3()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getOpRel_op_assignmentParserRuleCall_1_0_0_4()); }
	rulerel_op_assignment
{ after(grammarAccess.getRelationAccess().getOpRel_op_assignmentParserRuleCall_1_0_0_4()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getOpRel_op_OperParserRuleCall_1_0_0_5()); }
	rulerel_op_Oper
{ after(grammarAccess.getRelationAccess().getOpRel_op_OperParserRuleCall_1_0_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__OprAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_plusParserRuleCall_0_0_0()); }
	ruleadd_op_plus
{ after(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_plusParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_minusParserRuleCall_0_0_1()); }
	ruleadd_op_minus
{ after(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_minusParserRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_dotplusParserRuleCall_0_0_2()); }
	ruleadd_op_dotplus
{ after(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_dotplusParserRuleCall_0_0_2()); }
)

    |(
{ before(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_dotminusParserRuleCall_0_0_3()); }
	ruleadd_op_dotminus
{ after(grammarAccess.getArithmetic_expressionAccess().getOprAdd_op_dotminusParserRuleCall_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Oper1Alternatives_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_plusParserRuleCall_2_0_0_0()); }
	ruleadd_op_plus
{ after(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_plusParserRuleCall_2_0_0_0()); }
)

    |(
{ before(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_minusParserRuleCall_2_0_0_1()); }
	ruleadd_op_minus
{ after(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_minusParserRuleCall_2_0_0_1()); }
)

    |(
{ before(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_dotplusParserRuleCall_2_0_0_2()); }
	ruleadd_op_dotplus
{ after(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_dotplusParserRuleCall_2_0_0_2()); }
)

    |(
{ before(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_dotminusParserRuleCall_2_0_0_3()); }
	ruleadd_op_dotminus
{ after(grammarAccess.getArithmetic_expressionAccess().getOper1Add_op_dotminusParserRuleCall_2_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__OpAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getOpMul_op_mulParserRuleCall_1_0_0_0()); }
	rulemul_op_mul
{ after(grammarAccess.getTermAccess().getOpMul_op_mulParserRuleCall_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getTermAccess().getOpMul_op_divParserRuleCall_1_0_0_1()); }
	rulemul_op_div
{ after(grammarAccess.getTermAccess().getOpMul_op_divParserRuleCall_1_0_0_1()); }
)

    |(
{ before(grammarAccess.getTermAccess().getOpMul_op_dotmulParserRuleCall_1_0_0_2()); }
	rulemul_op_dotmul
{ after(grammarAccess.getTermAccess().getOpMul_op_dotmulParserRuleCall_1_0_0_2()); }
)

    |(
{ before(grammarAccess.getTermAccess().getOpMul_op_dotdivParserRuleCall_1_0_0_3()); }
	rulemul_op_dotdiv
{ after(grammarAccess.getTermAccess().getOpMul_op_dotdivParserRuleCall_1_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getCircumflexAccentKeyword_1_0_0()); }

	'^' 

{ after(grammarAccess.getFactorAccess().getCircumflexAccentKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getFactorAccess().getFullStopCircumflexAccentKeyword_1_0_1()); }

	'.^' 

{ after(grammarAccess.getFactorAccess().getFullStopCircumflexAccentKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getNumAssignment_0()); }
(rule__Primary__NumAssignment_0)
{ after(grammarAccess.getPrimaryAccess().getNumAssignment_0()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getIntAssignment_1()); }
(rule__Primary__IntAssignment_1)
{ after(grammarAccess.getPrimaryAccess().getIntAssignment_1()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getStrAssignment_2()); }
(rule__Primary__StrAssignment_2)
{ after(grammarAccess.getPrimaryAccess().getStrAssignment_2()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getBoolAssignment_3()); }
(rule__Primary__BoolAssignment_3)
{ after(grammarAccess.getPrimaryAccess().getBoolAssignment_3()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getName_FunctionParserRuleCall_4()); }
	rulename_Function
{ after(grammarAccess.getPrimaryAccess().getName_FunctionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getInitial_refParserRuleCall_5()); }
	ruleinitial_ref
{ after(grammarAccess.getPrimaryAccess().getInitial_refParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getExprDerParserRuleCall_6()); }
	ruleExprDer
{ after(grammarAccess.getPrimaryAccess().getExprDerParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getComponent_referenceAssignment_7()); }
(rule__Primary__Component_referenceAssignment_7)
{ after(grammarAccess.getPrimaryAccess().getComponent_referenceAssignment_7()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getGroup_8()); }
(rule__Primary__Group_8__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getGroup_9()); }
(rule__Primary__Group_9__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getGroup_10()); }
(rule__Primary__Group_10__0)
{ after(grammarAccess.getPrimaryAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getPrimaryAccess().getEndAssignment_11()); }
(rule__Primary__EndAssignment_11)
{ after(grammarAccess.getPrimaryAccess().getEndAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subscript__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubscriptAccess().getGroup_0()); }
(rule__Subscript__Group_0__0)
{ after(grammarAccess.getSubscriptAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSubscriptAccess().getExprAssignment_1()); }
(rule__Subscript__ExprAssignment_1)
{ after(grammarAccess.getSubscriptAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getGroup_0()); }
(rule__Function_arguments__Group_0__0)
{ after(grammarAccess.getFunction_argumentsAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFunction_argumentsAccess().getName_argAssignment_1()); }
(rule__Function_arguments__Name_argAssignment_1)
{ after(grammarAccess.getFunction_argumentsAccess().getName_argAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Alternatives_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ExprAssignment_0_2_0()); }
(rule__Function_arguments__Fun_Arg_ExprAssignment_0_2_0)
{ after(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ExprAssignment_0_2_0()); }
)

    |(
{ before(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ForAssignment_0_2_1()); }
(rule__Function_arguments__Fun_Arg_ForAssignment_0_2_1)
{ after(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ForAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Component_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_declaration__Group__0__Impl
	rule__Component_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_declarationAccess().getModAssignment_0()); }
(rule__Component_declaration__ModAssignment_0)
{ after(grammarAccess.getComponent_declarationAccess().getModAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_declaration__Group__1__Impl
	rule__Component_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_declarationAccess().getConditional_AttAssignment_1()); }
(rule__Component_declaration__Conditional_AttAssignment_1)?
{ after(grammarAccess.getComponent_declarationAccess().getConditional_AttAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_declarationAccess().getCommentParserRuleCall_2()); }
	rulecomment
{ after(grammarAccess.getComponent_declarationAccess().getCommentParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Modification__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modification__Group_0__0__Impl
	rule__Modification__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getEqualsSignKeyword_0_0()); }

	'=' 

{ after(grammarAccess.getModificationAccess().getEqualsSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Modification__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modification__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getExprAssignment_0_1()); }
(rule__Modification__ExprAssignment_0_1)
{ after(grammarAccess.getModificationAccess().getExprAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Modification__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modification__Group_1__0__Impl
	rule__Modification__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getColonEqualsSignKeyword_1_0()); }

	':=' 

{ after(grammarAccess.getModificationAccess().getColonEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Modification__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modification__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getExprAssignment_1_1()); }
(rule__Modification__ExprAssignment_1_1)
{ after(grammarAccess.getModificationAccess().getExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conditional_attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_attribute__Group__0__Impl
	rule__Conditional_attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_attributeAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getConditional_attributeAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_attribute__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_attributeAccess().getExprAssignment_1()); }
(rule__Conditional_attribute__ExprAssignment_1)
{ after(grammarAccess.getConditional_attributeAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Simple_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group__0__Impl
	rule__Simple_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getLog_ExpAssignment_0()); }
(rule__Simple_expression__Log_ExpAssignment_0)
{ after(grammarAccess.getSimple_expressionAccess().getLog_ExpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getGroup_1()); }
(rule__Simple_expression__Group_1__0)?
{ after(grammarAccess.getSimple_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Simple_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group_1__0__Impl
	rule__Simple_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getSimple_expressionAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group_1__1__Impl
	rule__Simple_expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getS_Logical_expressionAssignment_1_1()); }
(rule__Simple_expression__S_Logical_expressionAssignment_1_1)
{ after(grammarAccess.getSimple_expressionAccess().getS_Logical_expressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getGroup_1_2()); }
(rule__Simple_expression__Group_1_2__0)?
{ after(grammarAccess.getSimple_expressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Simple_expression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group_1_2__0__Impl
	rule__Simple_expression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getColonKeyword_1_2_0()); }

	':' 

{ after(grammarAccess.getSimple_expressionAccess().getColonKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getL_Logical_expressionAssignment_1_2_1()); }
(rule__Simple_expression__L_Logical_expressionAssignment_1_2_1)
{ after(grammarAccess.getSimple_expressionAccess().getL_Logical_expressionAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conditional_expr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group__0__Impl
	rule__Conditional_expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getConditional_exprAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group__1__Impl
	rule__Conditional_expr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getIfexprAssignment_1()); }
(rule__Conditional_expr__IfexprAssignment_1)
{ after(grammarAccess.getConditional_exprAccess().getIfexprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group__2__Impl
	rule__Conditional_expr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getConditional_exprAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group__3__Impl
	rule__Conditional_expr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getThenexprAssignment_3()); }
(rule__Conditional_expr__ThenexprAssignment_3)
{ after(grammarAccess.getConditional_exprAccess().getThenexprAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group__4__Impl
	rule__Conditional_expr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getGroup_4()); }
(rule__Conditional_expr__Group_4__0)*
{ after(grammarAccess.getConditional_exprAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getGroup_5()); }
(rule__Conditional_expr__Group_5__0)
{ after(grammarAccess.getConditional_exprAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Conditional_expr__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group_4__0__Impl
	rule__Conditional_expr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getElseifKeyword_4_0()); }

	'elseif' 

{ after(grammarAccess.getConditional_exprAccess().getElseifKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group_4__1__Impl
	rule__Conditional_expr__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getElseifexprAssignment_4_1()); }
(rule__Conditional_expr__ElseifexprAssignment_4_1)
{ after(grammarAccess.getConditional_exprAccess().getElseifexprAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group_4__2__Impl
	rule__Conditional_expr__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getThenKeyword_4_2()); }

	'then' 

{ after(grammarAccess.getConditional_exprAccess().getThenKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getTrueexprAssignment_4_3()); }
(rule__Conditional_expr__TrueexprAssignment_4_3)
{ after(grammarAccess.getConditional_exprAccess().getTrueexprAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Conditional_expr__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group_5__0__Impl
	rule__Conditional_expr__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getElseKeyword_5_0()); }

	'else' 

{ after(grammarAccess.getConditional_exprAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional_expr__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional_expr__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getFalseexprAssignment_5_1()); }
(rule__Conditional_expr__FalseexprAssignment_5_1)
{ after(grammarAccess.getConditional_exprAccess().getFalseexprAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_expression__Group__0__Impl
	rule__Logical_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_expressionAccess().getLogical_termParserRuleCall_0()); }
	rulelogical_term
{ after(grammarAccess.getLogical_expressionAccess().getLogical_termParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_expressionAccess().getGroup_1()); }
(rule__Logical_expression__Group_1__0)*
{ after(grammarAccess.getLogical_expressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical_expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_expression__Group_1__0__Impl
	rule__Logical_expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_expressionAccess().getOrKeyword_1_0()); }

	'or' 

{ after(grammarAccess.getLogical_expressionAccess().getOrKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_expressionAccess().getLogical_termAssignment_1_1()); }
(rule__Logical_expression__Logical_termAssignment_1_1)
{ after(grammarAccess.getLogical_expressionAccess().getLogical_termAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical_term__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_term__Group__0__Impl
	rule__Logical_term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_term__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_termAccess().getLogical_factorParserRuleCall_0()); }
	rulelogical_factor
{ after(grammarAccess.getLogical_termAccess().getLogical_factorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_term__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_term__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_termAccess().getGroup_1()); }
(rule__Logical_term__Group_1__0)*
{ after(grammarAccess.getLogical_termAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical_term__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_term__Group_1__0__Impl
	rule__Logical_term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_term__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_termAccess().getAndKeyword_1_0()); }

	'and' 

{ after(grammarAccess.getLogical_termAccess().getAndKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_term__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_term__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_term__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_termAccess().getLogical_factorAssignment_1_1()); }
(rule__Logical_term__Logical_factorAssignment_1_1)
{ after(grammarAccess.getLogical_termAccess().getLogical_factorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical_factor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_factor__Group__0__Impl
	rule__Logical_factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_factor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_factorAccess().getNotKeyword_0()); }
(
	'not' 
)?
{ after(grammarAccess.getLogical_factorAccess().getNotKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_factor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_factor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_factorAccess().getRelationAssignment_1()); }
(rule__Logical_factor__RelationAssignment_1)
{ after(grammarAccess.getLogical_factorAccess().getRelationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getArithmetic_expressionParserRuleCall_0()); }
	rulearithmetic_expression
{ after(grammarAccess.getRelationAccess().getArithmetic_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGroup_1()); }
(rule__Relation__Group_1__0)?
{ after(grammarAccess.getRelationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1__0__Impl
	rule__Relation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getOpAssignment_1_0()); }
(rule__Relation__OpAssignment_1_0)
{ after(grammarAccess.getRelationAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getArithmetic_expressionAssignment_1_1()); }
(rule__Relation__Arithmetic_expressionAssignment_1_1)
{ after(grammarAccess.getRelationAccess().getArithmetic_expressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arithmetic_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithmetic_expression__Group__0__Impl
	rule__Arithmetic_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getOprAssignment_0()); }
(rule__Arithmetic_expression__OprAssignment_0)?
{ after(grammarAccess.getArithmetic_expressionAccess().getOprAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithmetic_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithmetic_expression__Group__1__Impl
	rule__Arithmetic_expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getTermAssignment_1()); }
(rule__Arithmetic_expression__TermAssignment_1)
{ after(grammarAccess.getArithmetic_expressionAccess().getTermAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithmetic_expression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithmetic_expression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getGroup_2()); }
(rule__Arithmetic_expression__Group_2__0)*
{ after(grammarAccess.getArithmetic_expressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Arithmetic_expression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithmetic_expression__Group_2__0__Impl
	rule__Arithmetic_expression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getOper1Assignment_2_0()); }
(rule__Arithmetic_expression__Oper1Assignment_2_0)
{ after(grammarAccess.getArithmetic_expressionAccess().getOper1Assignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithmetic_expression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithmetic_expression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getTerm1Assignment_2_1()); }
(rule__Arithmetic_expression__Term1Assignment_2_1)
{ after(grammarAccess.getArithmetic_expressionAccess().getTerm1Assignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Term__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
	rulefactor
{ after(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getGroup_1()); }
(rule__Term__Group_1__0)*
{ after(grammarAccess.getTermAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Term__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getOpAssignment_1_0()); }
(rule__Term__OpAssignment_1_0)
{ after(grammarAccess.getTermAccess().getOpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getFactorAssignment_1_1()); }
(rule__Term__FactorAssignment_1_1)
{ after(grammarAccess.getTermAccess().getFactorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Factor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group__0__Impl
	rule__Factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0()); }
	ruleprimary
{ after(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getGroup_1()); }
(rule__Factor__Group_1__0)?
{ after(grammarAccess.getFactorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Factor__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_1__0__Impl
	rule__Factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getAlternatives_1_0()); }
(rule__Factor__Alternatives_1_0)
{ after(grammarAccess.getFactorAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getPrimaryAssignment_1_1()); }
(rule__Factor__PrimaryAssignment_1_1)
{ after(grammarAccess.getFactorAccess().getPrimaryAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primary__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_8__0__Impl
	rule__Primary__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_8_0()); }

	'(' 

{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_8__1__Impl
	rule__Primary__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getOutput_expr_listAssignment_8_1()); }
(rule__Primary__Output_expr_listAssignment_8_1)
{ after(grammarAccess.getPrimaryAccess().getOutput_expr_listAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_8_2()); }

	')' 

{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Primary__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_9__0__Impl
	rule__Primary__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_9_0()); }

	'[' 

{ after(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_9__1__Impl
	rule__Primary__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getExpre_listAssignment_9_1()); }
(rule__Primary__Expre_listAssignment_9_1)
{ after(grammarAccess.getPrimaryAccess().getExpre_listAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_9__2__Impl
	rule__Primary__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getGroup_9_2()); }
(rule__Primary__Group_9_2__0)*
{ after(grammarAccess.getPrimaryAccess().getGroup_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_9__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_9__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_9_3()); }

	']' 

{ after(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_9_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Primary__Group_9_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_9_2__0__Impl
	rule__Primary__Group_9_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getSemicolonKeyword_9_2_0()); }

	';' 

{ after(grammarAccess.getPrimaryAccess().getSemicolonKeyword_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_9_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_9_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_9_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getExpression_listAssignment_9_2_1()); }
(rule__Primary__Expression_listAssignment_9_2_1)
{ after(grammarAccess.getPrimaryAccess().getExpression_listAssignment_9_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Primary__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_10__0__Impl
	rule__Primary__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_10_0()); }

	'{' 

{ after(grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_10__1__Impl
	rule__Primary__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getF_argumentsAssignment_10_1()); }
(rule__Primary__F_argumentsAssignment_10_1)
{ after(grammarAccess.getPrimaryAccess().getF_argumentsAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Primary__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_10_2()); }

	'}' 

{ after(grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Name_Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name_Function__Group__0__Impl
	rule__Name_Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name_Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getName_FunctionAccess().getNameParserRuleCall_0()); }
	rulename
{ after(grammarAccess.getName_FunctionAccess().getNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Name_Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name_Function__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name_Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getName_FunctionAccess().getFunction_call_argsAssignment_1()); }
(rule__Name_Function__Function_call_argsAssignment_1)
{ after(grammarAccess.getName_FunctionAccess().getFunction_call_argsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Initial_ref__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initial_ref__Group__0__Impl
	rule__Initial_ref__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial_ref__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitial_refAccess().getInitialKeyword_0()); }

	'initial' 

{ after(grammarAccess.getInitial_refAccess().getInitialKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Initial_ref__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initial_ref__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial_ref__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitial_refAccess().getFunction_call_argsParserRuleCall_1()); }
	rulefunction_call_args
{ after(grammarAccess.getInitial_refAccess().getFunction_call_argsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprDer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprDer__Group__0__Impl
	rule__ExprDer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprDer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprDerAccess().getDerKeyword_0()); }

	'der' 

{ after(grammarAccess.getExprDerAccess().getDerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprDer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprDer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprDer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprDerAccess().getFunctionArgsAssignment_1()); }
(rule__ExprDer__FunctionArgsAssignment_1)
{ after(grammarAccess.getExprDerAccess().getFunctionArgsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function_call_args__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_call_args__Group__0__Impl
	rule__Function_call_args__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_call_args__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_call_argsAccess().getFunction_call_argsAction_0()); }
(

)
{ after(grammarAccess.getFunction_call_argsAccess().getFunction_call_argsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_call_args__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_call_args__Group__1__Impl
	rule__Function_call_args__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_call_args__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_call_argsAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunction_call_argsAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_call_args__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_call_args__Group__2__Impl
	rule__Function_call_args__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_call_args__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_call_argsAccess().getF_argAssignment_2()); }
(rule__Function_call_args__F_argAssignment_2)?
{ after(grammarAccess.getFunction_call_argsAccess().getF_argAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_call_args__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_call_args__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_call_args__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_call_argsAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFunction_call_argsAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group__0__Impl
	rule__Expression_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getExprAssignment_0()); }
(rule__Expression_list__ExprAssignment_0)
{ after(grammarAccess.getExpression_listAccess().getExprAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getGroup_1()); }
(rule__Expression_list__Group_1__0)*
{ after(grammarAccess.getExpression_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group_1__0__Impl
	rule__Expression_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getExpression_listAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getExpreAssignment_1_1()); }
(rule__Expression_list__ExpreAssignment_1_1)
{ after(grammarAccess.getExpression_listAccess().getExpreAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Name__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group__0__Impl
	rule__Name__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getFullStopKeyword_0()); }
(
	'.' 
)?
{ after(grammarAccess.getNameAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group__1__Impl
	rule__Name__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getName_IDAssignment_1()); }
(rule__Name__Name_IDAssignment_1)
{ after(grammarAccess.getNameAccess().getName_IDAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getGroup_2()); }
(rule__Name__Group_2__0)*
{ after(grammarAccess.getNameAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Name__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group_2__0__Impl
	rule__Name__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getFullStopKeyword_2_0()); }

	'.' 

{ after(grammarAccess.getNameAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getNam_IDAssignment_2_1()); }
(rule__Name__Nam_IDAssignment_2_1)
{ after(grammarAccess.getNameAccess().getNam_IDAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Component_reference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_reference__Group__0__Impl
	rule__Component_reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getFullStopKeyword_0()); }
(
	'.' 
)?
{ after(grammarAccess.getComponent_referenceAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_reference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_reference__Group__1__Impl
	rule__Component_reference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getRefAssignment_1()); }
(rule__Component_reference__RefAssignment_1)
{ after(grammarAccess.getComponent_referenceAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_reference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_reference__Group__2__Impl
	rule__Component_reference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getSubscripts1Assignment_2()); }
(rule__Component_reference__Subscripts1Assignment_2)?
{ after(grammarAccess.getComponent_referenceAccess().getSubscripts1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_reference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_reference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getGroup_3()); }
(rule__Component_reference__Group_3__0)*
{ after(grammarAccess.getComponent_referenceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Component_reference__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_reference__Group_3__0__Impl
	rule__Component_reference__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getFullStopKeyword_3_0()); }

	'.' 

{ after(grammarAccess.getComponent_referenceAccess().getFullStopKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_reference__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_reference__Group_3__1__Impl
	rule__Component_reference__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getRef1Assignment_3_1()); }
(rule__Component_reference__Ref1Assignment_3_1)
{ after(grammarAccess.getComponent_referenceAccess().getRef1Assignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_reference__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_reference__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getSubscriptsAssignment_3_2()); }
(rule__Component_reference__SubscriptsAssignment_3_2)?
{ after(grammarAccess.getComponent_referenceAccess().getSubscriptsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Output_expression_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output_expression_list__Group__0__Impl
	rule__Output_expression_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output_expression_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutput_expression_listAccess().getOutput_expression_listAction_0()); }
(

)
{ after(grammarAccess.getOutput_expression_listAccess().getOutput_expression_listAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output_expression_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output_expression_list__Group__1__Impl
	rule__Output_expression_list__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output_expression_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutput_expression_listAccess().getEprAssignment_1()); }
(rule__Output_expression_list__EprAssignment_1)?
{ after(grammarAccess.getOutput_expression_listAccess().getEprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output_expression_list__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output_expression_list__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output_expression_list__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutput_expression_listAccess().getGroup_2()); }
(rule__Output_expression_list__Group_2__0)*
{ after(grammarAccess.getOutput_expression_listAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Output_expression_list__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output_expression_list__Group_2__0__Impl
	rule__Output_expression_list__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output_expression_list__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutput_expression_listAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getOutput_expression_listAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output_expression_list__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output_expression_list__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output_expression_list__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutput_expression_listAccess().getExprAssignment_2_1()); }
(rule__Output_expression_list__ExprAssignment_2_1)?
{ after(grammarAccess.getOutput_expression_listAccess().getExprAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Array_subscripts__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_subscripts__Group__0__Impl
	rule__Array_subscripts__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getArray_subscriptsAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_subscripts__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_subscripts__Group__1__Impl
	rule__Array_subscripts__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getSubAssignment_1()); }
(rule__Array_subscripts__SubAssignment_1)
{ after(grammarAccess.getArray_subscriptsAccess().getSubAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_subscripts__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_subscripts__Group__2__Impl
	rule__Array_subscripts__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getGroup_2()); }
(rule__Array_subscripts__Group_2__0)*
{ after(grammarAccess.getArray_subscriptsAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_subscripts__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_subscripts__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getArray_subscriptsAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Array_subscripts__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_subscripts__Group_2__0__Impl
	rule__Array_subscripts__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getArray_subscriptsAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_subscripts__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_subscripts__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getSubscriptAssignment_2_1()); }
(rule__Array_subscripts__SubscriptAssignment_2_1)
{ after(grammarAccess.getArray_subscriptsAccess().getSubscriptAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Subscript__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subscript__Group_0__0__Impl
	rule__Subscript__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subscript__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubscriptAccess().getSubscriptAction_0_0()); }
(

)
{ after(grammarAccess.getSubscriptAccess().getSubscriptAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subscript__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subscript__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subscript__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubscriptAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getSubscriptAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function_arguments__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_arguments__Group_0__0__Impl
	rule__Function_arguments__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getFunction_argumentsAction_0_0()); }
(

)
{ after(grammarAccess.getFunction_argumentsAccess().getFunction_argumentsAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_arguments__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_arguments__Group_0__1__Impl
	rule__Function_arguments__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getArgExpAssignment_0_1()); }
(rule__Function_arguments__ArgExpAssignment_0_1)
{ after(grammarAccess.getFunction_argumentsAccess().getArgExpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_arguments__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_arguments__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getAlternatives_0_2()); }
(rule__Function_arguments__Alternatives_0_2)?
{ after(grammarAccess.getFunction_argumentsAccess().getAlternatives_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Fun_Arguments_exp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fun_Arguments_exp__Group__0__Impl
	rule__Fun_Arguments_exp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fun_Arguments_exp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFun_Arguments_expAccess().getCommaKeyword_0()); }

	',' 

{ after(grammarAccess.getFun_Arguments_expAccess().getCommaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fun_Arguments_exp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fun_Arguments_exp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fun_Arguments_exp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFun_Arguments_expAccess().getArgsAssignment_1()); }
(rule__Fun_Arguments_exp__ArgsAssignment_1)
{ after(grammarAccess.getFun_Arguments_expAccess().getArgsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Fun_Arguments_for__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fun_Arguments_for__Group__0__Impl
	rule__Fun_Arguments_for__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fun_Arguments_for__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFun_Arguments_forAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getFun_Arguments_forAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fun_Arguments_for__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fun_Arguments_for__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fun_Arguments_for__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFun_Arguments_forAccess().getFor_indicesAssignment_1()); }
(rule__Fun_Arguments_for__For_indicesAssignment_1)
{ after(grammarAccess.getFun_Arguments_forAccess().getFor_indicesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Named_arguments__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Named_arguments__Group__0__Impl
	rule__Named_arguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Named_arguments__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentsAccess().getNamed_argumentParserRuleCall_0()); }
	rulenamed_argument
{ after(grammarAccess.getNamed_argumentsAccess().getNamed_argumentParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Named_arguments__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Named_arguments__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Named_arguments__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentsAccess().getGroup_1()); }
(rule__Named_arguments__Group_1__0)?
{ after(grammarAccess.getNamed_argumentsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Named_arguments__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Named_arguments__Group_1__0__Impl
	rule__Named_arguments__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Named_arguments__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getNamed_argumentsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Named_arguments__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Named_arguments__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Named_arguments__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentsAccess().getNamed_argumentsAssignment_1_1()); }
(rule__Named_arguments__Named_argumentsAssignment_1_1)
{ after(grammarAccess.getNamed_argumentsAccess().getNamed_argumentsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Named_argument__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Named_argument__Group__0__Impl
	rule__Named_argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Named_argument__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentAccess().getArgAssignment_0()); }
(rule__Named_argument__ArgAssignment_0)
{ after(grammarAccess.getNamed_argumentAccess().getArgAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Named_argument__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Named_argument__Group__1__Impl
	rule__Named_argument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Named_argument__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getNamed_argumentAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Named_argument__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Named_argument__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Named_argument__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentAccess().getExprAssignment_2()); }
(rule__Named_argument__ExprAssignment_2)
{ after(grammarAccess.getNamed_argumentAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__For_indices__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_indices__Group__0__Impl
	rule__For_indices__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_indices__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indicesAccess().getFor_indexParserRuleCall_0()); }
	rulefor_index
{ after(grammarAccess.getFor_indicesAccess().getFor_indexParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_indices__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_indices__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_indices__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indicesAccess().getGroup_1()); }
(rule__For_indices__Group_1__0)*
{ after(grammarAccess.getFor_indicesAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__For_indices__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_indices__Group_1__0__Impl
	rule__For_indices__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_indices__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indicesAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getFor_indicesAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_indices__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_indices__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_indices__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indicesAccess().getFor_indexAssignment_1_1()); }
(rule__For_indices__For_indexAssignment_1_1)
{ after(grammarAccess.getFor_indicesAccess().getFor_indexAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__For_index__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_index__Group__0__Impl
	rule__For_index__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_index__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indexAccess().getIndexAssignment_0()); }
(rule__For_index__IndexAssignment_0)
{ after(grammarAccess.getFor_indexAccess().getIndexAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_index__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_index__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_index__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indexAccess().getGroup_1()); }
(rule__For_index__Group_1__0)?
{ after(grammarAccess.getFor_indexAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__For_index__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_index__Group_1__0__Impl
	rule__For_index__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_index__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indexAccess().getInKeyword_1_0()); }

	'in' 

{ after(grammarAccess.getFor_indexAccess().getInKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_index__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_index__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_index__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indexAccess().getExprAssignment_1_1()); }
(rule__For_index__ExprAssignment_1_1)
{ after(grammarAccess.getFor_indexAccess().getExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__String_comment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String_comment__Group__0__Impl
	rule__String_comment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__String_comment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getString_commentAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getString_commentAccess().getSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__String_comment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String_comment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__String_comment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getString_commentAccess().getGroup_1()); }
(rule__String_comment__Group_1__0)*
{ after(grammarAccess.getString_commentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__String_comment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String_comment__Group_1__0__Impl
	rule__String_comment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__String_comment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getString_commentAccess().getPlusSignKeyword_1_0()); }

	'+' 

{ after(grammarAccess.getString_commentAccess().getPlusSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__String_comment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__String_comment__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__String_comment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getString_commentAccess().getSTRINGTerminalRuleCall_1_1()); }
	RULE_STRING
{ after(grammarAccess.getString_commentAccess().getSTRINGTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Component_declaration__ModAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_declarationAccess().getModModificationParserRuleCall_0_0()); }
	rulemodification{ after(grammarAccess.getComponent_declarationAccess().getModModificationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component_declaration__Conditional_AttAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_declarationAccess().getConditional_AttConditional_attributeParserRuleCall_1_0()); }
	ruleconditional_attribute{ after(grammarAccess.getComponent_declarationAccess().getConditional_AttConditional_attributeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__ExprAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_0_1_0()); }
	ruleexpression{ after(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modification__ExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_1_1_0()); }
	ruleexpression{ after(grammarAccess.getModificationAccess().getExprExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_attribute__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_attributeAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleexpression{ after(grammarAccess.getConditional_attributeAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprSimple_expressionParserRuleCall_0_0()); }
	rulesimple_expression{ after(grammarAccess.getExpressionAccess().getExprSimple_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Log_ExpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getLog_ExpLogical_expressionParserRuleCall_0_0()); }
	rulelogical_expression{ after(grammarAccess.getSimple_expressionAccess().getLog_ExpLogical_expressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__S_Logical_expressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getS_Logical_expressionLogical_expressionParserRuleCall_1_1_0()); }
	rulelogical_expression{ after(grammarAccess.getSimple_expressionAccess().getS_Logical_expressionLogical_expressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__L_Logical_expressionAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getL_Logical_expressionLogical_expressionParserRuleCall_1_2_1_0()); }
	rulelogical_expression{ after(grammarAccess.getSimple_expressionAccess().getL_Logical_expressionLogical_expressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__IfexprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getIfexprExpressionParserRuleCall_1_0()); }
	ruleexpression{ after(grammarAccess.getConditional_exprAccess().getIfexprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__ThenexprAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getThenexprExpressionParserRuleCall_3_0()); }
	ruleexpression{ after(grammarAccess.getConditional_exprAccess().getThenexprExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__ElseifexprAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getElseifexprExpressionParserRuleCall_4_1_0()); }
	ruleexpression{ after(grammarAccess.getConditional_exprAccess().getElseifexprExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__TrueexprAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getTrueexprExpressionParserRuleCall_4_3_0()); }
	ruleexpression{ after(grammarAccess.getConditional_exprAccess().getTrueexprExpressionParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_expr__FalseexprAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_exprAccess().getFalseexprExpressionParserRuleCall_5_1_0()); }
	ruleexpression{ after(grammarAccess.getConditional_exprAccess().getFalseexprExpressionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_expression__Logical_termAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_expressionAccess().getLogical_termLogical_termParserRuleCall_1_1_0()); }
	rulelogical_term{ after(grammarAccess.getLogical_expressionAccess().getLogical_termLogical_termParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_term__Logical_factorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_termAccess().getLogical_factorLogical_factorParserRuleCall_1_1_0()); }
	rulelogical_factor{ after(grammarAccess.getLogical_termAccess().getLogical_factorLogical_factorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_factor__RelationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_factorAccess().getRelationRelationParserRuleCall_1_0()); }
	rulerelation{ after(grammarAccess.getLogical_factorAccess().getRelationRelationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getOpAlternatives_1_0_0()); }
(rule__Relation__OpAlternatives_1_0_0)
{ after(grammarAccess.getRelationAccess().getOpAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Arithmetic_expressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getArithmetic_expressionArithmetic_expressionParserRuleCall_1_1_0()); }
	rulearithmetic_expression{ after(grammarAccess.getRelationAccess().getArithmetic_expressionArithmetic_expressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__OprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getOprAlternatives_0_0()); }
(rule__Arithmetic_expression__OprAlternatives_0_0)
{ after(grammarAccess.getArithmetic_expressionAccess().getOprAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__TermAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getTermTermParserRuleCall_1_0()); }
	ruleterm{ after(grammarAccess.getArithmetic_expressionAccess().getTermTermParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Oper1Assignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getOper1Alternatives_2_0_0()); }
(rule__Arithmetic_expression__Oper1Alternatives_2_0_0)
{ after(grammarAccess.getArithmetic_expressionAccess().getOper1Alternatives_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic_expression__Term1Assignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmetic_expressionAccess().getTerm1TermParserRuleCall_2_1_0()); }
	ruleterm{ after(grammarAccess.getArithmetic_expressionAccess().getTerm1TermParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getOpAlternatives_1_0_0()); }
(rule__Term__OpAlternatives_1_0_0)
{ after(grammarAccess.getTermAccess().getOpAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__FactorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getFactorFactorParserRuleCall_1_1_0()); }
	rulefactor{ after(grammarAccess.getTermAccess().getFactorFactorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__PrimaryAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getPrimaryPrimaryParserRuleCall_1_1_0()); }
	ruleprimary{ after(grammarAccess.getFactorAccess().getPrimaryPrimaryParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__NumAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getNumUNSIGNED_NUMBERTerminalRuleCall_0_0()); }
	RULE_UNSIGNED_NUMBER{ after(grammarAccess.getPrimaryAccess().getNumUNSIGNED_NUMBERTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__IntAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getIntINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getPrimaryAccess().getIntINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__StrAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getStrSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getPrimaryAccess().getStrSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__BoolAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getBoolBOOL_VALTerminalRuleCall_3_0()); }
	RULE_BOOL_VAL{ after(grammarAccess.getPrimaryAccess().getBoolBOOL_VALTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Component_referenceAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getComponent_referenceComponent_referenceParserRuleCall_7_0()); }
	rulecomponent_reference{ after(grammarAccess.getPrimaryAccess().getComponent_referenceComponent_referenceParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Output_expr_listAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getOutput_expr_listOutput_expression_listParserRuleCall_8_1_0()); }
	ruleoutput_expression_list{ after(grammarAccess.getPrimaryAccess().getOutput_expr_listOutput_expression_listParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Expre_listAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getExpre_listExpression_listParserRuleCall_9_1_0()); }
	ruleexpression_list{ after(grammarAccess.getPrimaryAccess().getExpre_listExpression_listParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Expression_listAssignment_9_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getExpression_listExpression_listParserRuleCall_9_2_1_0()); }
	ruleexpression_list{ after(grammarAccess.getPrimaryAccess().getExpression_listExpression_listParserRuleCall_9_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__F_argumentsAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getF_argumentsFunction_argumentsParserRuleCall_10_1_0()); }
	rulefunction_arguments{ after(grammarAccess.getPrimaryAccess().getF_argumentsFunction_argumentsParserRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__EndAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryAccess().getEndEndKeyword_11_0()); }
(
{ before(grammarAccess.getPrimaryAccess().getEndEndKeyword_11_0()); }

	'end' 

{ after(grammarAccess.getPrimaryAccess().getEndEndKeyword_11_0()); }
)

{ after(grammarAccess.getPrimaryAccess().getEndEndKeyword_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name_Function__Function_call_argsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getName_FunctionAccess().getFunction_call_argsFunction_call_argsParserRuleCall_1_0()); }
	rulefunction_call_args{ after(grammarAccess.getName_FunctionAccess().getFunction_call_argsFunction_call_argsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprDer__FunctionArgsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprDerAccess().getFunctionArgsFunction_call_argsParserRuleCall_1_0()); }
	rulefunction_call_args{ after(grammarAccess.getExprDerAccess().getFunctionArgsFunction_call_argsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_call_args__F_argAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_call_argsAccess().getF_argFunction_argumentsParserRuleCall_2_0()); }
	rulefunction_arguments{ after(grammarAccess.getFunction_call_argsAccess().getF_argFunction_argumentsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getExprExpressionParserRuleCall_0_0()); }
	ruleexpression{ after(grammarAccess.getExpression_listAccess().getExprExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__ExpreAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getExpreExpressionParserRuleCall_1_1_0()); }
	ruleexpression{ after(grammarAccess.getExpression_listAccess().getExpreExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Name_IDAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getName_IDIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getNameAccess().getName_IDIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Nam_IDAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getNam_IDIDENTTerminalRuleCall_2_1_0()); }
	RULE_IDENT{ after(grammarAccess.getNameAccess().getNam_IDIDENTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getRefIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getComponent_referenceAccess().getRefIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Subscripts1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getSubscripts1Array_subscriptsParserRuleCall_2_0()); }
	rulearray_subscripts{ after(grammarAccess.getComponent_referenceAccess().getSubscripts1Array_subscriptsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__Ref1Assignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getRef1IDENTTerminalRuleCall_3_1_0()); }
	RULE_IDENT{ after(grammarAccess.getComponent_referenceAccess().getRef1IDENTTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component_reference__SubscriptsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_referenceAccess().getSubscriptsArray_subscriptsParserRuleCall_3_2_0()); }
	rulearray_subscripts{ after(grammarAccess.getComponent_referenceAccess().getSubscriptsArray_subscriptsParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output_expression_list__EprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutput_expression_listAccess().getEprExpressionParserRuleCall_1_0()); }
	ruleexpression{ after(grammarAccess.getOutput_expression_listAccess().getEprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output_expression_list__ExprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutput_expression_listAccess().getExprExpressionParserRuleCall_2_1_0()); }
	ruleexpression{ after(grammarAccess.getOutput_expression_listAccess().getExprExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__SubAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getSubSubscriptParserRuleCall_1_0()); }
	rulesubscript{ after(grammarAccess.getArray_subscriptsAccess().getSubSubscriptParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array_subscripts__SubscriptAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_subscriptsAccess().getSubscriptSubscriptParserRuleCall_2_1_0()); }
	rulesubscript{ after(grammarAccess.getArray_subscriptsAccess().getSubscriptSubscriptParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subscript__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubscriptAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleexpression{ after(grammarAccess.getSubscriptAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__ArgExpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getArgExpExpressionParserRuleCall_0_1_0()); }
	ruleexpression{ after(grammarAccess.getFunction_argumentsAccess().getArgExpExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Fun_Arg_ExprAssignment_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ExprFun_Arguments_expParserRuleCall_0_2_0_0()); }
	ruleFun_Arguments_exp{ after(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ExprFun_Arguments_expParserRuleCall_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Fun_Arg_ForAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ForFun_Arguments_forParserRuleCall_0_2_1_0()); }
	ruleFun_Arguments_for{ after(grammarAccess.getFunction_argumentsAccess().getFun_Arg_ForFun_Arguments_forParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_arguments__Name_argAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_argumentsAccess().getName_argNamed_argumentsParserRuleCall_1_0()); }
	rulenamed_arguments{ after(grammarAccess.getFunction_argumentsAccess().getName_argNamed_argumentsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fun_Arguments_exp__ArgsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFun_Arguments_expAccess().getArgsFunction_argumentsParserRuleCall_1_0()); }
	rulefunction_arguments{ after(grammarAccess.getFun_Arguments_expAccess().getArgsFunction_argumentsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fun_Arguments_for__For_indicesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFun_Arguments_forAccess().getFor_indicesFor_indicesParserRuleCall_1_0()); }
	rulefor_indices{ after(grammarAccess.getFun_Arguments_forAccess().getFor_indicesFor_indicesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Named_arguments__Named_argumentsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentsAccess().getNamed_argumentsNamed_argumentsParserRuleCall_1_1_0()); }
	rulenamed_arguments{ after(grammarAccess.getNamed_argumentsAccess().getNamed_argumentsNamed_argumentsParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Named_argument__ArgAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentAccess().getArgIDENTTerminalRuleCall_0_0()); }
	RULE_IDENT{ after(grammarAccess.getNamed_argumentAccess().getArgIDENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Named_argument__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamed_argumentAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleexpression{ after(grammarAccess.getNamed_argumentAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_indices__For_indexAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indicesAccess().getFor_indexFor_indexParserRuleCall_1_1_0()); }
	rulefor_index{ after(grammarAccess.getFor_indicesAccess().getFor_indexFor_indexParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_index__IndexAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indexAccess().getIndexIDENTTerminalRuleCall_0_0()); }
	RULE_IDENT{ after(grammarAccess.getFor_indexAccess().getIndexIDENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_index__ExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_indexAccess().getExprExpressionParserRuleCall_1_1_0()); }
	ruleexpression{ after(grammarAccess.getFor_indexAccess().getExprExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_UNSIGNED_NUMBER : (('0'..'9')+ '.' ('0'..'9')* (('E'|'e') ('+'|'-')? ('0'..'9')+)?|('0'..'9')+ ('E'|'e') ('+'|'-')? ('0'..'9')+);

RULE_BOOL_VAL : ('true'|'false');

RULE_INT : ('0'..'9')+;

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_IDENT : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'.')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


